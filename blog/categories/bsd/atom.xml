<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: bsd | El SysAdmin del 3er Mundo]]></title>
  <link href="http://uranio-235.github.io/blog/categories/bsd/atom.xml" rel="self"/>
  <link href="http://uranio-235.github.io/"/>
  <updated>2017-02-02T21:59:45-05:00</updated>
  <id>http://uranio-235.github.io/</id>
  <author>
    <name><![CDATA[låzaro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ipfw simple y consiso]]></title>
    <link href="http://uranio-235.github.io/blog/2017/02/01/ipfw-simple-y-consiso/"/>
    <updated>2017-02-01T23:15:47-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/02/01/ipfw-simple-y-consiso</id>
    <content type="html"><![CDATA[<p>Algo tan simple, como las instrucciones para hacer un cortafuegos realmente
funcional ipfw; simplemente no existe, al menos de manera oficial.</p>

<p>FreeBSD no es como Linux que tiene estupendas wikis. Si bien el Handbook está
muy; completo es una referencia demasiado <em>tecnocratizada</em>. Cosas como pasar los
paquetes de conexiones relacionadas, hacer drop o &ldquo;reiniciar el cortafuegos&rdquo;, no
se tomaron la molestia de documentarlas &ldquo;bien&rdquo;. Otras cosas como el filtrado por
mac address, simplemente no funciona, a menos que hagas un ritual previo; que NO
está documentado en el man (al menos no explícitamente).</p>

<p>Para empezar, el módulo debe ser cargado en el kernel, así que inicializaremos
ipfw como si fuera un demonio más del sistema. Esto quiere decir que lo
añadiremos al <strong>/etc/rc.conf</strong></p>

<pre><code class="bash "/etc/rc.conf"">firewall_enable="YES"
firewall_type="/usr/local/etc/ipfw.rules"
</code></pre>

<p>La <a href="https://www.freebsd.org/doc/handbook/firewalls-ipfw.html">documentación oficial</a> aclara que
los firewall pueden ser (además) del tipo: open, client, simple, closed o
UNKNOWN. Sin embargo, <strong>en mi opinión</strong> estas configuraciones prefabricadas, no
son suficiente para un servidor (por ejemplo proxy).</p>

<p>En nuestro cosas, para mantener la armonía chea del sistema, colocamos el
cortafuegos en el /etc de /usr/local. Tenga en cuenta que casi todas las
aplicaciones que instales, tendrán su /etc ahí.</p>

<p>Reiniciar ipfw no es tan jamón como un usuario de iptables haría. Hacer un flush
de las reglas, significa quedarse trancado y perder la conexión por ssh. Para
reiniciar el cortafuegos, deberás tener un firewall que haga flush y además,
reiniciar el servicio.</p>

<pre><code class="bash "reiniciando ipfw"">#!/bin/csh
service ipfw stop
ipfw -q flush
service ipfw start
ipfw show
</code></pre>

<p>La documentación oficial (y otras muchas) indican que cada regla se cree
enumerada. Sin embargo, esto no es estrictamente necesario. Cada regla
incrementará el número de una manera automáticamente curiosa.</p>

<p>Veamos pues un <strong>ipfw.rules</strong> bien básico. La interfaz <strong>lo0</strong> es el localhost.
La interfaz xn0 es la WAN y xn1 es la LAN.</p>

<pre><code class="bash "ipfw.rules""># para afuera todo
ipfw -q add allow all from any to any out

# permite todo por el localhost
ipfw -q add allow all from any to any via lo0

# las conexiones que ya estén iniciadas, tíralas
ipfw -q add check-state
ipfw -q add allow tcp from any to any established
ipfw -q add allow all from any to any out keep-state

# permite que te hagan ping desde la LAN con la ip
ipfw -q add allow icmp from 10.1.1.0/24 to any via xn1

# permite que accedan al proxy desde la LAN
ipfw -q add allow tcp from any to any dst-port 3128 via xn1

# permite el servidor web pero solo deade la WAN
ipfw -q add allow tcp from any to any dst-port 80 via xn0


# descarta el resto
ipfw -q add reset
</code></pre>

<p>Veamos algunas características de este cortafuegos&hellip;</p>

<p>Otra cosa chocante de ipfw, es que la salida, por definición, está bloqueada.
Verán una regla que autoriza la salida del tráfico.</p>

<p>La política por defecto del cortafuegos del tipo &ldquo;script&rdquo; es rechazar con icmp
de vuelta. Lo que se conoce en iptables como REJECT. Por tanto, para que haga lo
que en iptables sería DROP, debemos usar un action del tipo <strong>reset</strong>.</p>

<p>Como ven, este cortafuegos no arranca haciendo flush como los de iptables. De
hecho, hacer flush como primera linea puede causarte problemas muy serios. Por
otro parte, reiniciar el cortafuegos sin hacer flush, provoca que se dupliquen
las reglas.</p>
]]></content>
  </entry>
  
</feed>
