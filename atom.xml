<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[El SysAdmin del 3er Mundo]]></title>
  <link href="http://uranio-235.github.io/atom.xml" rel="self"/>
  <link href="http://uranio-235.github.io/"/>
  <updated>2016-10-04T15:33:37-04:00</updated>
  <id>http://uranio-235.github.io/</id>
  <author>
    <name><![CDATA[låzaro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[driver broadcom]]></title>
    <link href="http://uranio-235.github.io/blog/2016/10/04/dirver-broadcom/"/>
    <updated>2016-10-04T14:53:41-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/10/04/dirver-broadcom</id>
    <content type="html"><![CDATA[<p>Cuando tienes un dispositivo inalámbrico de Broadcom, por lo general tienes un
bluetooth y una wifi. Me imagino que los broadcom modernos, tengan además dual
band (wifi de 5Ghz).</p>

<p>En la entrada anterior, mencioné que había adquirido unos audífonos bluetooth.
Pues el driver opensource <strong>brcm80211</strong> no pinchaba bien del todo con el
bluetooth. Al punto que no podía alejarme ni un metro del dispositivo, además,
que el mero echo de moverme, hacía que el audio se cortara.</p>

<p>Usar el blob (driver propietario) parecía una variante atractiva, pero el existe
el driver <strong>b43</strong> (QUE TAMBIÉN es opensource) y se jacta de ser creado con
ingeniería inversa. De un principio esto no me pareció algo atractivo; pero ya
lo había dicho el célebre comunistón Chino:</p>

<p>   <blockquote><p>Todo conocimiento auténtico nace de la experiencia directa</p><footer><strong>Mao Zedong</strong></footer></blockquote></p>

<p>Al parecer el, el driver ya viene con el sistema, sin embargo, necesita un
firmware para poder levantar el hardware. Parece que le hicieron ingenería
inversa al controlador.</p>

<p>Por suerte hay un paquete en aur que hace toda la pincha, se llama
<strong>b43-firmware</strong></p>

<p>Tras instalarlo, hay que poner en la lista negra, el driver anterior, si no se
forma un reguero tremendo a la hora de cargar los driver y seleccionará el
opensource por defecto.</p>

<figure class='code'><figcaption><span>&#8220;/etc/modprobe.d/broadcom.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema ~<span class="o">]</span><span class="nv">$ </span>cat /etc/modprobe.d/broadcom.conf
</span><span class='line'>blacklist brcmsmac
</span><span class='line'>b43
</span></code></pre></td></tr></table></div></figure>


<p>y reinicia&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[audífonos blutú]]></title>
    <link href="http://uranio-235.github.io/blog/2016/09/22/audifonos-blutu/"/>
    <updated>2016-09-22T17:39:04-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/09/22/audifonos-blutu</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://uranio-235.github.io/images/audifonos_blutu.png" width="400"></p>

<p>Más por embullo que por necesidad, me he comprado uno de esos audífonos
Bluetooth que se usan ahora. Estoy pasando un trabajo tremendo para adaptarme a
tener la morronga esa en el cuello. Como si fuera poco, archlinux no me perdonó
y me hizo de las suyas.</p>

<p>Al conectarlos se escuchaban horrible y se desaparecía el bluetooth.</p>

<p>Según me dijeron en el #archlinux de freenode. Se debe a que los audífonos se
conecta como micrófonos/audífonos y no como audífonos solamente. Para ellos
había que cambiarlos al modo A2DP.</p>

<p>El comando <strong>pacmd set-card-profile 2 a2dp_sink</strong> resuelve el problema. Pero
tener que correr el comando cada vez que los conecte, no me parece; no me da tan
fuerte todavía&hellip;</p>

<p>El gestor de audio de gnome supuestamente cambia el modo. Pero resulta que el
puto <strong>pulse-audio</strong>, si arranca con GDM, forma una cagazón con los permisos ahí
y no cambia de modo.</p>

<p>Para evitar eso, creas un fichero llamado
<strong>/var/lib/gdm/.config/pulse/client.conf</strong> donde le declaras que no arrancará
pulse-audio con gnome:</p>

<figure class='code'><figcaption><span>&#8220;/var/lib/gdm/.config/pulse/client.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">autospawn</span> <span class="o">=</span> no
</span><span class='line'>daemon-binary <span class="o">=</span> /bin/true
</span></code></pre></td></tr></table></div></figure>


<p>Pero eso no lo es todo. Si pulseaudio arranca con socket, se joden los
audifonitos. Supuestamente creando una configuración, se deshabilita el socket,
pero no pincha. Hay que deshabilitarlo con systemd. Ejecuta esto <strong>como root</strong>:</p>

<figure class='code'><figcaption><span>&#8220;sin socket plis&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span> mkdir -p /var/lib/gdm/.config/systemd/user
</span><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span> ln -s /dev/null /var/lib/gdm/.config/systemd/user/pulseaudio.socket
</span></code></pre></td></tr></table></div></figure>


<p>Reinicia y al conectar los audífonos, el al hacerle click al dipositivo, debe
darte una opción que conduce a la configuración de audio. Ahí mismo cambias el
modo y seleccionas el dispositivo de salida de audio por defecto.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dispatcher script]]></title>
    <link href="http://uranio-235.github.io/blog/2016/09/16/dispatcher-script/"/>
    <updated>2016-09-16T10:53:51-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/09/16/dispatcher-script</id>
    <content type="html"><![CDATA[<p>El network-manager, el sistema de 2 clicasos para configurar la interfaz de red.
Resulta que cuando levanta la red, no se por qué, telepathy-salut se queda
mariado y el chat &ldquo;gente cerca&rdquo; no ve a los usuarios. Al reiniciar avahi se le
quita el mareo. Entonces la talla sería que el avahi se reiniciara solo.</p>

<p>Resulta que NetworkManger, tiene los lamados dispatcher. Puedes ver
<a href="https://developer.gnome.org/NetworkManager/stable/NetworkManager.html">la documentación aquí</a></p>

<p>Conclusión, el directorio /etc/NetworkManager/dispatcher.d/ creas los
directorios <strong>up</strong> y <strong>down</strong>, dentro le pones los script que quieres que se
ejecuten. En el caso de &ldquo;up&rdquo; se ejecutará después de que suba la red.</p>

<p>Realmente tiene otros más extrafalarios como pre-up (antes de que le inaterfaz
se levante) e incluso connectivity-change para cuando cambie cualquier cosa en
la conectividad, etc&hellip; Puedes ver los detalles en el link anterior.</p>

<p>A mi me quedó así mi script:</p>

<figure class='code'><figcaption><span>&#8220;dispatcher&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@artema up<span class="o">]</span><span class="c"># cat /etc/NetworkManager/dispatcher.d/up/reiniciaavahi </span>
</span><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'>pkill -9 empathy
</span><span class='line'>pkill -9 telepathy
</span><span class='line'>systemctl restart avahi-daemon
</span></code></pre></td></tr></table></div></figure>


<p>No hay problema con para empathy, ya que el framework telepthy, será reiniciado
por dbus (con suerte).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[password de windows]]></title>
    <link href="http://uranio-235.github.io/blog/2016/08/16/password-de-windows/"/>
    <updated>2016-08-16T00:13:36-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/08/16/password-de-windows</id>
    <content type="html"><![CDATA[<p>Resulta que en el puesto de mando, uno de los tantos que se sientan ahí; le
cambió el password a la canchanfleta que tienen por computadora y entonces
NAADIEEE vio nada. Conclusión no apareció el autor de la contraseña y los
técnicos no sabían que hacer (para variar).</p>

<p>&ldquo;lázaro, tú que usas linux: ¿Podrías &#8220;hackear&rdquo; la contraseña?&#8221;</p>

<p>Pregunta uno de los usuarios, con cara de: <em>Cambié el password y no me acuerdo
cual puse</em>. Véase la definición del termino <a href="https://es.wikipedia.org/wiki/Hacker">hacker</a> y note lo mal empleado que está.</p>

<p>Metí un archlinux en la memoria flash de la pornografía, lo levanté en caliente
e instalé <strong>chntpw</strong>.</p>

<p>Monté el disco de windows, primera partición (alias &ldquo;C:&rdquo;) en /mnt. Con el
comando <strong>find</strong> y abusando de mi memoria, sobre un artículo que leí acerca de
las contraseñas de Windows; localicé el fichero <strong>C:/Windows/System32/config/SAM</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>   pacman -S chntpw
</span><span class='line'>   mount /dev/sdb1 /mnt
</span><span class='line'>   <span class="nb">cd</span> /mnt/Windows/System32/config/
</span></code></pre></td></tr></table></div></figure>


<p>Como lo hice en un sistema en caliente, no pude copiar la salida, pero esto fue
lo que hice.</p>

<p>Paso 1: Lista los usuarios de Güindos: <strong>chntpw -l SAM</strong></p>

<p>Paso 2: Modifica el usuario &ldquo;Administrador&rdquo;: <strong>chntpw -u &ldquo;Administrador&rdquo; SAM</strong></p>

<p>Verás un pequeño asistente en modo texto que te pregunta que hacer. Lo mejor es
vaciar el password, luego desbloquearlo. Sale con <strong>quit</strong> y te preguntará si
quieres guardar los cambios. No te preocupes, se entiende mejor cuando lo ves,
es bastante simple.</p>

<p>Gracias a dios que a <a href="https://es.wikipedia.org/wiki/Bill_Gates">Rico McPato</a> no se le ocurrió meter la contraseña en el registro de windows.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kiwix como servicio]]></title>
    <link href="http://uranio-235.github.io/blog/2016/07/31/kiwix-como-servicio/"/>
    <updated>2016-07-31T17:40:02-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/07/31/kiwix-como-servicio</id>
    <content type="html"><![CDATA[<p>Dos pájaros de un tiro. Como crear unit de usuario y como usar kiwix como
servicio:</p>

<p>La idea es correr un kiwix en segundo plano, como mi usuario sin que el root
lance dicha unit, ya que ésto me huele a la posibilidad de escaladas de
permisos.</p>

<p>Ante todo, vamos a crear el zoológico de systemd en el directorio de usuario.
Si mal no recuerdo, esto fue lo que hice.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p /home/lazaro/.config/systemd/user
</span><span class='line'><span class="nb">cd</span>  /home/lazaro/.config/systemd/user
</span><span class='line'>loginctl <span class="nb">enable</span>-linger <span class="nv">$USER</span>
</span><span class='line'>systemctl --user daemon-reload
</span></code></pre></td></tr></table></div></figure>


<p>Claro, el daemon-reload ahí no es necesario, pero para que te quede claro, que
todas las operaciones de systemd, relacionadas con el usuario, se deben preceder
del argumento &ndash;user</p>

<p>Crea el la unit, en mi caso se llama <strong>kiwix.service</strong> pero tu la puedes nombrar
<strong>comotedelagana.service</strong> Trata de usar minúsculas y debes terminar con la
extensión <strong>.service</strong> A mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;kiwix.service&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="k">[Unit]</span>
</span><span class='line'><span class="na">Description</span><span class="o">=</span><span class="s">el kiwix como daemon en http://localhost:9091</span>
</span><span class='line'><span class="na">After</span><span class="o">=</span><span class="s">network.target</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Service]</span>
</span><span class='line'><span class="na">Type</span><span class="o">=</span><span class="s">forking</span>
</span><span class='line'><span class="na">ExecStart</span><span class="o">=</span><span class="s">/opt/kiwix/bin/kiwix-serve --daemon --port=9091 --library /home/lazaro/.www.kiwix.org/kiwix/c2oklrcd.default/data/library/library.xml </span>
</span><span class='line'>
</span><span class='line'><span class="k">[Install]</span>
</span><span class='line'><span class="na">WantedBy</span><span class="o">=</span><span class="s">multi-user.target</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora si mete un <strong>daemon-reload</strong></p>

<p>Por cierto, fíjate bien en la linea <strong>ExecStart</strong> que es bien larga, nota que el
parámetro <strong>&ndash;library</strong> se le envía como argumento el <strong>.xml</strong> que se genera al
añadir fichero zim a tu librería. O sea, una vez abierto en la aplicación
visual. Por tanto, Si vas a hacer un servidor, mejor será que le eches un
vistazo a <strong>library.xml</strong>; el cual contiene los metadatos que apuntan a los
&ldquo;ficheros.zim&rdquo;</p>

<p>Más o menos así luce un <strong>library.xml</strong></p>

<figure class='code'><figcaption><span>&#8220;library.xml&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;library</span> <span class="na">current=</span><span class="s">&quot;b0e8b25e-1c6e-c354-21da-ceff3607de21&quot;</span> <span class="na">version=</span><span class="s">&quot;20110515&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;book</span> <span class="na">id=</span><span class="s">&quot;3b448cdb-6b20-73ed-421f-fdef87f80167&quot;</span> <span class="na">path=</span><span class="s">&quot;/opt/kiwix/data/wikipedia_es_all.zim&quot;</span> <span class="na">last=</span><span class="s">&quot;1470535686&quot;</span> <span class="na">title=</span><span class="s">&quot;Wikipedia ESP&quot;</span> <span class="na">description=</span><span class="s">&quot;Wikipedia en Español&quot;</span> <span class="na">language=</span><span class="s">&quot;spa&quot;</span> <span class="na">creator=</span><span class="s">&quot;Wikipedia&quot;</span> <span class="na">publisher=</span><span class="s">&quot;Kiwix&quot;</span> <span class="na">favicon=</span><span class="s">&quot;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&quot;</span> <span class="na">faviconMimeType=</span><span class="s">&quot;image/png&quot;</span> <span class="na">date=</span><span class="s">&quot;2015-10-12&quot;</span> <span class="na">articleCount=</span><span class="s">&quot;1206089&quot;</span> <span class="na">mediaCount=</span><span class="s">&quot;1111559&quot;</span> <span class="na">size=</span><span class="s">&quot;12988257&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;book</span> <span class="na">id=</span><span class="s">&quot;b0e8b25e-1c6e-c354-21da-ceff3607de21&quot;</span> <span class="na">path=</span><span class="s">&quot;/opt/kiwix/data/wikipedia_en_all_nopic.zim&quot;</span> <span class="na">last=</span><span class="s">&quot;1470535759&quot;</span> <span class="na">title=</span><span class="s">&quot;Wikipedia ENG&quot;</span> <span class="na">description=</span><span class="s">&quot;Wikipedia en Inglés (sin imágenes)&quot;</span> <span class="na">language=</span><span class="s">&quot;eng&quot;</span> <span class="na">creator=</span><span class="s">&quot;Wikipedia&quot;</span> <span class="na">publisher=</span><span class="s">&quot;Kiwix&quot;</span> <span class="na">favicon=</span><span class="s">&quot;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&quot;</span> <span class="na">faviconMimeType=</span><span class="s">&quot;image/png&quot;</span> <span class="na">date=</span><span class="s">&quot;2015-05-17&quot;</span> <span class="na">articleCount=</span><span class="s">&quot;4858372&quot;</span> <span class="na">mediaCount=</span><span class="s">&quot;325904&quot;</span> <span class="na">size=</span><span class="s">&quot;16024312&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/library&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Por ejemplo, a mi el valor de las etiquetas <em>title</em> y <em>description</em>, me gusta cambiarlo.</p>

<p>Para que se gener ese XML, abre la aplicación <strong>una vez</strong> para que se cree la biblioteca. O sea, en abrir
archivos, añadimos a nuestra librería, todos los .zim que queramos.</p>

<p><img class="center" src="http://uranio-235.github.io/images/kiwix-open.png" width="500"></p>

<p>Llegado a este punto, se habrá creado el perfil de kiwix en nuestro $HOME y
contendrá el importantísimo <strong>library.xml</strong>. Si ya añadiste a tu biblioteca
todos los <strong>.zim</strong> que quieres, terminamos con el kiwix. Ciérralo.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema ~<span class="o">]</span><span class="nv">$ </span>file .www.kiwix.org/kiwix/*.default
</span><span class='line'>.www.kiwix.org/kiwix/c2oklrcd.default: directory
</span></code></pre></td></tr></table></div></figure>


<p>Usamos el comando <strong>file</strong> para determinar cual fue. En mi caso se llama
<strong>~/.www.kiwix.org/kiwix/c2oklrcd.default</strong></p>

<p>Al argumento <strong>ExecStart</strong> de la unit, debes darle la ruta absoluta de la
librería, así que nada de ~/, le pones /home/fulanito.</p>

<p>Bueno, volviendo a la unit, veamos más de cerca el <strong>ExecStart</strong></p>

<figure class='code'><figcaption><span>&#8220;scope de kiwix.service&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">ExecStart</span><span class="o">=</span><span class="s">/opt/kiwix/bin/kiwix-serve --daemon --port=9091 --library /home/lazaro/.www.kiwix.org/kiwix/c2oklrcd.default/data/library/library.xml </span>
</span></code></pre></td></tr></table></div></figure>


<p>La ruta el binario de <strong>kiwix-serve</strong> en modo daemon <strong>&ndash;daemon</strong> por el puerto
9091 <strong>&ndash;port 9091</strong> y siendo la librería <strong>&ndash;library (ruta absoluta)</strong></p>

<p>Salva y ejecuta un daemon-reload. Luego, lánzalo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>systemctl --user start kiwix.service
</span></code></pre></td></tr></table></div></figure>


<p>Abre un navegador y apunta para <a href="http://localhost:9091">http://localhost:9091</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hibernar en archlinux]]></title>
    <link href="http://uranio-235.github.io/blog/2016/07/17/hibernar-en-archlinux/"/>
    <updated>2016-07-17T23:17:17-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/07/17/hibernar-en-archlinux</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://uranio-235.github.io/images/Hibernacion_by_Zetabox.jpg" width="250"></p>

<p>Hablando de cosas olvidables. Siempre que instalo archlinux, se me olvida que
hay que hacer una ceremonia para que la hibernación pinche.</p>

<p>De más está que te diga que necesitarás una <strong>particion</strong> swap, con al menos el
mismo tamaño de la RAM que tienes. No pincha con swapfiles.</p>

<p>En mi caso, yo hice una swap del tamaño de la RAM, lo cual me jode a la hora de
hibernar, ya que se demora mucho descartando los datos que hay en la swap (si
hay) en el momento de hibernar.</p>

<p>Bueno entrando en materia:</p>

<p>En el GRUB, le daremos el parámetros <strong>resume</strong> y usaremos como argumento, el
disco de donde se resume, o sea <strong>la swap</strong>. Veamos cual es el UUID de la swap:</p>

<figure class='code'><figcaption><span>fstab</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat /etc/fstab <span class="p">|</span>grep swap
</span><span class='line'><span class="nv">UUID</span><span class="o">=</span>2b3ed70d-5746-4a94-bd07-77eacd99f03c  none swap defaults,discard<span class="o">=</span>pages <span class="m">0</span> 0
</span></code></pre></td></tr></table></div></figure>


<p>Vamos al cargador de arranque (grub en mi caso) y le decimos cual es el disco de
donde debe tomar la imagen y resumirla. Localiza el fichero <strong>/etc/default/grub</strong>
y en una de las primeras lineas, modifica la cláusula <strong>GRUB_CMDLINE_LINUX_DEFAULT</strong>
inclúyele <strong>resume=UUID=LaUUiDeTuDisCoSwap</strong>. A mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;la parte de arriba de</span><a href='http://uranio-235.github.io/etc/default/grub'>&#8221;</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">GRUB_DEFAULT</span><span class="o">=</span><span class="s">0</span>
</span><span class='line'><span class="na">GRUB_TIMEOUT</span><span class="o">=</span><span class="s">5</span>
</span><span class='line'><span class="na">GRUB_DISTRIBUTOR</span><span class="o">=</span><span class="s">&quot;Arch&quot;</span>
</span><span class='line'><span class="na">GRUB_CMDLINE_LINUX_DEFAULT</span><span class="o">=</span><span class="s">&quot;ipv6.disable=1 resume=UUID=2b3ed70d-5746-4a94-bd07-77eacd99f03c&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como ven, ahí declaramos (EL UUID DE <strong>LA SWAP</strong>) la partición donde se almacena
la imagen que crea el proceso de hibernación.</p>

<p>Pero no todo está listo, aún initramfs no se ha dado por enterado que vamos a
hibernar. Localiza el fichero <strong>/etc/mkinitcpio.conf</strong> y añadele el <strong>hook</strong> de
resume, a mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;fragmento de mkinitcpio.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1">##   NOTE: If you have /usr on a separate partition, you MUST include the</span>
</span><span class='line'><span class="c1">#    usr, fsck and shutdown hooks.</span>
</span><span class='line'><span class="na">HOOKS</span><span class="o">=</span><span class="s">&quot;base udev resume autodetect modconf block filesystems keyboard fsck&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Generalmente debes ponerlo después de <strong>udev</strong> y antes de <strong>autodetect</strong>. No te
olvides de regnerar el initramfs:</p>

<figure class='code'><figcaption><span>initramfs</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkinitcpio -p linux
</span></code></pre></td></tr></table></div></figure>


<p>Si te molesta que la swap haga su pincha de swap (como en mi caso) puede
deshabilitar el swapiness. Crea un fichero <strong>/etc/sysctl.d/00-noswap.conf</strong>
y ponle adentro el siguiete valor: <strong>vm.swappiness=0</strong></p>

<p>Y hibernan como los osos :D</p>

<p>Seguro te preguntarás como hacer que se ejecute algo al hibernar o despertar.
Pues puedes crear una unit llamadas <strong>root-resume</strong> y <strong>root-suspend</strong>.</p>

<p>Por
ejemplo, a mi en lo personal, me interesa parar el puto networkmanager cuando
hiberno, ya que es poco probable que cuando despierte, esté en otro lugar y
probablemente sin red. En mi caso yo habilito el networkmanager solo cuando lo
necesito. En este caso, asumiré que para al hibernar y enciende al despertar.</p>

<figure class='code'><figcaption><span>&#8220;/etc/systemd/system/root-suspend.service&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="k">[Unit]</span>
</span><span class='line'><span class="na">Description</span><span class="o">=</span><span class="s">Local system suspend actions</span>
</span><span class='line'><span class="na">Before</span><span class="o">=</span><span class="s">sleep.target</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Service]</span>
</span><span class='line'><span class="na">Type</span><span class="o">=</span><span class="s">simple</span>
</span><span class='line'><span class="na">ExecStart</span><span class="o">=</span><span class="s">/usr/bin/systemctl stop NetworkManager</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Install]</span>
</span><span class='line'><span class="na">WantedBy</span><span class="o">=</span><span class="s">sleep.target</span>
</span></code></pre></td></tr></table></div></figure>


<p>Al despertar arranca:</p>

<figure class='code'><figcaption><span>&#8220;/etc/systemd/system/root-resume.service &#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="k">[Unit]</span>
</span><span class='line'><span class="na">Description</span><span class="o">=</span><span class="s">Local system suspend actions</span>
</span><span class='line'><span class="na">Before</span><span class="o">=</span><span class="s">sleep.target</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Service]</span>
</span><span class='line'><span class="na">Type</span><span class="o">=</span><span class="s">simple</span>
</span><span class='line'><span class="na">ExecStart</span><span class="o">=</span><span class="s">/usr/bin/systemctl start NetworkManager</span>
</span><span class='line'>
</span><span class='line'><span class="k">[Install]</span>
</span><span class='line'><span class="na">WantedBy</span><span class="o">=</span><span class="s">sleep.target</span>
</span></code></pre></td></tr></table></div></figure>


<p>Todo lo que necesitas está en el artículo de la wiki de archlinux: <a href="https://wiki.archlinux.org/index.php/Power_management">Power Management</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rsync básico]]></title>
    <link href="http://uranio-235.github.io/blog/2016/07/17/rsync-basico/"/>
    <updated>2016-07-17T16:49:25-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/07/17/rsync-basico</id>
    <content type="html"><![CDATA[<p>Este es el tipo de cosas que uno hace cada 120 días y claro, cuando lo vas hacer
ya se te olvidó; así que para el blog:</p>

<p>Como compartir un directorio vía rsyncd. En el siguiente ejemplo, usaré mi
directorio de Downloads, donde tengo cosas que copiar por SSH requiere mucha
entropía y la copia se vuelve lenta, por ejemplo, los ficheros con la wikipedia
(kiwix)</p>

<p>La configuración de <strong>rsyncd</strong> radica en un lugar bastante obvio:
<strong>/etc/rsyncd.conf</strong> a mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/rsyncd.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">max connections</span> <span class="o">=</span> <span class="s">2</span>
</span><span class='line'><span class="na">log file</span> <span class="o">=</span> <span class="s">/var/log/rsync.log</span>
</span><span class='line'><span class="na">timeout</span> <span class="o">=</span> <span class="s">300</span>
</span><span class='line'>
</span><span class='line'><span class="k">[descargas]</span>
</span><span class='line'>   <span class="na">comment</span> <span class="o">=</span> <span class="s">las cosas que descargué</span>
</span><span class='line'><span class="s">   path = /home/lazaro/Download/</span>
</span><span class='line'><span class="s">   read only = yes</span>
</span><span class='line'><span class="s">   list = yes </span>
</span><span class='line'><span class="s">   uid = lazaro</span>
</span><span class='line'><span class="s">   gid = nobody</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahí tenemos el directorio <strong>descargas</strong> servido por rsyncd. Vamos a efectuar una
copia:</p>

<figure class='code'><figcaption><span>&#8220;rsync&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rsync --include<span class="o">=</span><span class="s1">&#39;*.gz&#39;</span> --exclude<span class="o">=</span><span class="s1">&#39;*&#39;</span>  -aPv rsync://pub@10.1.1.187/descargas/ ./
</span></code></pre></td></tr></table></div></figure>


<p>En ese ejemplo, usamos los parámetros <strong>&ndash;include</strong> y <strong>&ndash;exclude</strong>, para copiar
solamente los fichero <strong>.gz</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[correos del cron]]></title>
    <link href="http://uranio-235.github.io/blog/2016/06/20/correos-del-cron/"/>
    <updated>2016-06-20T14:14:06-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/06/20/correos-del-cron</id>
    <content type="html"><![CDATA[<p>Conflictivísima tarea, lograr que el cron mande correos adecuadamente&hellip; En este
caso, cronie, da la solución al problema. Aunque me imagino que dicha
configuración sea estándar para el cron.</p>

<p>Así es la cosa, declaramos <strong>MAILTO</strong> y <strong>MAILFROM</strong> como unas variables en el
fichero crontab.</p>

<figure class='code'><figcaption><span>crontab</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="c1"># DO NOT EDIT THIS FILE - edit the master and reinstall.</span>
</span><span class='line'><span class="c1"># (/tmp/crontab.f36hiB/crontab installed on Tue May  5 08:48:38 2015)</span>
</span><span class='line'><span class="c1"># (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># añadimos las variables</span>
</span><span class='line'><span class="na">MAILTO</span><span class="o">=</span><span class="s">root@tudominio.cu</span>
</span><span class='line'><span class="na">MAILFROM</span><span class="o">=</span><span class="s">cron@tudominio.cu</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># m h  dom mon dow   command</span>
</span><span class='line'><span class="err">00</span> <span class="err">00</span> <span class="err">*</span> <span class="err">*</span> <span class="err">*</span> <span class="err">/bin/bash</span> <span class="err">/home/fulanito/script.sh</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora faltaría un MTA. Pues la solución más sensilla es <strong>esmtp</strong> y su
configuración sería más o menos así en el fichero <strong>/etc/esmtprc</strong></p>

<figure class='code'><figcaption><span>&#8220;/etc/esmtprc&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="err">identity</span> <span class="err">micuenta</span>
</span><span class='line'>   <span class="err">hostname</span> <span class="err">smtp.tudominio.cu</span>
</span><span class='line'>   <span class="err">username</span> <span class="err">&quot;cron&quot;</span>
</span><span class='line'>   <span class="err">password</span> <span class="err">&quot;pinpanpun&quot;</span>
</span><span class='line'>   <span class="err">starttls</span> <span class="err">enabled</span>
</span><span class='line'>   <span class="err">default</span>
</span><span class='line'><span class="err">mda</span> <span class="err">&quot;/usr/bin/procmail</span> <span class="err">-d</span> <span class="err">%T&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Listo! El correo <a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#x72;&#x6f;&#111;&#x74;&#64;&#116;&#x75;&#x64;&#x6f;&#109;&#x69;&#x6e;&#105;&#x6f;&#x2e;&#x63;&#117;">&#114;&#111;&#x6f;&#x74;&#x40;&#116;&#x75;&#x64;&#111;&#x6d;&#x69;&#110;&#x69;&#x6f;&#x2e;&#99;&#x75;</a> recibirá correos de <a href="&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#99;&#114;&#111;&#x6e;&#x40;&#x74;&#x75;&#x64;&#111;&#109;&#x69;&#x6e;&#x69;&#111;&#46;&#x63;&#x75;">&#x63;&#x72;&#111;&#110;&#x40;&#116;&#117;&#x64;&#111;&#x6d;&#x69;&#x6e;&#105;&#111;&#x2e;&#99;&#117;</a> con la
salida del cron&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dkim y spf en postfix]]></title>
    <link href="http://uranio-235.github.io/blog/2016/06/18/dkim-y-spf-en-postfix/"/>
    <updated>2016-06-18T13:57:51-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/06/18/dkim-y-spf-en-postfix</id>
    <content type="html"><![CDATA[<p>Aunque no de mi agrado, reconozco que es una solución muy buena. DKIM y SPF, se
ha vuelto hoy en día un mecanismo para mitigar el SPAM en el correo electrónico.</p>

<p>Esto no quita, que un spammer puede hacerse con un buen esquema de DKIM para sus
dominos de porquería; lo cual sería un estupendo negocio, teniendo en cuenta que
un servidor puede tener tantos dominios como quiera. Si conoce a algún spammer
que quiera tener DKIM y SPF en su negocio, por favor, mándele mi tarjeta.</p>

<p>Me imagino que a los usuarios de nauta, les duela bajar un mensaje que
aparentemente tiene dos lineas, pagando por uno que realmente tiene más de 20
líneas de pura mierda que no les incumbe. Espero que etecsa se digne a retirar
encabezados innecesarios como esos (para el cliente).</p>

<p>Por otra parte, mucha gente tiene antivirus que modifican el correo o son
fanáticos a instalar mil gangarreas (mailscanner, clamav, etc&hellip;) que también
modifican el correo. Con esto, DKIM y SPF <strong>se van a la mierda</strong>.</p>

<p>Le diré que hice con un postfix que ya estaba instalado en un debian8 para
ponerle DKIM y SPF.</p>

<p>Instalamos los jueguetes requeridos ante todo:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>apt-get install opendkim opendkim-tools postfix-policyd-spf-python
</span></code></pre></td></tr></table></div></figure>


<p>y establecemos los permisos adecuados, ojo con esto, ya que dkim es muy riguroso
con el tema de los permisos</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adduser postfix opendkim
</span></code></pre></td></tr></table></div></figure>


<h2>SPF</h2>

<p>Ahora procedemos a crear el registro DNS. Como hay muchos DNS y cada quién tiene
sus preferencias, me reduciré a describir de manera abstracta los registros.
Usted, aterrize la idea en su DNS.</p>

<h3>Esto tiene <strong>DOS</strong> formas de hacerse:</h3>

<h4>La primera:</h4>

<p>Declarar que TODOS los <strong>MX</strong> del dominio, pueden mandar correo (lo cual
inspira desconfianza) en este caso, registra un puntero del tipo <strong>TXT</strong> con el
siguiente valor</p>

<pre><code>v=spf1 mx -all
</code></pre>

<p>Por ejemplo, bind9</p>

<figure class='code'><figcaption><span>&#8220;registro&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">@               IN      TXT     &quot;v</span><span class="o">=</span><span class="s">spf1 mx -all&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>La segunda:</h4>

<p>Declarar que un host, que tiene un registro <strong>A</strong>, está autorizado a enviar
correos (esta me gusta más, si tienes un solo servidor de correo) Si fueran
varios, por ejemplo 3. Podrías declarar un A para cada uno y de manera
individual, ellos generarían su SPF apuntándose a si mismo.</p>

<pre><code>v=spf1 a:mx1.tudominio.cu -all
</code></pre>

<p>Como ya sabemos, un puntero MX siempre deberá apuntar a un rgistro A, ya que no
se recomienda apuntar a un CNAME&hellip;</p>

<p><strong>Nota para los apurados:</strong> &ldquo;Si declaras ambos registros, no pincha, LEE!!&rdquo;</p>

<p>Otra cosa, puedes declarar <strong>-all</strong> o <strong>~all</strong> El primero le dirá al receptor
que si el correo no viene del dominio que dice enviarlo (el puntero A o los MX),
lo rechace porque es falso (muy radical) y el segundo, que empieza por ~ le
indica al receptor, que puede recibir el mensaje y si no pude verificarlo que lo
marque como spam, pero que por favor, no lo rechaze.</p>

<p>Esto nos lleva a una:</p>

<h3>Situación peligrosa</h3>

<p>Cuba, un descerebrado configuró verificación de DKIM, <strong>porque está de moda</strong>.
PERO! Está detrás de un smarthost (pasarela) o simplemente, su configuración de
DNS no vale un quilo (por culpa del proveedor)</p>

<p>Metedura de pata - A:</p>

<p>Ese servidor de correo, que se cree <em>Oggun con machete en mano</em>; descartará todo
correo con <strong>-all</strong> debido a su incapacidad de realizar un lookup decente.</p>

<p>Metedura de pata - B:</p>

<p>Uno más descerebrado todavía, vio que DKIM estaba de moda y sin importar que no
tiene control de su DNS, lo hizo todo, saltándose el paso del DNS. Su servidor
le estará gritando a toda voz al mundo entero, <strong>que está falseando el dominio</strong></p>

<p>Su ignorancia le costará caer de cabeza en las listas negras&hellip;</p>

<p>Y es que:</p>

<p>Generalmente, los servidores que entregan a través de un smarthost, carecen de
DNS real. También hay una pila de gente que administran servidores sin tener
control de su DNS.</p>

<h4>Seguimos&hellip;</h4>

<p>Ya que tenemos el SPF pinchando, podemos añadirle chequeo de SPF a nuestro
postfix <strong>que tiene bien configurado el DNS y entrega de cara a internet sin
smarthost</strong></p>

<p>En el fichero <strong>/etc/postfix/master.cf</strong> le agregamos esto:</p>

<figure class='code'><figcaption><span>master.cf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="err">policyd-spf</span>  <span class="err">unix</span>  <span class="err">-</span>       <span class="err">n</span>       <span class="err">n</span>       <span class="err">-</span>       <span class="err">0</span>       <span class="err">spawn</span>
</span><span class='line'>    <span class="na">user</span><span class="o">=</span><span class="s">policyd-spf argv=/usr/bin/policyd-spf</span>
</span></code></pre></td></tr></table></div></figure>


<p>y a los posftfix cubanos, le decimos que sea paciente con el proceso de
verificación, incrementando el tiempo que tiene que esperar por el policyd, ya
que dicha verificación puede tardar (dns lookup, cpu a tope, etc..) Añadimos
esto a <strong>/etc/postfix/main.cf</strong></p>

<figure class='code'><figcaption><span>main.cf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">policyd-spf_time_limit</span> <span class="o">=</span> <span class="s">3600</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora viene una parte complicada, pues no hay manera de que pueda reflejarla
como para copiar y pegar.</p>

<p>Deberás modificar tus reglas de postfix, de forma que antepongas el chequeo SPF,
como una más de tus restricciones de recibo. Para mi caso, está bien la última
linea.</p>

<figure class='code'><figcaption><span>&#8220;scpe del main.cf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">smtpd_sender_restrictions</span> <span class="o">=</span><span class="s"></span>
</span><span class='line'><span class="s">   reject_non_fqdn_sender,</span>
</span><span class='line'><span class="s">   reject_non_fqdn_recipient,</span>
</span><span class='line'><span class="s">   permit_sasl_authenticated,</span>
</span><span class='line'><span class="s">   reject_unknown_sender_domain,</span>
</span><span class='line'><span class="s">   reject_unknown_recipient_domain,</span>
</span><span class='line'><span class="s">   reject_rbl_client bl.spamcop.net,</span>
</span><span class='line'><span class="s">   reject_rbl_client sbl.spamhaus.org,</span>
</span><span class='line'><span class="s">   reject_rbl_client xbl.spamhaus.org,</span>
</span><span class='line'><span class="s">   defer_unauth_destination,</span>
</span><span class='line'><span class="s">   reject_unverified_sender,</span>
</span><span class='line'><span class="s">   check_policy_service unix:private/policyd-spf</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reinicia postfix y chequea el <strong>/var/log/mail.log</strong> para que veas SPF pinchando.</p>

<h2>DKIM</h2>

<p>Me parece que la configuración de DKIM en debian está buena, pero por si las
moscas. Copias esta que pongo aquí y métela en tu <strong>/etc/opendkim.conf</strong></p>

<figure class='code'><figcaption><span>/etc/opendkim.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="err">Syslog</span>          <span class="err">yes</span>
</span><span class='line'><span class="err">UMask</span>           <span class="err">002</span>
</span><span class='line'><span class="err">UserID</span>          <span class="err">opendkim</span>
</span><span class='line'><span class="err">KeyTable</span>        <span class="err">/etc/opendkim/key.table</span>
</span><span class='line'><span class="err">SigningTable</span>        <span class="err">refile:/etc/opendkim/signing.table</span>
</span><span class='line'><span class="err">ExternalIgnoreList</span>  <span class="err">/etc/opendkim/trusted.hosts</span>
</span><span class='line'><span class="err">InternalHosts</span>       <span class="err">/etc/opendkim/trusted.hosts</span>
</span><span class='line'><span class="err">Canonicalization</span>    <span class="err">relaxed/simple</span>
</span><span class='line'><span class="err">Mode</span>            <span class="err">sv</span>
</span><span class='line'><span class="err">SubDomains</span>      <span class="err">no</span>
</span><span class='line'><span class="c1">#ADSPAction     continue</span>
</span><span class='line'><span class="err">AutoRestart</span>     <span class="err">yes</span>
</span><span class='line'><span class="err">AutoRestartRate</span>     <span class="err">10/1M</span>
</span><span class='line'><span class="err">Background</span>      <span class="err">yes</span>
</span><span class='line'><span class="err">DNSTimeout</span>      <span class="err">5</span>
</span><span class='line'><span class="err">SignatureAlgorithm</span>  <span class="err">rsa-sha256</span>
</span><span class='line'><span class="err">OversignHeaders</span>     <span class="err">From</span>
</span></code></pre></td></tr></table></div></figure>


<p>De ahí puede que quizás te interese la variables <strong>SubDomains</strong>, sobre todo si
eres proveedor de correo.</p>

<p>Como ya te dije, los permisos son sumamente importantes en este caso</p>

<figure class='code'><figcaption><span>permisos</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod <span class="nv">u</span><span class="o">=</span>rw,go<span class="o">=</span>r /etc/opendkim.conf
</span></code></pre></td></tr></table></div></figure>


<p>Ahora creamos el directorio donde vamos a meter todo el zoológico requerido para
que DKIM pinche. Hay quién prefiere meterlo en <strong>/var</strong>, para mi en
<strong>/etc/opendkim</strong> es un buen lugar.</p>

<figure class='code'><figcaption><span>&#8220;creando el directorio de residencia&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir /etc/opendkim
</span><span class='line'>mkdir /etc/opendkim/keys
</span><span class='line'>chown -R opendkim:opendkim /etc/opendkim
</span><span class='line'>chmod go-rw /etc/opendkim/keys
</span></code></pre></td></tr></table></div></figure>


<h3>La Firma</h3>

<p>Ahora vamos a crear la <em>tabla de rúbricas</em> (se aceptan contribuciones para
traducir). Ahí, ponemos una linea por cada dominio que tengas. Creas el fichero
<strong>/etc/opendkim/signing.table</strong> y está recomendado que le pongas lo siguiente:</p>

<figure class='code'><figcaption><span>&#8220;como dicen que debe ser&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'>   <span class="err">*@tudominio.cu</span>   <span class="err">tudominio</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Nota para los imbéciles:</strong> No olvide remplazar <em>tudominio.cu</em> por el nombre
del dominio suyo.</p>

<p>Con eso, casamos todos los correos que parezcan a tu dominio, con el DKIM que
llamamos &ldquo;tudominio&rdquo;, si quiere atrás le puede poner &ldquo;pepe&rdquo;. Lo que debe
quedarte claro, es que todos los correos que macheen a la expresión regular de
alante, pasarán por el filtro llamado <em>tudominio</em> (o &ldquo;pepe&rdquo; si lo cambiaste) ¿Se
entendió?</p>

<p>Por ejemplo, si tu dominio fuera *@cacocum.hlg.sld.cu podrías ponerle detrás
&ldquo;midkim&rdquo; para que todos los correos de ese dominio, se firmen con la firma que
será configurada bajo el nombre &ldquo;midkim&rdquo; Quedaría así:</p>

<pre><code>  *@cacocum.hlg.sld.cu  midkim
</code></pre>

<p>Resumen:</p>

<p>El primero campo, es una expresión regular que mache las direcciones de correo y
el segundo el nombre de la firma que se usará. Para mayor confusión, se
recomienda que se hagan nombres parecidos. Finalmente nos quedó así:</p>

<figure class='code'><figcaption><span>/etc/opendkim/signing.table</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="err">*@tudominio.cu</span>    <span class="err">tudominio</span>
</span></code></pre></td></tr></table></div></figure>


<h3>La clave</h3>

<p>Ahora creamos el fichero, donde le diremos a &ldquo;midkim&rdquo; donde va a encontrar su
parafernalia cifradora. Crea el fichero <strong>/etc/opendkim/key.table</strong> y ponle
dentro esto:</p>

<figure class='code'><figcaption><span>/etc/opendkim/key.table</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="err">tudominio</span>     <span class="err">tudominio.cu:YYYYMM:/etc/opendkim/keys/example.private</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>IMPORTANTE</strong></p>

<p>Remplaza <strong>YYYYMM</strong> por el año y el número de mes en el que estamos.</p>

<p><strong>SI NO, NO PINCHA</strong></p>

<p>A mi me quedó así:</p>

<figure class='code'><figcaption><span>/etc/opendkim/key.table</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="err">tudominio</span>     <span class="err">tudominio.cu:201606:/etc/opendkim/keys/example.private</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya que estamos en el año <strong>2016</strong> y el mes <strong>0</strong>6 no el 6 (lleva cero delante).</p>

<p>Ojo aquí, ya que si tienes más dominios, es complicado. Nota que debes reflejar
a localhost con sus pertinentes ip, además, tu nombre de host, tu dominio y el
nombre del host conjugado con el dominio. Siendo entonces <strong>fulanito</strong> el nombre
del host, quedaría así en el fichero <strong>/etc/opendkim/trusted.hosts</strong></p>

<figure class='code'><figcaption><span>/etc/opendkim/trusted.hosts</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="err">127.0.0.1</span>
</span><span class='line'><span class="err">::1</span>
</span><span class='line'><span class="err">localhost</span>
</span><span class='line'><span class="err">fulanito</span>
</span><span class='line'><span class="err">fulanito.dominio.cu</span>
</span><span class='line'><span class="err">dominio.cu</span>
</span></code></pre></td></tr></table></div></figure>


<p>Los permisos, ya tu sabes:</p>

<figure class='code'><figcaption><span>&#8220;seteando permisos&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chown -R opendkim:opendkim /etc/opendkim
</span><span class='line'>chmod -R go-rwx /etc/opendkim/keys
</span></code></pre></td></tr></table></div></figure>


<p>FINALMENTE! Vamos a generar la clave para el dominio:</p>

<figure class='code'><figcaption><span>&#8220;generando las claves&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /etc/opendkim/keys/
</span><span class='line'>opendkim-genkey -b <span class="m">2048</span> -r -s 201606
</span></code></pre></td></tr></table></div></figure>


<p>Las claves se generan en base a la fecha, pero luego se colocan en base al
dominio. Esto se hace porque <strong>hay que renovarlos</strong> pero si configuramos
opendkim para que apunte a un fichero cuyo nombre sea la fecha, tendríamos que
cambiar la configuración cada vez que renovamos.</p>

<figure class='code'><figcaption><span>&#8220;la clave por su nombre&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mv 201606.private tudominio.private
</span><span class='line'>mv 201606.txt tudominio.txt
</span></code></pre></td></tr></table></div></figure>


<p>Si tu clave se llamase &ldquo;pepe&rdquo; o &ldquo;midkim&rdquo;, ya sabes que esos ficheros se
llamarían &ldquo;pepe.private&rdquo; o &ldquo;tudkim.txt&rdquo; ¿Entiendes ahora? Seguimos&hellip;</p>

<p>El argumento <strong>-b</strong> indica la longitud de clave en Bit. En otros tiempo 1024 era
la tisa, pero ahora, se recomienda usar 2048 porque las máquinas son más
potentes. Quizás dentro de un par de años, sea 4096.</p>

<p>Bueno, ya sabes, la ceremonia de los permisos:</p>

<figure class='code'><figcaption><span>&#8220;seteando permisos&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chown -R opendkim:opendkim /etc/opendkim
</span><span class='line'>chmod -R go-rw /etc/opendkim/keys
</span></code></pre></td></tr></table></div></figure>


<p>Arranca opendkim y asegúrate mirando los; log que esté pinchando.</p>

<figure class='code'><figcaption><span>&#8220;arranca opendkim&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>systemctl restart opendkim
</span><span class='line'>systemctl status -l opendkim
</span></code></pre></td></tr></table></div></figure>


<h2>El DNS</h2>

<p>El patico feo de internet, el DNS. El remedio que se inventó pa ir tirando y
acabó quedándose con su pésimo diseño y su horrible arquitectura que hasta el
sol de hoy, pretende llamarse &ldquo;distribuida&rdquo;.</p>

<p>Agregamos le registro TXT con la clave. Te cuento que el fichero &ldquo;.txt&rdquo; contiene
el tabaco base64 que usualmente vemos en el encabezado DKIM-Signature, pues
proviene de este registro TXT que estamos creando.</p>

<p>Añade un registro del tipo TXT que apunte a un hostname llamado
<strong>201606._domainkey</strong> dentro de tu domino. Pero ahora viene la parte difícil:</p>

<p>Copia <strong>el texto</strong> que contiene el fichero tudominio.txt dentro de la primera
comilla hasta la última, pero sin tomar las comillas.</p>

<p><strong>¿Se entendió?</strong></p>

<p>O sea, dentro del fichero tiene esto:</p>

<figure class='code'><figcaption><span>&#8220;tudominio.txt&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">201606._domainkey  IN  TXT ( &quot;**v</span><span class="o">=</span><span class="s">DKIM1; k=rsa; s=email; &quot; &quot;p=ZjiONVGXom64jANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu5oIUrFDWZK7F4thFxpZa2or6jBEX3cSL6b2TJdPkO5iNn9vHNXhNX31nOefN8FksX94YbLJ8NHcFPbaZTW8R2HthYxRaCyqodxlLHibg8aHdfa+bxKeiI/xABRuAM0WG0JEDSyakMFqIO40ghj/h7DUc/4OXNdeQhrKDTlgf2bd+FjpJ3bNAFcMYa3Oeju33b2Tp+PdtqIwXR&quot; &quot;ZksfuXh7m30kuyavp3Uaso145DRBaJZA55lNxmHWMgMjO+YjNeuR6j4oQqyGwzPaVcSdOG8Js2mXt+J3Hr+nNmJGxZUUW4Uw5ws08wT9opRgSpn+ThX2d1AgQePpGrWOamC3PdcwIDAQAB**&quot;)  ; ----- DKIM key 201606 for tudominio.cu</span>
</span></code></pre></td></tr></table></div></figure>


<p>Al extraer la parte que nos interesa, no quedamos con esto (sin las comillas)</p>

<figure class='code'><figcaption><span>&#8220;la clave sin las comillas&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">**v</span><span class="o">=</span><span class="s">DKIM1; k=rsa; s=email; p=ZJiONVGXom64zhNjwdAmo2XnMhAXeGXxB0p5PJkHxUk5XMXNaoUbMwfGOBOQYKsiQp0k9KwcYu2SNAlcFrGIugPG035Ng4r8mlBRLS5+dak90HuH+hb2d8aa+djRFn4PIS2RcAZZJgJjRgF1NbWZpBlj8IpXJ7MywrUxtj1e+TU/tCiWQxCc9uMqgWA53NeqRGEFPwCuTfDMKWbbMhZkbe+pOOtEqQBQ0HsvJ3n09ZNhh3AjbNP6JOpAyK+4hqHohDTrLhxdSFsNiaoAaJXsxDdAHIs2U3QNmrbAFEg7aPOBgaHLXv28k88EDqo4cIuOxa/c24e3F4O6TY3fpydRmekadtCW+waY3aCIIwIA7DdAABFUTR3ABI8WnFTjgDyj1/IQ53Af**</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>OJO</strong> Tiene más comillas en el medio!!!!</p>

<p>Auxíliate de un editor de texto decente. Deshabilita el wrap y busca la comilla
como cadena de texto.</p>

<p>Ese texto, será el valor del puntero TXT</p>

<p>A mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;puntero TXT de 201606._domainkey&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">201601._domainkey    IN      TXT     &quot;**v</span><span class="o">=</span><span class="s">DKIM1; k=rsa; s=email; p=ZJiONVGXom64zhNjwdAmo2XnMhAXeGXxB0p5PJkHxUk5XMXNaoUbMwfGOBOQYKsiQp0k9KwcYu2SNAlcFrGIugPG035Ng4r8mlBRLS5+dak90HuH+hb2d8aa+djRFn4PIS2RcAZZJgJjRgF1NbWZpBlj8IpXJ7MywrUxtj1e+TU/tCiWQxCc9uMqgWA53NeqRGEFPwCuTfDMKWbbMhZkbe+pOOtEqQBQ0HsvJ3n09ZNhh3AjbNP6JOpAyK+4hqHohDTrLhxdSFsNiaoAaJXsxDdAHIs2U3QNmrbAFEg7aPOBgaHLXv28k88EDqo4cIuOxa/c24e3F4O6TY3fpydRmekadtCW+waY3aCIIwIA7DdAABFUTR3ABI8WnFTjgDyj1/IQ53Af**&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Completo! Vamos a probarlo a ver que pasa:</p>

<figure class='code'><figcaption><span>&#8220;1, 2, 3, probando&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>opendkim-testkey -d example.com -s 201606
</span></code></pre></td></tr></table></div></figure>


<p>Si sale silentemente sin mostrar algo. Es que todo está bien.</p>

<h3>opendkim y postfix</h3>

<p>Finalmente, nuestro postfix tendrá el privilegio de firmar los correos usando el
aparataje recién configurado. Vamos a crearle un cuartico de dkim en la casa de
postfix</p>

<figure class='code'><figcaption><span>&#8220;dkim en postfix&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir /var/spool/postfix/opendkim
</span><span class='line'>chown opendkim:postfix /var/spool/postfix/opendkim
</span></code></pre></td></tr></table></div></figure>


<p>y habilitamos el socket de opendkim, editando el fichero <strong>/etc/default/opendkim</strong></p>

<figure class='code'><figcaption><span>/etc/default/opendkim</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="c1"># Command-line options specified here will override the contents of</span>
</span><span class='line'><span class="c1"># /etc/opendkim.conf. See opendkim(8) for a complete list of options.</span>
</span><span class='line'><span class="c1">#DAEMON_OPTS=&quot;&quot;</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Uncomment to specify an alternate socket</span>
</span><span class='line'><span class="c1"># Note that setting this will override any Socket value in opendkim.conf</span>
</span><span class='line'><span class="na">SOCKET</span><span class="o">=</span><span class="s">&quot;local:/var/spool/postfix/opendkim/opendkim.sock&quot;</span>
</span><span class='line'><span class="c1">#SOCKET=&quot;inet:54321&quot; # listen on all interfaces on port 54321</span>
</span><span class='line'><span class="c1">#SOCKET=&quot;inet:12345@localhost&quot; # listen on loopback on port 12345</span>
</span><span class='line'><span class="c1">#SOCKET=&quot;inet:12345@192.0.2.1&quot; # listen on 192.0.2.1 on port 12345</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note como retiramos el comentario de la línea 7</p>

<p>Ahora declaramos en postfix que debe usar a opendkim como demonio de
preprocesamiento en el típico <strong>/etc/postfix/main.cf</strong></p>

<figure class='code'><figcaption><span>/etc/postfix/main.cf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="c1"># Milter configuration</span>
</span><span class='line'><span class="c1"># OpenDKIM</span>
</span><span class='line'><span class="na">milter_default_action</span> <span class="o">=</span> <span class="s">accept</span>
</span><span class='line'><span class="na">milter_protocol</span> <span class="o">=</span> <span class="s">2</span>
</span><span class='line'><span class="na">smtpd_milters</span> <span class="o">=</span> <span class="s">local:/opendkim/opendkim.sock</span>
</span><span class='line'><span class="na">non_smtpd_milters</span> <span class="o">=</span> <span class="s">local:/opendkim/opendkim.sock</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finalmente, reinicia opendkim y postfix</p>

<figure class='code'><figcaption><span>&#8220;systemctl&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>systemctl restart opendkim postfix
</span></code></pre></td></tr></table></div></figure>


<h3>COMPLETO!!!</h3>

<p>Con eso hemos terminado. Para probarlo, puede enviar un correo a <a href="mailto:check-auth@verifier.port25.com">check-auth@verifier.port25.com</a></p>

<p>Esa dirección le hará una prueba al DKIM+SPF de tu correo. No solo eso, le hará
una prueba del Pi al Pa a tu correo y te dirá todo lo que necesitas.</p>

<p>Si quieres ponerle la guinda al pastel, puede añadirle ADSP (Author Domain
Signing Practices) a tu esquema. Esto indica que todos los correos que salgan de
tu dominio deben estar firmados con DKIM, proveiendo aún más confianza al
receptor.</p>

<p>Crea un registro <strong>TXT</strong> para el hostname <strong><em>adsp.</em>domainkey</strong> y el valor del
TXT será <strong>dkim=all</strong>. A mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;registro&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">_adsp._domainkey     IN      TXT     &quot;dkim</span><span class="o">=</span><span class="s">all&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Con eso, tus correos no caerán más en la bandeja SPAM de gmail.</p>

<p>Otra cosa importante, asegúrate de tener el reverse lookup de tu MX bien puesto.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[desacelerar mouse]]></title>
    <link href="http://uranio-235.github.io/blog/2016/06/06/desacelerar-mouse/"/>
    <updated>2016-06-06T23:41:44-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/06/06/desacelerar-mouse</id>
    <content type="html"><![CDATA[<p>El reducido espacio de trabajo que tengo en la casa para colocar la laptop; me
hace sentir como si viviera en el apartamento más pequeño de Tokio. Tanto así,
que no tengo ni donde desplazar el mouse y los cables me la ponen aún más
difícil. Comprar una casa más grande no es una opción; sin embargo, reducir el
mouse es más viable. Se me ocurrió adquirir un mouse inalámbrico, ya que son
pequeñitos.</p>

<p>Pero un mouse pequeño liviano, resulta que se desplaza mucho más rápido, que mi
antiguo <em>General Electric Pixart Inc. Optical Mouse</em>. Lo que más me molesta es;
no solo lo rápido que se desplaza, si no el <em>picor</em> que tiene en la aceleración.</p>

<p>La solución: Desacelerar el mouse</p>

<figure class='code'><figcaption><span>&#8220;slowmouse.sh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>xinput --set-prop <span class="m">10</span> <span class="s2">&quot;Device Accel Constant Deceleration&quot;</span> 0.5
</span><span class='line'>xinput --set-prop <span class="m">10</span> <span class="s2">&quot;Device Accel Velocity Scaling&quot;</span> 1
</span><span class='line'>xinput --set-prop <span class="m">10</span> <span class="s2">&quot;Device Accel Profile&quot;</span> -1
</span></code></pre></td></tr></table></div></figure>


<p>Con eso, el mouse pequeñito, se desplaza tal como lo hace el grande. Ya que el
grande, es más pesado y por ende, se desplaza un tín mas lento.</p>

<p><strong>¡¡¡Tardé bastante en quedar complacido probando números!!!</strong></p>

<p>Por cierto, el <strong>10</strong> es la id del dispositivo. Puedes verlo corriendo el
comando <strong>xinput &ndash;list &ndash;short</strong> a mi se me ve así:</p>

<figure class='code'><figcaption><span>&#8220;xinput &#8211;list &#8211;short&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>lazaro@samsung ~&gt; xinput --list --short
</span><span class='line'>⎡ Virtual core pointer                      <span class="nv">id</span><span class="o">=</span>2 <span class="o">[</span>master pointer  <span class="o">(</span>3<span class="o">)]</span>
</span><span class='line'>⎜   ↳ Virtual core XTEST pointer                  <span class="nv">id</span><span class="o">=</span>4 <span class="o">[</span>slave  pointer  <span class="o">(</span>2<span class="o">)]</span>
</span><span class='line'>⎜   ↳ PixArt USB Optical Mouse                    <span class="nv">id</span><span class="o">=</span>10    <span class="o">[</span>slave  pointer  <span class="o">(</span>2<span class="o">)]</span>
</span><span class='line'>⎜   ↳ ETPS/2 Elantech Touchpad                    <span class="nv">id</span><span class="o">=</span>12    <span class="o">[</span>slave  pointer  <span class="o">(</span>2<span class="o">)]</span>
</span><span class='line'>⎣ Virtual core keyboard                     <span class="nv">id</span><span class="o">=</span>3 <span class="o">[</span>master keyboard <span class="o">(</span>2<span class="o">)]</span>
</span><span class='line'>    ↳ Virtual core XTEST keyboard               <span class="nv">id</span><span class="o">=</span>5 <span class="o">[</span>slave  keyboard <span class="o">(</span>3<span class="o">)]</span>
</span><span class='line'>    ↳ Power Button                              <span class="nv">id</span><span class="o">=</span>6 <span class="o">[</span>slave  keyboard <span class="o">(</span>3<span class="o">)]</span>
</span><span class='line'>    ↳ Video Bus                                 <span class="nv">id</span><span class="o">=</span>7 <span class="o">[</span>slave  keyboard <span class="o">(</span>3<span class="o">)]</span>
</span><span class='line'>    ↳ Power Button                              <span class="nv">id</span><span class="o">=</span>8 <span class="o">[</span>slave  keyboard <span class="o">(</span>3<span class="o">)]</span>
</span><span class='line'>    ↳ Sleep Button                              <span class="nv">id</span><span class="o">=</span>9 <span class="o">[</span>slave  keyboard <span class="o">(</span>3<span class="o">)]</span>
</span><span class='line'>    ↳ AT Translated Set <span class="m">2</span> keyboard
</span></code></pre></td></tr></table></div></figure>


<p>Como ve, el <em>PixArt USB Optical Mouse</em> dice que <strong>id=10</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[deshabilitar historial de bash]]></title>
    <link href="http://uranio-235.github.io/blog/2016/05/12/deshabilitar-historial-de-bash/"/>
    <updated>2016-05-12T14:34:13-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/05/12/deshabilitar-historial-de-bash</id>
    <content type="html"><![CDATA[<p>Alguna vez han pensado, que en algunos servidores o estaciones, en las cual
trabajan múltiples personas remotamente via consola; el historial de comandos
puede llegar a ser un problema???</p>

<p>Pues deshabilítalo. En el fichero <strong>/etc/environment</strong> ponle</p>

<figure class='code'><figcaption><span>&#8220;/etc/environment&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>   <span class="nb">export </span><span class="nv">HISTFILE</span><span class="o">=</span>/dev/null
</span></code></pre></td></tr></table></div></figure>


<p>La próxima vez que etres, la función historial será deshabilitada. OJO!!! <strong>LA
PRÓXIMA VEZ</strong> esta sesión aún salva historial&hellip; Sale y vuelve a entrar.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[reparar archivos de innodb]]></title>
    <link href="http://uranio-235.github.io/blog/2016/04/29/reparar-archivos-de-innodb/"/>
    <updated>2016-04-29T23:22:33-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/04/29/reparar-archivos-de-innodb</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://uranio-235.github.io/images/hypno.png"></p>

<p>Los archivos binarios que almacenan las bases de datos de mysql (percona o
mariadb) suelen acabar corruptos o dañados por fallos eléctricos. Al mirar el
log, podemos ver que, a pesar de que la base de datos funciona; por un motivo u
otro, hay miles de warning y los ficheros binarios se vuelven cada vez más
frágiles.</p>

<p>Solución, exportar TODAS las bases de datos un fichero &ldquo;.sql&rdquo;, reinstalar mysql
e importar las bases de datos. Tenga en cuenta que también se crean los
usuarios y sus debidos permisos. Por tanto, su usuario de root se configurará de
manera automática.</p>

<figure class='code'><figcaption><span>&#8220;mysqldump&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysqldump --all-databases &gt; dumpeo.sql
</span></code></pre></td></tr></table></div></figure>


<p>Desinstalar mySQL y eliminar los ficheros binarios, generalmente están en
/var/lib/mysql Por último, instala mySQL y restaura las bases de datos.</p>

<figure class='code'><figcaption><span>&#8220;mysqldump&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql &lt; dumpeo.sql
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WPA2 con freeradius]]></title>
    <link href="http://uranio-235.github.io/blog/2016/04/01/wpa2-con-freeradius/"/>
    <updated>2016-04-01T13:13:59-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/04/01/wpa2-con-freeradius</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://uranio-235.github.io/images/wireless_defense.png" width="190" height="290"></p>

<p>Ahora con el bun de la WiFi, comienzan las necesidades básicas, como cifrado de
red y protección de acceso. Todavía el cubano no sabe la diferencia entre
<a href="https://es.wikipedia.org/wiki/Wired_Equivalent_Privacy">WEP</a> y
<a href="https://es.wikipedia.org/wiki/Wi-Fi_Protected_Access">WPA</a> pero bueno, para el
que lea esto, el tutorial va por el camino duro pero correcto.</p>

<p>¿Qué haremos?</p>

<p>Configurar <a href="http://w1.fi/hostapd/">hostapd</a> con <a href="http://freeradius.org/">freeradius</a> para proveer una WiFi con WPA2</p>

<p>Si no sabes que cosa es <a href="http://lmgtfy.com/?q=como+funciona+WPA2">WPA2 míralo aquí</a></p>

<p>Para la ocasión, usaremos ArchLinux y requeriremos los paquetes siguientes
<strong>hostapd</strong> y <strong>freeradius</strong>. ¿No tengo que decirte como instalarlos verdad?
Entonces, supongamos que tienes la WiFi en <strong>wlan0</strong>.</p>

<p>Vamos a empezar de atrás pa alante, el AP. Como no tenemos un ap profesional muy
de pinga, vamos a usar hostapd. A mi la configuración me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/hostapd/hostapd.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">ssid</span><span class="o">=</span>APconLinux
</span><span class='line'><span class="nv">interface</span><span class="o">=</span>wlp2s0b1
</span><span class='line'><span class="nv">driver</span><span class="o">=</span>nl80211
</span><span class='line'><span class="nv">ieee8021x</span><span class="o">=</span>1
</span><span class='line'><span class="nv">hw_mode</span><span class="o">=</span>g
</span><span class='line'><span class="nv">channel</span><span class="o">=</span>1
</span><span class='line'><span class="nv">wpa</span><span class="o">=</span>2
</span><span class='line'><span class="nv">wpa_key_mgmt</span><span class="o">=</span>WPA-EAP
</span><span class='line'><span class="nv">rsn_pairwise</span><span class="o">=</span>CCMP
</span><span class='line'><span class="nv">auth_algs</span><span class="o">=</span>1
</span><span class='line'><span class="nv">auth_server_addr</span><span class="o">=</span>127.0.0.1
</span><span class='line'><span class="nv">auth_server_port</span><span class="o">=</span>1812
</span><span class='line'><span class="nv">auth_server_shared_secret</span><span class="o">=</span>mifortalezaimperial
</span></code></pre></td></tr></table></div></figure>


<p>Ahora localizamos el fichero donde se configura el EAP, en el caso de archlinux,
este fichero está en <strong>/etc/raddb/mods-enabled/eap</strong> ahí localizamos una linea
que dice <strong>default_eap_type</strong> y donde dice <strong>md5</strong> y le ponemos <strong>peap</strong>. A mi
me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/raddb/mods-enabled/eap&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>   eap <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>   <span class="nv">default_eap_type</span> <span class="o">=</span> peap
</span><span class='line'>
</span><span class='line'>   <span class="c"># (el resto del fichero)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Esa cláusula está por la línea 27&hellip; Bueno ahora vamos a declarar los usaurios
en el fichero <strong>users</strong> el mio está en <strong>/etc/raddb/users</strong>, ahí le pones al
fondo el usuario y el password, a mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/raddb/users&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  <span class="c"># (la parte de arriba del fichero)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># el usaurio secretísimo</span>
</span><span class='line'>  usuario Cleartext-Password :<span class="o">=</span> <span class="s2">&quot;secretisimo&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora declararemos la dirección IP del AP, que en este caso, sería un cliente
radius eso está en el fichero <strong>clients.conf</strong>.</p>

<figure class='code'><figcaption><span>&#8220;/etc/raddb/clients.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>client 127.0.0.1 <span class="o">{</span>
</span><span class='line'>   <span class="nv">secret</span> <span class="o">=</span> mifortalezaimperial
</span><span class='line'>   <span class="nv">shortname</span> <span class="o">=</span> hostapd
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Le declaramos que el cliente que se conecte desde la 127.0.0.1 usando como
secreto la cadena de texto &ldquo;mifortalezaimperial&rdquo; será hostapd.</p>

<p>Bueno, vamos a empezar la conga, instrumento por instrumento. Primero el AP</p>

<p><strong>hostapd /etc/hostapd/hostapd.conf</strong></p>

<figure class='code'><figcaption><span>&#8220;hostapd&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Configuration file: /etc/raddb/hostapd.conf
</span><span class='line'>Using interface wlp2s0b1 with hwaddr 4c:ed:de:df:ad:f1 and ssid <span class="s2">&quot;APconLinux&quot;</span>
</span><span class='line'>RADIUS: socket<span class="o">[</span>PF_INET6,SOCK_DGRAM<span class="o">]</span>: Address family not supported by protocol
</span><span class='line'>wlan0: RADIUS Authentication server 127.0.0.1:1812
</span><span class='line'>wlan0: interface state UNINITIALIZED-&gt;ENABLED
</span><span class='line'>wlan0: AP-ENABLED
</span></code></pre></td></tr></table></div></figure>


<p>Ahora el radius:</p>

<p><strong>raduisd -X</strong></p>

<figure class='code'><figcaption><span>&#8220;radiusd&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Listening on auth address 127.0.0.1 port <span class="m">1812</span> bound to server default
</span><span class='line'>Listening on acct address * port <span class="m">1813</span> bound to server default
</span><span class='line'>Listening on auth address 127.0.0.1 port <span class="m">18120</span> bound to server inner-tunnel
</span><span class='line'>Listening on proxy address * port 38055
</span><span class='line'>Ready to process requests
</span></code></pre></td></tr></table></div></figure>


<p>Y el toque final, dnsmasq como DHCP</p>

<figure class='code'><figcaption><span>&#8220;dnsmasq&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ip a a 10.0.0.1/24 dev wlan0
</span><span class='line'>
</span><span class='line'><span class="c"># OJO linea larga</span>
</span><span class='line'>dnsmasq -a 10.0.0.1 -F 10.0.0.2,10.0.0.100 -i wlan0 -K --log-dhcp  -R -d --log-queries --log-dhcp
</span></code></pre></td></tr></table></div></figure>


<p>Te recuerdo, que si android, al conectarse a una WiFi, no recibe ip, considera
que hubo error de autenticación&hellip;</p>

<p>Al escanear verás algo como esto.</p>

<p><img class="center" src="http://uranio-235.github.io/images/wpa2-1.png"></p>

<p>Note como dice que APconLinux, está asegurada con 802.1x y al intentar
conectarte, verás algo como esto:</p>

<p><img class="center" src="http://uranio-235.github.io/images/wpa2-2.png"></p>

<p>Desliza el menú ese, para que veas lo que está al fondo. Ahí es donde va la
burumba. Donde dice <strong>identity</strong> pones el usuario, donde dice <strong>Anonymous
Identity</strong>, LO DEJAS EN BLANCO y donde dice <strong>password</strong> pones el precio actual
de la libra de papa.</p>

<p><img class="center" src="http://uranio-235.github.io/images/wpa2-3.png"></p>

<p>Se quedará un ratico en <strong>Authenticating&hellip;</strong></p>

<p>Mientras tanto, <strong>hostapd</strong> mostrará algo como esto</p>

<figure class='code'><figcaption><span>&#8220;salida de hostapd&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wlan0: STA 78:9e:d0:f2:9e:ad IEEE 802.11: authenticated
</span><span class='line'>wlan0: STA 78:9e:d0:f2:9e:ad IEEE 802.11: associated <span class="o">(</span>aid 1<span class="o">)</span>
</span><span class='line'>wlan0: CTRL-EVENT-EAP-STARTED 78:9e:d0:f2:9e:ad
</span><span class='line'>wlan0: CTRL-EVENT-EAP-PROPOSED-METHOD <span class="nv">vendor</span><span class="o">=</span><span class="m">0</span> <span class="nv">method</span><span class="o">=</span>1
</span><span class='line'>wlan0: STA 78:9e:d0:f2:9e:ad WPA: pairwise key handshake completed <span class="o">(</span>RSN<span class="o">)</span>
</span><span class='line'>wlan0: AP-STA-CONNECTED 78:9e:d0:f2:9e:ad
</span><span class='line'>wlan0: STA 78:9e:d0:f2:9e:ad RADIUS: starting accounting session EFB68C31-00000000
</span><span class='line'>wlan0: STA 78:9e:d0:f2:9e:ad IEEE 802.1X: authenticated - EAP <span class="nb">type</span>: <span class="m">25</span> <span class="o">(</span>PEAP<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y radius dirá algo como esto:</p>

<figure class='code'><figcaption><span>&#8220;salida de freeradius&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">(</span>9<span class="o">)</span> eap: Sending EAP Success <span class="o">(</span>code 3<span class="o">)</span> ID <span class="m">112</span> length 4
</span><span class='line'><span class="o">(</span>9<span class="o">)</span> eap: Freeing handler
</span><span class='line'><span class="o">(</span>9<span class="o">)</span>     <span class="o">[</span>eap<span class="o">]</span> <span class="o">=</span> ok
</span><span class='line'><span class="o">(</span>9<span class="o">)</span>   <span class="o">}</span> <span class="c"># authenticate = ok</span>
</span><span class='line'><span class="o">(</span>9<span class="o">)</span> <span class="c"># Executing section post-auth from file /etc/raddb/sites-enabled/default</span>
</span><span class='line'><span class="o">(</span>9<span class="o">)</span> Sent Access-Accept Id <span class="m">9</span> from 127.0.0.1:1812 to 127.0.0.1:58792 length 0
</span><span class='line'><span class="o">(</span>9<span class="o">)</span>   MS-MPPE-Recv-Key <span class="o">=</span> 0x486910b6930c3d5beae2e5831a3d15545066fcd8964d4a396d9950f1d2142b59
</span><span class='line'><span class="o">(</span>9<span class="o">)</span>   MS-MPPE-Send-Key <span class="o">=</span> 0xcfbf7ae337d7bd5c9e747c2a6f5864746b308523d7a4fb261bc1b32a5cdafce2
</span><span class='line'><span class="o">(</span>9<span class="o">)</span>   EAP-Message <span class="o">=</span> 0x03700004
</span><span class='line'><span class="o">(</span>9<span class="o">)</span>   Message-Authenticator <span class="o">=</span> 0x00000000000000000000000000000000
</span><span class='line'><span class="o">(</span>9<span class="o">)</span>   User-Name <span class="o">=</span> <span class="s2">&quot;username&quot;</span>
</span><span class='line'><span class="o">(</span>9<span class="o">)</span> Finished request
</span></code></pre></td></tr></table></div></figure>


<p>La salida de dnsmasq quizás estes aburrido de verla, nada nuevo, le dio la ip,
etc&hellip; dnsmasq es necesario en este caso para completar la autenticación ya que
nuestro hostapd no tiene un dhcp incluído. Más adelante, veremos que radius
puede asignar una ip a cada usaurio e incluso se tira contra mysql, pero ahora
mismo esto es un experimento para familiarizarnos con radius, así que con eso
bastará.</p>

<p>Pasamos a comerciales y próximamente veremos como hace con MySQL, no te prometo
nada, solo lo haré si logro vender el producto; ya que aquí somos partidarios de
que &ldquo;la wifi sin contraseña es más fácil&rdquo; sin pensar en riesgos&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[misterio con ethernet foxconn]]></title>
    <link href="http://uranio-235.github.io/blog/2016/03/14/misterio-con-ethernet-foxconn/"/>
    <updated>2016-03-14T14:52:46-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/03/14/misterio-con-ethernet-foxconn</id>
    <content type="html"><![CDATA[<p>Para nadie es un secreto que foxconn, no le descarga a Linux. Hacen mil mierdas
para entorpecerlo cuando corre sobre su hardware.</p>

<p>Uno de los misterios, es cuando las tajetas de red permiten conexiones, pues dan
ping sin problema. Pero al intentar transferir grandes bloques de red, da
timeout.</p>

<p>Problema, el tamaño del MTU por defecto en sus putas tarjetas</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ip l set dev eth0 mtu 1492</span></code></pre></td></tr></table></div></figure>


<p>Veremos con que se bajan la próxima vez</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cargar rvm]]></title>
    <link href="http://uranio-235.github.io/blog/2016/03/07/cargar-rvm/"/>
    <updated>2016-03-07T21:25:44-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/03/07/cargar-rvm</id>
    <content type="html"><![CDATA[<p>De siempre, desplegar Ruby con <a href="https://rvm.io/">RVM</a>, ha sido un método
catalogado de &ldquo;burdo&rdquo; o &ldquo;sucio&rdquo; aunque sin dudas, es el más rápido.</p>

<p>Un problema que se enfrenta con RVM, es a la hora de integrarlo a entornos que
no carguen el bashrc modificado por el instalador. Por ejemplo, un script de
arrancada con el sistema o un script del cron.</p>

<p>He aquí un ejemplo, de un escript.sh que levanta una aplicación de ruby on
rails, luego de haber cargado el entorno de RVM.</p>

<figure class='code'><figcaption><span>&#8220;startapp.sh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="nb">cd</span> /opt/aplicacion
</span><span class='line'><span class="nb">source</span> /usr/local/rvm/environments/default
</span><span class='line'>unicorn -l 0:8080 -D
</span></code></pre></td></tr></table></div></figure>


<p>Como vemos, el dichero en <strong>environments</strong> carga todas las variables de entorno
requerida y de facto; <strong>unicorn</strong> pasa a ser un ejecutable, ya que <strong>$PATH</strong>
ahora contiene también la ruta bin/ donde se instalaron las gemas&hellip;</p>

<p>Problema <em>resolvido</em>&hellip;</p>

<p>Note en caso de tener varios rubies instalados, en environments, tendrás junto a
default, los demás script necesarios para cargar dichos rubies.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[data confirm en un boton]]></title>
    <link href="http://uranio-235.github.io/blog/2016/02/22/data-confirm-en-un-boton/"/>
    <updated>2016-02-22T14:20:33-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/02/22/data-confirm-en-un-boton</id>
    <content type="html"><![CDATA[<p>Usualmente, tenemos un botón en un formulario y nos gustaría que al pulsar este,
nos preguntara algo para confirmar. He aquí un buen ejemplo:</p>

<figure class='code'><figcaption><span>&#8221;_navbar.html.erb&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='rhtml'><span class='line'>  <span class="cp">&lt;%=</span> <span class="n">form_tag</span> <span class="n">manager_email_path</span><span class="p">,</span><span class="ss">class</span><span class="p">:</span> <span class="s1">&#39;navbar-form navbar-left&#39;</span><span class="p">,</span><span class="ss">role</span><span class="p">:</span> <span class="s1">&#39;search&#39;</span><span class="p">,</span><span class="nb">method</span><span class="p">:</span> <span class="ss">:post</span> <span class="k">do</span> <span class="cp">%&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">&quot;email&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">class=</span><span class="s">&quot;form-control&quot;</span> <span class="na">placeholder=</span><span class="s">&quot;fulanito@infomed.sld.cu&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>     <span class="cp">&lt;%=</span> <span class="n">button_tag</span><span class="p">(</span><span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">&quot;btn btn-default&quot;</span><span class="p">,</span> <span class="ss">data</span><span class="p">:</span> <span class="p">{</span><span class="ss">:confirm</span> <span class="o">=&gt;</span> <span class="s1">&#39;Seguro?&#39;</span><span class="p">}</span> <span class="p">)</span> <span class="k">do</span> <span class="cp">%&gt;</span>
</span><span class='line'>        Enviar
</span><span class='line'>     <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</span><span class='line'>  <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[los hooks de pacman]]></title>
    <link href="http://uranio-235.github.io/blog/2016/02/20/hooks-de-pacman/"/>
    <updated>2016-02-20T03:14:28-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/02/20/hooks-de-pacman</id>
    <content type="html"><![CDATA[<p>Finalmente, después de tantas plegarias, tenemos <strong>hooks</strong> en pacman. Lo cual
nos permite, por medio de la poderosa API de alpm correr script antes o después
de cada instalación.</p>

<p>Desgraciadamente, hay poca documentación sobre el tema. Para colmo, la página de
man de alpm-hooks, no dice como deben llamarse los archivos. Tuve que adivinar
que la extensión <strong>.hook</strong> era necesaria.</p>

<p>Primero que todo, vamos a especificar en <strong>/etc/pacman.conf</strong> que el directorio
de hooks está en otro lado.</p>

<figure class='code'><figcaption><span>&#8220;escope de</span><a href='http://uranio-235.github.io/etc/pacman.conf"'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">HookDir</span> <span class="o">=</span> /etc/pacman.d/hooks/
</span></code></pre></td></tr></table></div></figure>


<p>¿Por qué aquí? Muy sencillo. Quiero que al hacer una salva de mi configuración
de pacman, los hooks también se salven. Un hook sencillo, podría correr un
comando simple, como el del ejemplo en la página de man; sin embargo, uno
complejo, sería mejor ponerlo en un script.</p>

<p>Lo más importante: El fichero con el hook <strong>debe tener la extensión .hook</strong> Si
no pacman se limpia el culo con él.</p>

<p>Creemos uno de ejemplo, llamado /etc/pacman.d/hooks/migancho<strong>.hook</strong> y
digámosle que ejecutará el script, sito en /etc/pacman.d/hooks/migancho.sh</p>

<p>Sería así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/pacman.d/hooks/migancho.hook&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>Trigger<span class="o">]</span>
</span><span class='line'><span class="nv">Operation</span> <span class="o">=</span> Install
</span><span class='line'><span class="nv">Operation</span> <span class="o">=</span> Upgrade
</span><span class='line'><span class="nv">Operation</span> <span class="o">=</span> Remove
</span><span class='line'><span class="nv">Type</span> <span class="o">=</span> Package
</span><span class='line'><span class="nv">Target</span> <span class="o">=</span> *
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Action<span class="o">]</span>
</span><span class='line'><span class="nv">Description</span> <span class="o">=</span> sincronizando disco
</span><span class='line'><span class="nv">Depends</span> <span class="o">=</span> coreutils
</span><span class='line'><span class="nv">When</span> <span class="o">=</span> PostTransaction
</span><span class='line'><span class="nv">Exec</span> <span class="o">=</span> /etc/pacman.d/hooks/migancho.sh
</span></code></pre></td></tr></table></div></figure>


<p>Como ve, la cláusula <strong>Operation</strong> está repetida, con los 3 posibles momentos
que se disparará el gancho. Podrías hacerlo en uno de ellos solamente. La
cláusula <strong>Description</strong> se verá cuando pacman termine de instalar. En este caso
cuando termine, ya que la cláusula <strong>When</strong> especifica <em>PreTransaction</em> o
<em>PostTransaction</em> (antes o después de la transacción).</p>

<p>Ahora creamos el script <strong>migancho.sh</strong> y le ponemos todas las aberraciones que
queremos llevar a cabo tras una instalación, desinstalación o actualización.</p>

<p>Digamos por ejemplo, en este caso uno trivial, ejecutar sync cuando termine una
operación, lo cual evita que si falla la energía en ese momento, queden datos
por escribirse en la cache disco (con suerte).</p>

<figure class='code'><figcaption><span>&#8220;/etc/pacman.d/hooks/migancho.sh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>/usr/bin/sync
</span></code></pre></td></tr></table></div></figure>


<p>Veámoslo en acción</p>

<figure class='code'><figcaption><span>&#8220;el hook&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span><span class="c"># pacman -S --noconfirm unrar</span>
</span><span class='line'>warning: unrar-1:5.3.11-1 is up to date -- reinstalling
</span><span class='line'>resolving dependencies...
</span><span class='line'>looking <span class="k">for</span> conflicting packages...
</span><span class='line'>
</span><span class='line'>Packages <span class="o">(</span>1<span class="o">)</span> unrar-1:5.3.11-1
</span><span class='line'>
</span><span class='line'>Total Installed Size:  0.32 MiB
</span><span class='line'>Net Upgrade Size:      0.00 MiB
</span><span class='line'>
</span><span class='line'>:: Proceed with installation? <span class="o">[</span>Y/n<span class="o">]</span>
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> checking keys in keyring                                                   <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> checking package integrity                                                 <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> loading package files                                                      <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> checking <span class="k">for</span> file conflicts                                                <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> checking available disk space                                              <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'>:: Processing package changes...
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> reinstalling unrar                                                         <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'>:: Running post-transaction hooks...
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> sincronizando disco
</span><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span><span class="c">#</span>
</span></code></pre></td></tr></table></div></figure>


<p>Véanlo como dice <em>sincronizando discos</em> en español, corriendo la operación (1/1)
ya que hay un solo hook.</p>

<p>Sencillo!!! Como todo en ArchLinux: KISS</p>

<p>Podría volverse más creativo&hellip;</p>

<p>Digamos por ejemplo, que yo quiero tener la lista de paquetes que tiene mi
sistema antes y después de una instalación, para saber que se instalo y cuando.</p>

<figure class='code'><figcaption><span>&#8220;/etc/pacman.d/hooks/listpackages.sh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>pacman -Qe &gt; /root/<span class="k">$(</span>date +%j%H%M%S<span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Eso creará un fichero similar a /root/051153712, el nombre, es el yday (día del
año) y con la hora, minuto y segundo. Dentro del fichero, una lista de todos los
paquetes instalados. Muy útil si eres tester o desarrollador, o simplemente
quieres saber que paquetes había antes o después de instalar.</p>

<p>Por cierto, otra manera de saber que si instalo hoy y ayer, es esta:</p>

<figure class='code'><figcaption><span>&#8220;¿cuando fue?&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ls -ltcr --time-style +%j /var/lib/pacman/local/
</span></code></pre></td></tr></table></div></figure>


<p>Devuelve el día del año en el que se instaló un paquete. Así sabes que se
instaló hoy. Te recuerdo, que en ArchLinux, todos los días hay algo nuevo que
instalar :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[arch compartir paquetes]]></title>
    <link href="http://uranio-235.github.io/blog/2016/02/01/arch-compartir-paquetes/"/>
    <updated>2016-02-01T13:56:56-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/02/01/arch-compartir-paquetes</id>
    <content type="html"><![CDATA[<p>No desde cuando, pero por fin, un sueño echo realidad en ArchLinux. Revertir un
paquete de su forma instalada, a su forma de paquete. Esto puede no resultar
algo novedoso para el que tenga internet como algo cotidiano, pero para los
cubanos de a pie, resulta una verdadera novedad.</p>

<p>Digamos que mi socio necesita instalar nginx en su arch, misma arquitectura que
el mío. Simplemente, le genero el paquete a partir de mi instalación y listo.</p>

<figure class='code'><figcaption><span>&#8220;bacman en acción&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@samsung ~<span class="o">]</span><span class="c"># cd /var/cache/pacman/pkg/</span>
</span><span class='line'><span class="o">[</span>root@samsung pkg<span class="o">]</span><span class="c"># bacman nginx</span>
</span><span class='line'><span class="o">==</span>&gt; Package: nginx-1.8.1-1
</span><span class='line'>  -&gt; Copying package files...
</span><span class='line'>    -&gt; Generating .PKGINFO metadata...
</span><span class='line'>    -&gt; Generating the package...
</span><span class='line'>  <span class="o">==</span>&gt; Done.
</span><span class='line'><span class="o">[</span>root@samsung pkg<span class="o">]</span><span class="c"># ls nginx*</span>
</span><span class='line'>nginx-1.8.1-1-x86_64.pkg.tar.xz
</span></code></pre></td></tr></table></div></figure>


<p>Pues <strong>bacman</strong> es la respuesta. Ahora se puede regresar un paquete a su estado;
digamos &ldquo;pristino&rdquo;.</p>

<p>¡¡OJO!! <strong>TUS</strong> ficheros de configuración, también se empaquetan.</p>

<p>Usualmente solía mantener en mi caché los paquetes necesarios para llevar a cabo
una instalación de archlinux usando mi laptop; pero con este nuevo método, la
cosa cambia bastante. Ahora solo debo cargar con el &ldquo;.iso&rdquo;</p>

<p>Mi proxima idea es reconstruir el grupo <strong>base</strong> completo dentro de la cache y
luego con <strong>repo-add</strong> crear un mirror, capaz de llevar a cabo una instalación
de sistema.</p>

<p>De momento quiero probar este script:</p>

<figure class='code'><figcaption><span>&#8220;pristine.sh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="c"># cambiate al directorio de cache</span>
</span><span class='line'><span class="nb">cd</span> /var/cache/pacman/pkg/
</span><span class='line'>
</span><span class='line'><span class="c"># itera por los paquetes del sistema base</span>
</span><span class='line'><span class="k">for</span> pkg in <span class="k">$(</span>pacman -Qeg base<span class="p">|</span>awk <span class="s1">&#39;{print $2}&#39;</span><span class="k">)</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>   <span class="c"># háblate</span>
</span><span class='line'>   <span class="nb">echo</span> <span class="nv">$pkg</span> <span class="s1">&#39;&gt;&#39;</span> <span class="k">$(</span>pacman -Qi <span class="nv">$pkg</span><span class="p">|</span>grep Description<span class="p">|</span>cut -d : -f 2<span class="k">)</span>
</span><span class='line'>
</span><span class='line'>   <span class="c"># reviértelo</span>
</span><span class='line'>   bacman <span class="nv">$pkg</span> 2&gt; /dev/null &gt; /dev/null
</span><span class='line'>
</span><span class='line'><span class="k">done</span>
</span><span class='line'>
</span><span class='line'><span class="c"># crea el repo</span>
</span><span class='line'>rm /var/cache/pacman/pkg/custom.db.tar.gz
</span><span class='line'>repo-add /var/cache/pacman/pkg/custom.db.tar.gz /var/cache/pacman/pkg/*.pkg.tar.xz
</span></code></pre></td></tr></table></div></figure>


<p>Tendré que probar a instalar usando mi cache como repo. Poniéndole a la máquina
una source como esta:</p>

<figure class='code'><figcaption><span>&#8220;pacman.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>mirepo<span class="o">]</span>
</span><span class='line'><span class="nv">SigLevel</span> <span class="o">=</span> Optional TrustAll
</span><span class='line'><span class="nv">Server</span> <span class="o">=</span> http://localhost:8080
</span></code></pre></td></tr></table></div></figure>


<p><em>Nota para los imbéciles: Cambiar <strong>localhost</strong> por la ip de la máquina que está compartiendo la caché.</em></p>

<p>Y para servir tu cache como repo, puedes usar darkhttpd</p>

<figure class='code'><figcaption><span>&#8220;darkhttpd&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>darkhttpd /var/cache/pacman/pkg/ --chroot --port 8080
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bind9, registro arbitratio]]></title>
    <link href="http://uranio-235.github.io/blog/2016/01/25/hostname-arbitrario-en-bind9/"/>
    <updated>2016-01-25T20:35:37-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/01/25/hostname-arbitrario-en-bind9</id>
    <content type="html"><![CDATA[<p>Para este tipo de cosas, usualmente recomiendo
<a href="https://wiki.archlinux.org/index.php/dnsmasq">dnsmasq</a> pero aveces, no nos
queda más remiendo que usar bind9, por N motivos.</p>

<p>En algunas ocasiones, nos vemos forzados a declarar registros para punteros, a
host que nada tienen que ver con nuestro domino. Por ejemplo, queremos que el
host time.windows.com apunte a nuestro servidor de tiempo, para que todos las
computadoras con windows de la red, se actualicen por nuestro servidor ntp.</p>

<p>En salud, aveces es mejor declarar localmente los punteros a los servidores de
correo de salud, que hacer otro forward y además, tener que especificarle un
segundo servidor DNS a nuestros usuarios.</p>

<p>Para lograr esto, debemos declarar una raíz dns en nuestro named.conf, que
responda a todo, o sea, &ldquo;.&rdquo;, a mi me quedó así.</p>

<figure class='code'><figcaption><span>&#8220;/etc/bind/named.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// la zona pa hacer lo que me de la gana</span>
</span><span class='line'><span class="nx">zone</span> <span class="s2">&quot;.&quot;</span> <span class="p">{</span>
</span><span class='line'>   <span class="nx">type</span> <span class="nx">master</span><span class="p">;</span>
</span><span class='line'>   <span class="nx">file</span> <span class="s2">&quot;/etc/bind/fakeroot.zone&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>Acá, el fichero <strong>fakeroot.zone</strong> tendrá los registros, donde declaramos los
FQDN como si fueran hostnames.</p>

<figure class='code'><figcaption><span>&#8220;/etc/bind/fakeroot.zone&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">@</span>       <span class="nx">IN</span>      <span class="nx">SOA</span>     <span class="p">.</span> <span class="nx">hostmaster</span><span class="p">.</span><span class="nx">domain</span><span class="p">.</span><span class="nx">com</span><span class="p">.</span> <span class="p">(</span> <span class="mi">1</span> <span class="mi">3</span><span class="nx">h</span> <span class="mi">1</span><span class="nx">h</span> <span class="mi">1</span><span class="nx">w</span> <span class="mi">1</span><span class="nx">d</span> <span class="p">)</span>
</span><span class='line'><span class="nx">localhost</span>             <span class="nx">IN</span>      <span class="nx">A</span>       <span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span>
</span><span class='line'><span class="err">@</span>                     <span class="nx">IN</span>      <span class="nx">NS</span>      <span class="nx">localhost</span><span class="p">.</span>
</span><span class='line'><span class="p">;</span>
</span><span class='line'><span class="p">;</span> <span class="nx">Los</span> <span class="nx">servidores</span> <span class="nx">de</span> <span class="nx">correo</span> <span class="nx">de</span> <span class="nx">infomed</span>
</span><span class='line'><span class="nx">smtp</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>           <span class="nx">IN</span>      <span class="nx">A</span>       <span class="mf">201.220</span><span class="p">.</span><span class="mf">211.39</span>
</span><span class='line'><span class="nx">pop</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>            <span class="nx">IN</span>      <span class="nx">A</span>       <span class="mf">201.220</span><span class="p">.</span><span class="mf">211.7</span>
</span><span class='line'><span class="nx">pop3</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>           <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pop</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>
</span><span class='line'><span class="nx">imap</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>           <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pop</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>
</span><span class='line'><span class="p">;</span>
</span><span class='line'><span class="p">;</span> <span class="nx">Los</span> <span class="nx">servidores</span> <span class="nx">de</span> <span class="nx">tiempo</span> <span class="nx">m</span><span class="err">á</span><span class="nx">s</span> <span class="nx">pedidos</span>
</span><span class='line'><span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span>          <span class="nx">IN</span>      <span class="nx">A</span>       <span class="mf">10.1</span><span class="p">.</span><span class="mf">1.1</span>
</span><span class='line'><span class="o">*</span><span class="p">.</span><span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span><span class="p">.</span>       <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span>
</span><span class='line'><span class="nx">time</span><span class="p">.</span><span class="nx">microsoft</span><span class="p">.</span><span class="nx">com</span>    <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span>
</span><span class='line'><span class="nx">time</span><span class="p">.</span><span class="nx">windows</span><span class="p">.</span><span class="nx">com</span>      <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span>
</span><span class='line'><span class="nx">time</span><span class="o">-</span><span class="nx">ios</span><span class="p">.</span><span class="nx">apple</span><span class="p">.</span><span class="nx">com</span>    <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span>
</span></code></pre></td></tr></table></div></figure>


<p>En este caso de ejemplo, declaramos un par de host que son de salud, con una ip
externa. Abajo, los host ntp más típicos, apuntando a nuestro servidor de
tiempo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[espejos de clamav y salud]]></title>
    <link href="http://uranio-235.github.io/blog/2016/01/19/espejos-de-clamav/"/>
    <updated>2016-01-19T13:32:53-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/01/19/espejos-de-clamav</id>
    <content type="html"><![CDATA[<p>ClamAV, el antivirus más subestimado en mi opinión. De siempre, lo he usado por
compromiso; aunque nunca he sentido la necesidad de hacerlo.</p>

<p>Infomed, mantiene un espejo de ClamAV bien al día pero no un mirror como tal.</p>

<p>Decidí bajarlos para mi máquina y usar la misma como espejo. Después de todo, la
misma tiene lo que necesita para correr un mirror. Es algo tan sencillo como
crear un virtualhost y poner en su raíz las actualziaciones.</p>

<p>Más fácil aún, es usar /var/lib/clamav/ como raíz y así TU actualización se
convierte en el mirror.</p>

<p>En mi caso, el virtualhost de nginx me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/nginx/sites-enabled/clamav&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>
</span><span class='line'>   listen   10.1.1.14:80<span class="p">;</span>
</span><span class='line'>   listen   10.1.1.14:443 ssl<span class="p">;</span>
</span><span class='line'>   server_name clamav.hcg.sld.cu<span class="p">;</span>
</span><span class='line'>   location / <span class="o">{</span>
</span><span class='line'>      root /var/lib/clamav/<span class="p">;</span>
</span><span class='line'>   <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>El resto del truco está en el lado del cliente, ya que hay que hacerle una
burumba a freshclam. Decirle que no busque scripts, así me quedó el freshclam.</p>

<figure class='code'><figcaption><span>&#8220;/etc/clamav/freshclam.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>UpdateLogFile /var/log/clamav/freshclam.log
</span><span class='line'>DatabaseMirror clamav.hcg.sld.cu
</span><span class='line'>NotifyClamd /etc/clamav/clamd.conf
</span><span class='line'>ScriptedUpdates no
</span><span class='line'>PrivateMirror clamav.hcg.sld.cu
</span></code></pre></td></tr></table></div></figure>


<p>No olvides el puntero a <strong>clamav.tudominio.cu</strong></p>
]]></content>
  </entry>
  
</feed>
