<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[El SysAdmin del 3er Mundo]]></title>
  <link href="http://uranio-235.github.io/atom.xml" rel="self"/>
  <link href="http://uranio-235.github.io/"/>
  <updated>2017-05-15T15:09:55-04:00</updated>
  <id>http://uranio-235.github.io/</id>
  <author>
    <name><![CDATA[låzaro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[instalar node rápido]]></title>
    <link href="http://uranio-235.github.io/blog/2017/05/13/instalar-node-rapido/"/>
    <updated>2017-05-13T17:13:53-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/05/13/instalar-node-rapido</id>
    <content type="html"><![CDATA[<p>Desde que surgió node, estaba deseando que hubiera una herramienta como RVM para
instalar nodejs. Resulta que la hay!!! Al igual que RVM, requiere cURL. Por
cierto, se llama <strong>n</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> curl -o /usr/local/bin/n https://raw.githubusercontent.com/visionmedia/n/master/bin/n</span>
</span><span class='line'><span class="go"> chmod +x /usr/local/bin/n</span>
</span><span class='line'><span class="go"> n lts</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instala hasta npm!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[autoridad certificadora]]></title>
    <link href="http://uranio-235.github.io/blog/2017/05/10/ssl-ca-local/"/>
    <updated>2017-05-10T19:39:19-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/05/10/ssl-ca-local</id>
    <content type="html"><![CDATA[<p>Es un gran mojón tener que generar un certificado para cada servicio. Y aquí, en
el 5to infierno de infomed usar cualquier proveedor de CA gratis (como let&rsquo;s
encrypt) es por gusto.</p>

<p>En estos caso, no queda otro remiendo que usar un CA firmado localmente. La idea
es.</p>

<p>Generamos un par de claves que harán la función de &ldquo;autoridad certificadora&rdquo;</p>

<ul>
<li> crear un Clave Privada (.key) y mantenerla bien escondida</li>
<li> crear la Clave Pública del anterior (.pem) y la distribuimos</li>
</ul>


<p>Una vez que tengamos nuestra autoridad certificadora. Empezamos a generar
certificados y lo firmamos con esta.</p>

<ul>
<li> generamos una clave privada (el .key para este certificado)</li>
<li> hacer una solicitud de certificado (.csr) al .key anterior</li>
<li> generamos el dichoso certificado</li>
<li> firmamos el certificado usando el .key de la CA</li>
</ul>


<p>Usaremos al tan legalmente controversial OpenSSL para esta tarea.</p>

<p>La clave (.key) del CA, debe crearse en una máquina desconectada de la red y
preferiblemente sepultada a 3 metros bajo tierra. Si esto le parece demasiado
paranoico, entonces mantenga el &ldquo;.key&rdquo; en el servidor más aislado de la red.
Preferiblemente, aquel que parezca menos importante y lejos de internet. En mi
caso, yo uso mi laptop personal para tareas administrativas y es ahí donde tengo
todas las claves privadas.</p>

<p>Supón que lo hagas en un servidor determinado. Creamos entonces en el home del
root, un espacio adecuado para esto.</p>

<figure class='code'><figcaption><span>&#8220;creando el directorio&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> mkdir -m700 CA</span>
</span><span class='line'><span class="go"> cd CA</span>
</span><span class='line'><span class="go"> unmask 077</span>
</span></code></pre></td></tr></table></div></figure>


<p>Creamos la super-secretísima clave privada, que hará la función de CA:</p>

<p><strong>openssl genrsa -out rootCA.key 2048</strong></p>

<figure class='code'><figcaption><span>&#8220;creando el .key en la máquina secreta&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$ openssl genrsa -out rootCA.key 2048</span>
</span><span class='line'><span class="go"> Generating RSA private key, 2048 bit long modulus</span>
</span><span class='line'><span class="go"> ..............................+++</span>
</span><span class='line'><span class="go"> .......................................................+++</span>
</span><span class='line'><span class="go"> e is 65537 (0x010001)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya tenemos la piedra angular de nuestro CA; pero así no sirve. Esa es la clave
primaria, o sea, la que tiene la facultad de descifrar y derivar nuevos
certificados. No nos conviene que nuestros &ldquo;usuarios finales&rdquo;, o lo servidores,
usen esta clave. Necesitamos crear una &ldquo;clave pública&rdquo;, esta clave pública se
deriva de la privada, pero solo tiene la facultad de cifrar, así la puede tener
cualquiera y mandarnos datos cifrados. Sin embargo, <strong>NO</strong> se puede usar la clave
pública para DEScifrar. Al menos no; usando tecnología civil.</p>

<p>Nota para los imbéciles: El <strong>rootCA.key</strong> no se le puede dar a nadie.</p>

<p><strong>openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 3650 -out rootCA.pem</strong></p>

<figure class='code'><figcaption><span>&#8220;creando la clave pública&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$  openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 3650 -out rootCA.pem</span>
</span><span class='line'><span class="go"> You are about to be asked to enter information that will be incorporated</span>
</span><span class='line'><span class="go"> into your certificate request.</span>
</span><span class='line'><span class="go"> What you are about to enter is what is called a Distinguished Name or a DN.</span>
</span><span class='line'><span class="go"> There are quite a few fields but you can leave some blank</span>
</span><span class='line'><span class="go"> For some fields there will be a default value,</span>
</span><span class='line'><span class="go"> If you enter &#39;.&#39;, the field will be left blank.</span>
</span><span class='line'><span class="go"> -----</span>
</span><span class='line'><span class="go"> Country Name (2 letter code) [AU]:CU</span>
</span><span class='line'><span class="go"> State or Province Name (full name) [Some-State]:Havana</span>
</span><span class='line'><span class="go"> Locality Name (eg, city) []:Plaza</span>
</span><span class='line'><span class="go"> Organization Name (eg, company) [Internet Widgits Pty Ltd]:Calixto Garcia</span>
</span><span class='line'><span class="go"> Organizational Unit Name (eg, section) []:Calixto Garcia</span>
</span><span class='line'><span class="go"> Common Name (e.g. server FQDN or YOUR name) []:Hospital Calixto Garcia</span>
</span><span class='line'><span class="go"> Email Address []:ssl@hcg.sld.cu</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya tenemos la clave pública (el &ldquo;.pem&rdquo;). Este fichero será distribuido a
nuestros clientes para que puedan hacer dos cosas: Cosa 1, cifrar los datos, sin
poder descifrarlos. Cosa 2, identificar a la autoridad certificadora.</p>

<figure class='code'><figcaption><span>&#8220;la clave privada y publica de nuestra CA&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$ ls</span>
</span><span class='line'><span class="go"> rootCA.key  rootCA.pem</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nota para los imbéciles: El <strong>rootCA.pem</strong> se instalará en los clientes,
navegadores, teléfonos, etc&hellip;</p>

<p>Note además, que hemos dado a nuestra clave pública, 10 años antes de su
caducidad (-days 3650). Quizás quieras darle un solo.</p>

<p><img class="left" src="http://uranio-235.github.io/images/Enigma.jpg" title="&#34;Enigma, un disposotivo criptográfico de cuando no existía SSL.&#34;" alt="&#34;Enigma, un disposotivo criptográfico de cuando no existía SSL.&#34;"></p>

<p>Ya puedes hacer público el &ldquo;.pem&rdquo; para que todo el que sepa que hacer con este,
se lo instale. Por ejemplo, si tienes una intranet local, podrías dejarla con
http plano y brindar información (así como la descarga) sobre el dicha clave.
Puedes crear una página de HTML plano explicando porque SSL y como instalarlo
en los navegadores. Ahí dices además, que se debe iniciar la conexión usando el
prefijo &ldquo;https&rdquo;. Podrías poner esa página como el destino de redirección
para todos los virtualhsot que usen &ldquo;http&rdquo; y así hacer conciencia a los
usuarios. Por ejemplo, en servidores con información sensible (como los
webmails), solo debe ser alcanzado usando ssl.</p>

<p>Pero <strong>sin extremismos</strong>. Una intranet que brinda información pública, no tiene
que ser obligado por SSL (a menos que sea un wordpress con login).</p>

<p>Por cierto, Firefox tiene su propio almacén de certificados. Dirígete a
Configuraciones, Avanzada, Certificados.</p>

<p><img class="right" src="http://uranio-235.github.io/images/localCA1.png" title="&#34;localizando el almacén de certificados&#34;" alt="&#34;localizando el almacén de certificados&#34;"></p>

<p>Una vez ahí, ve a donde dice <strong>Autoridades</strong> (no a tus certificados) y procede a
importar el certificado.</p>

<p><img class="right" src="http://uranio-235.github.io/images/localCA2.png" title="&#34;importando el certificado a firefox&#34;" alt="&#34;importando el certificado a firefox&#34;"></p>

<p>En android también es tremenda balasera instalar el &ldquo;.pem&rdquo; y no dejará de
meterme miedo diciendo que &ldquo;un tercero podría estar manipulando tu información&rdquo;.
Lo cual no deja de ser cierto, poner un SSLbumper a squid bataría para hacer
horrores.</p>

<p><img class="right" src="http://uranio-235.github.io/images/localCA3.png" width="300" height="400" title="&#34;instalando el .pem en android&#34;" alt="&#34;instalando el .pem en android&#34;"></p>

<p>Llégate a la configuración de seguridad y verás una opción que dice &ldquo;instalar
certificados desde la tarjetaSD&rdquo; o &ldquo;desde el almacenamiento&rdquo;.</p>

<p>En algunos android 4, si te pide una clave y no sabes cual es, debes configurar
el acceso al teléfono mediante clave. O sea, quita el patrón, pon una clave y
prueba importar el &ldquo;.pem&rdquo;. Al pedir la clave pones la que estableciste para
entrar. Una vez importado el certificado, vuelves a poner el mecanismo de
seguridad que deses (patrón, ninguno, etc&hellip;)</p>

<h3>de vuelta al servidor secreto</h3>

<p>Pasemos ahora a crear uno (o varios) certificados para nuestros servidores.
Para empezar, crearemos el certificado del servidor de correo, pero no del
smtp, si no del webmail.</p>

<p><strong>MUY IMPORTANTE</strong> en los certificados, el CN (Common Name) no puede ser el que
te de la gana a tí. Si por ejemplo tu servidor de correo está en
webmail.dominio.cu, ese ha de ser su CN</p>

<p>Nota para los imbéciles: Creas un certificado para cada servicio y su CN será el
mismo nombre del virtualhost.</p>

<p>Creamos una clave privada para este servidor (para que pueda cifrar, te requiero
que es bilateral y simétrico).</p>

<p><strong>openssl genrsa -out webmail.key 2048</strong></p>

<figure class='code'><figcaption><span>&#8220;la clave privada del webmail&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$ openssl genrsa -out webmail.key 2048</span>
</span><span class='line'><span class="go"> Generating RSA private key, 2048 bit long modulus</span>
</span><span class='line'><span class="go"> .+++</span>
</span><span class='line'><span class="go"> ......................................................................................+++</span>
</span><span class='line'><span class="go"> e is 65537 (0x010001)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Le pedimos a esta clave que genera un certificado (certificate request).</p>

<p><strong>openssl req -new -key webmail.key -out webmail.csr</strong></p>

<figure class='code'><figcaption><span>&#8220;solicitud de certificado&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$ openssl req -new -key webmail.key -out webmail.csr</span>
</span><span class='line'><span class="go"> You are about to be asked to enter information that will be incorporated</span>
</span><span class='line'><span class="go"> into your certificate request.</span>
</span><span class='line'><span class="go"> What you are about to enter is what is called a Distinguished Name or a DN.</span>
</span><span class='line'><span class="go"> There are quite a few fields but you can leave some blank</span>
</span><span class='line'><span class="go"> For some fields there will be a default value,</span>
</span><span class='line'><span class="go"> If you enter &#39;.&#39;, the field will be left blank.</span>
</span><span class='line'><span class="go"> -----</span>
</span><span class='line'><span class="go"> Country Name (2 letter code) [AU]:CU</span>
</span><span class='line'><span class="go"> State or Province Name (full name) [Some-State]:Havana</span>
</span><span class='line'><span class="go"> Locality Name (eg, city) []:Plaza</span>
</span><span class='line'><span class="go"> Organization Name (eg, company) [Internet Widgits Pty Ltd]:Calixto Garcia</span>
</span><span class='line'><span class="go"> Organizational Unit Name (eg, section) []:Calixto Garcia</span>
</span><span class='line'><span class="go"> Common Name (e.g. server FQDN or YOUR name) []:webmail.hcg.sld.cu</span>
</span><span class='line'><span class="go"> Email Address []:ssl@hcg.sld.cu</span>
</span><span class='line'><span class="go"> </span>
</span><span class='line'><span class="go"> Please enter the following &#39;extra&#39; attributes</span>
</span><span class='line'><span class="go"> to be sent with your certificate request</span>
</span><span class='line'><span class="go"> A challenge password []:</span>
</span><span class='line'><span class="go"> An optional company name []:</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya tenemos las dos máquinas enigmas listas, pero no están sincronizadas y por
ende, los cifrados producidos producidos por estos dos ficheros, serán
simétricos pero no bilaterales. Alguien debe decirle que son padre e hijo.</p>

<p>Eso lo haremos, firmando con nuestro CA, el certificado generado.</p>

<p><strong>openssl x509 -req -in webmail.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out webmail.crt -days 3650 -sha256</strong></p>

<figure class='code'><figcaption><span>&#8220;firmando el certificado con la CA&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">[lazaro@artema CA]$ openssl x509 -req -in webmail.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out webmail.crt -days 3650 -sha256</span>
</span><span class='line'><span class="go">Signature ok</span>
</span><span class='line'><span class="go">subject=C = CU, ST = Havana, L = Plaza, O = Calixto Garcia, OU = Calixto Garcia, CN = webmail.hcg.sld.cu, emailAddress = ssl@hcg.sld.cu</span>
</span><span class='line'><span class="go">Getting CA Private Key</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note como hacemos uso de las claves pública y privada del CA. Por tanto, si un
atacante adquiere los certificados del webmail y los colocase en otro sitio,
este no machea el CN webmail.hcg.sld.cu y desata una advertencia en el navegador
de nuestros usuarios. Además, no podrá firmar el certificado para modificarlo e
incluir su CN.</p>

<figure class='code'><figcaption><span>&#8220;los certificados del webmail&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">[lazaro@artema CA]$ ls</span>
</span><span class='line'><span class="go">rootCA.key  rootCA.pem  rootCA.srl  webmail.crt  webmail.csr  webmail.key</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bueno, todo listo, hagamos un paquete con todo lo necesario para que nuestro
servidor de correo se lo configure en el webmail. Para postfix y para dovecot,
debemos hacer otro que machee smtp.hcg.sld.cu y pop3.hcg.sld.cu sucesivamete.</p>

<p><strong>REPITO!</strong> el rootCA<strong>.key</strong> <strong>NO</strong> puede hacerse público. Así que le daremos
una copia del rootCA<strong>.pem</strong></p>

<figure class='code'><figcaption><span>&#8220;empaquetando la entrega&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$ mkdir webmail</span>
</span><span class='line'><span class="go"> [lazaro@artema CA]$ mv webmail.* webmail/</span>
</span><span class='line'><span class="go"> [lazaro@artema CA]$ cp rootCA.pem webmail/</span>
</span><span class='line'><span class="go"> [lazaro@artema CA]$ tar cvfz webmail.tar.gz webmail/</span>
</span><span class='line'><span class="go"> webmail/</span>
</span><span class='line'><span class="go"> webmail/webmail.crt</span>
</span><span class='line'><span class="go"> webmail/webmail.csr</span>
</span><span class='line'><span class="go"> webmail/webmail.key</span>
</span><span class='line'><span class="go"> webmail/rootCA.pem</span>
</span><span class='line'><span class="go"> [lazaro@artema CA]$ scp webmail.tar.gz root@webmail.hcg.sld.cu:/root/</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instálale esos certificado a tu
<a href="http://lmgtfy.com/?q=apache+ssl+howto">apache</a>/<a href="http://lmgtfy.com/?q=nginx+ssl+howto">nginx</a>
y todo el que tenga el <strong>rootCA.pem</strong> instalado en su dispositivo; verá a
&ldquo;Calixto Garcia&rdquo; como una legítima autoridad certificadora al abrir el webmail.</p>

<p>Lo que si no me queda claro es como se le instala el &ldquo;.pem&rdquo; a Windows. ¿Sugerencias?</p>

<p><img class="center" src="http://uranio-235.github.io/images/localCA4.png" width="200" height="300" title="&#34;autoridad certificadora, o al menos, eso dicen&#34;" alt="&#34;autoridad certificadora, o al menos, eso dicen&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xen y virt-manager]]></title>
    <link href="http://uranio-235.github.io/blog/2017/04/08/xen-y-virt-manager/"/>
    <updated>2017-04-08T00:04:41-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/04/08/xen-y-virt-manager</id>
    <content type="html"><![CDATA[<p>La miseria, es lo único que; aun repartida a muchos, toca en abundancia.</p>

<p>La superioridad tecnológica de XenServer es indiscutible: seguro (esquema de
pacheo de XOA), versátil (la XAPI), robusto (CentOS) y sencillo (Xen Orchestra
Appliance) y enterprise (next, next, next, install, boot, ready!) PERO:</p>

<p><img class="right" src="http://uranio-235.github.io/images/XenFuPandaWiki.png" title="&#34;el xenfu panda, el logo de Xen, olvidado o desconocido por los usuarios de Citrix XenServer&#34;" alt="&#34;el xenfu panda, el logo de Xen, olvidado o desconocido por los usuarios de Citrix XenServer&#34;"></p>

<p>Cuando los megas de RAM se cuentan con los dedos de una mano, el peso de la XAPI
y la necesidad de tener otra máquina corriendo para el XenOrchestra, DUELEN.
Tomemos por ejemplo, una máquina con 2 gigas de RAM. En mi caso tengo Xen
Orchestra en la laptop, pero desplegar node+servidor en una máquina virtual más;
no es una opción en este escenario. Que se jodan XOA, XenServer y los
capitalistas de la Citrix ¡Hora de ser completamente libre!</p>

<p>Yo hubiera matado la jugada con LXC pero el cliente insiste en usar los 3
sistemas; tal como está en mi esquema del calixto. Lo cierto es que 3
contenedores no inspiran mucha confianza. Tampoco KVM es una buena opción, sobre
todo cuado no hay un super microprocesador.</p>

<p>Rercordemos que: Xen, mejor con CPU, peor peor IO. Mientras que: KVM, mejor IO,
pero CPU más penalizado.</p>

<p>El menú:</p>

<p>Dos interfaces de red, un disco de 500G, 2G de ram, y un CPU que <strong>por suerte</strong>
soporta virtualización. Un switch de 24 puertos a 100 megas, otro a gigabit. Un
friki que oye reguetton, su mujer, la mía, 5 pesos de café en un vaso plástico
y YO.</p>

<p>Las VM y su RAM:</p>

<ul>
<li>debian como servidor de correo (postfix y dovecot, sin webmail) - 512M</li>
<li>alpine como ruter (dns, dhcp y firewall) - 512M</li>
<li>FreeBSD como proxy (squid) - 1G</li>
</ul>


<p>La brujería:</p>

<p><strong>Con suerte</strong> No se matarán por los 2 Gigas de RAM. El squid con usuarios PAM
como autenticación y casi nada en las ACL, además en BSD no come mucha ram.
Alpine es un chiste en lo que a RAM se refiere y el de correo no tendrá un
webmail así que plin.</p>

<p>Los 3 servidores tendrán unos cortafuegos super estrictos. Descartarán todo tipo
de ICMP para evitar cuellos de botella. La LAN funciona a 100 megas y el
servidor está conectado al ÚNICO switch a gigabit. Osea, el server, un switch y
un cable al netgear viejo que está a 100 megas. Con eso, la difusión &ldquo;uno a
varios&rdquo; será mayor y no habrá congestiones, mientras que la peticiones entrantes
(individual) no excederán el 10% el ancho de vianda del servidor. La ley del
embudo.</p>

<p>Entrando en materia:</p>

<p>Volvemos a la génesis de xen pero usaremos virt-manager para manejar el
hypervisor.</p>

<p>Primero que todo, llevamos a cabo una instalación típica de Xen en un debian 8.
Nada que contar; el clásico Dom0.</p>

<figure class='code'><figcaption><span>&#8220;xen-linux-system&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> aptitude update</span>
</span><span class='line'><span class="go"> aptitude install xen-linux-system</span>
</span><span class='line'><span class="go"> dpkg-divert --divert /etc/grub.d/08_linux_xen --rename /etc/grub.d/20_linux_xen</span>
</span></code></pre></td></tr></table></div></figure>


<p>Esta PC tiene dos interfaz de red. Una de cara al router, con una ip/29
&ldquo;públicas&rdquo; y otra interfaz, de cara a la LAN. Por tanto crearemos 3 puentes:</p>

<ul>
<li>br0 de eth0 hacia el router</li>
<li>br1 de eth1 hacia la LAN</li>
<li>br2 para comunicación interna (costumbre, nunca está de más)</li>
</ul>


<p>Así me quedó el <strong>/etc/network/interfaces</strong></p>

<figure class='code'><figcaption><span>&#8220;/etc/network/interfaces&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> # arriba todo el mundo</span>
</span><span class='line'><span class="go"> auto lo eth0 eth1 br0 br1 br2</span>
</span><span class='line'>
</span><span class='line'><span class="go"> # el lo</span>
</span><span class='line'><span class="go"> iface lo inet loopback</span>
</span><span class='line'>
</span><span class='line'><span class="go"> # levanta las dos interfacess</span>
</span><span class='line'><span class="go"> # pa cuando el bridge se levante</span>
</span><span class='line'><span class="go"> iface eth0 inet manual</span>
</span><span class='line'><span class="go"> iface eth1 inet manual</span>
</span><span class='line'>
</span><span class='line'><span class="go"> # puente de la interfaz onboard (WAN)</span>
</span><span class='line'><span class="go"> iface br0 inet static</span>
</span><span class='line'><span class="go">    bridge_ports eth0</span>
</span><span class='line'><span class="go">    bridge_stp off</span>
</span><span class='line'><span class="go">    bridge_waitport 0</span>
</span><span class='line'><span class="go">    bridge_fd 0</span>
</span><span class='line'>
</span><span class='line'><span class="go"> # puente de la interfaz PCI (LAN)</span>
</span><span class='line'><span class="go"> # y la ip del hypervisor para hacer SSH</span>
</span><span class='line'><span class="go"> iface br1 inet manual</span>
</span><span class='line'><span class="go">    address 192.168.99.10</span>
</span><span class='line'><span class="go">    netmask 255.255.255.0</span>
</span><span class='line'><span class="go">    bridge_ports eth1</span>
</span><span class='line'><span class="go">    bridge_stp off</span>
</span><span class='line'><span class="go">    bridge_waitport 0</span>
</span><span class='line'><span class="go">    bridge_fd 0</span>
</span><span class='line'>
</span><span class='line'><span class="go"> # una interfaz de red local de las VM</span>
</span><span class='line'><span class="go"> # note que el puente apunta a la interfaz none</span>
</span><span class='line'><span class="go"> iface br2 inet static</span>
</span><span class='line'><span class="go">    bridge_ports eth0</span>
</span><span class='line'><span class="go">    address 169.254.0.1</span>
</span><span class='line'><span class="go">    netmask 255.255.255.0</span>
</span><span class='line'><span class="go">    bridge_ports none</span>
</span><span class='line'><span class="go">    bridge_stp off</span>
</span><span class='line'><span class="go">    bridge_waitport 0</span>
</span><span class='line'><span class="go">    bridge_fd 0</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora vienen los toques mágicos. <strong>Libvirt!</strong></p>

<figure class='code'><figcaption><span>&#8220;libvirtd&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> apt-get install libvirt-bin</span>
</span></code></pre></td></tr></table></div></figure>


<p>De más está que te diga, que este debian fue instalado sobre LVM. Crea el
directorio <strong>/etc/libvirt/storage/</strong> y dentro, le pondremos un fichero llamado
<strong>xenvg.xml</strong> o comotedelagana<strong>.xml</strong>. Al instalar con el particionado guiado;
el grupo llama hostname-vg, en este caso <strong>xen-vg</strong>. Note como la cláusula
<strong>path</strong>, apunta hacia el mapper del grupo de volumen group y que tanto nombre
del fichero como del pool; no deben contener espacios ni &ldquo;-&rdquo;.</p>

<figure class='code'><figcaption><span>&#8220;/etc/libvirt/storage/xenvg.xml&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;pool</span> <span class="na">type=</span><span class="s">&#39;logical&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>xenvg<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;target&gt;</span>
</span><span class='line'>    <span class="nt">&lt;path&gt;</span>/dev/xen-vg<span class="nt">&lt;/path&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'><span class="nt">&lt;/pool&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora inicializaremos el pool de libvirt:</p>

<figure class='code'><figcaption><span>&#8220;virsh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> virsh pool-define /etc/libvirt/storage/xenvg.xml</span>
</span><span class='line'><span class="go"> virsh pool-start xenvg</span>
</span><span class='line'><span class="go"> virsh pool-autostart xenvg</span>
</span></code></pre></td></tr></table></div></figure>


<p>Corre <strong>virsh pool-info xenvg</strong> para ver si todo pinchó. Llegado a este punto
te recomiendo reiniciar&hellip;</p>

<h4>De regreso a la máquina del informático&hellip;</h4>

<p>Arrancamos el virt-manager:</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager1.png" title="&#34;iniciando virt-manager desde gnome-shell&#34;" alt="&#34;iniciando virt-manager desde gnome-shell&#34;"></p>

<p>De más está que te diga, que las operaciones de libvirt se hacen por
ssh, así que debes tener ssh en la máquina remota; preferiblemente con
autenticación por llaves y no por password.</p>

<figure class='code'><figcaption><span>&#8220;ssh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> ssh-keygen</span>
</span><span class='line'><span class="go"> ssh-copy-id root@192.168.99.10</span>
</span></code></pre></td></tr></table></div></figure>


<p>Vamos a <strong>File</strong> y <strong>Add connection</strong>, agregaremos una conexión del tipo
<strong>Xen</strong>.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager2.png" title="&#34;conectando al libvirtd del servidor xen&#34;" alt="&#34;conectando al libvirtd del servidor xen&#34;"></p>

<p>De aquí en adelante, es la misma mecánica básica de virt-manager. Solo quiero
hacer un apartado para crear un pool más y me refrito a un pool donde pondremos
los ficheros &ldquo;.iso&rdquo;.</p>

<p>Creamos el directorio donde meteremos los ISO y copiamos el iso que querramos
para allá. Como ya me conocen, soy el enemigo de las plantillas. Confío más en
lo que yo mismo hago que en lo que hacen otros.</p>

<figure class='code'><figcaption><span>&#8220;mkdir&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> ssh root@192.168.99.10 mkdir /opt/isos/</span>
</span><span class='line'><span class="go"> scp ~/Downloads/ISO/*.iso root@192.168.99.10:/opt/isos/</span>
</span></code></pre></td></tr></table></div></figure>


<p>Selecciona la conexión al Xen, y haz click en el botón de crear nueva máquina.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager3.png" title="&#34;creando el repositorio con las iso&#34;" alt="&#34;creando el repositorio con las iso&#34;"></p>

<p>El asistente nos llevará al gestor de almacenamiento. Seleccionamos &ldquo;Local
install media&rdquo; y click en siguiente. Luego &ldquo;Use ISO image&rdquo;.</p>

<p><img class="left" src="http://uranio-235.github.io/images/virtmanager4.png" width="300" height="300" title="&#34;Local Install Media&#34;" alt="&#34;Local Install Media&#34;">
<img class="left" src="http://uranio-235.github.io/images/virtmanager5.png" width="300" height="300" title="&#34;Use ISO image&#34;" alt="&#34;Use ISO image&#34;"></p>

<p>Aquí haces click en <strong>Browse</strong> y te conduce al lugar donde crearemos los ISO.
Inmediatamente te verás en la pantalla donde te pedirá que selecciones los
storage volume. En la imagen se puede apreciar que ya existe uno llamado &ldquo;iso&rdquo;,
pero de igual, para el ejemplo mostraremos como se creará.</p>

<p>Odio las interfaz visual, como hacen pasar trabajo! Pero virsh no es cosa jamón
para mi cliente que no es del todo un hacha en linux.</p>

<p>Bueno&hellip; has click en el signo de más color azul y te mostrará un dialogo que
muestra &ldquo;Create Storage Pool&rdquo;. Lo nombramos &ldquo;iso&rdquo; y le decimos que será del tipo
&ldquo;dir&rdquo;. O sea un directorio común en el sistema de archivos.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager6.png" title="&#34;creando el storage pool de los ISO&#34;" alt="&#34;creando el storage pool de los ISO&#34;"></p>

<p>Como segundo argumento, nos pedirá la ruta. Le daremos la que creamos en el
servidor, en este caso <strong>/opt/isos</strong>.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager7.png" title="&#34;la ruta del SR&#34;" alt="&#34;la ruta del SR&#34;"></p>

<p>Sí todo salió bien, verás los .iso que tiene el directorio.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager8.png" title="&#34;los .iso del directorio&#34;" alt="&#34;los .iso del directorio&#34;"></p>

<p>Al hacer click en el iso seleccionado, vuelve el asistente y muestra que se
usará dicho iso.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager9.png" title="&#34;selecciona el iso&#34;" alt="&#34;selecciona el iso&#34;"></p>

<p>Lo demás es pa mongo, la RAM el disco que creamos en el SR &ldquo;default&rdquo;, etc&hellip;</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager12.png" title="&#34;custumise configeichon befor instal&#34;" alt="&#34;custumise configeichon befor instal&#34;"></p>

<p>Marcamos el <em>check</em> que dice &ldquo;Customize configuration before install&rdquo; y caeremos
en la pantalla que muestra todos los detalles de la máquina.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager14.png" title="&#34;modificando el hardware&#34;" alt="&#34;modificando el hardware&#34;"></p>

<p>Esta pantalla es importante; no permite configurar de manera más exquisita el
hardware. Por ejemplo, las interfaces de redes, yo quiero que tenga como primera
interfaz, la que apunta a br0 y como segunda, la que apunta a br2. Además,
algunas veces la máquinas traen una wacom tablet como interfaz (mariconerías del
virt-manager).</p>

<p>En fin, así me quedó la mía.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager15.png" title="&#34;arrancando&#34;" alt="&#34;arrancando&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jugar teeworlds en LAN]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/29/jugar-teeworlds-en-lan/"/>
    <updated>2017-03-29T00:00:16-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/29/jugar-teeworlds-en-lan</id>
    <content type="html"><![CDATA[<p>Un otorrino me ha dejado sorprendido cuando me pidió que le instalara ArchLinux
en su laptop (las todos tenemos de los médicos). La primera vez le instalé
fedora, pero lo quitó y volvió pidiéndome que le instalara arch. El doctor
Bershard, me cuenta las epopeyas de los usuarios de linux en la red de la
habana.</p>

<p><img class="center" src="http://uranio-235.github.io/images/teeworlds.png"></p>

<p>Durante el proceso de &ldquo;que te instalo&rdquo; me mencionó &ldquo;el tiwol&rdquo; como un juego muy
importante. No me imaginé que sería tan fascinante. Similar al minimilitia de
android. Me di cuenta que crear un server, es lanzar un comando y dejarlo
funcionando. La gente se conecta y desconecta del servidor cuando quiera. Se
pueden jugar partidas de equipo, pero la más caliente es el &ldquo;death match&rdquo;. Entra
mata un rato y sale cuando te aburras.</p>

<p>En el calixto el jueguito causó furor (está para windows y se conecta
perfectamente). A cada rato entro y me encuentro 3 o 4 con nombres cada vez más
creativos matándose a tiros y dando brincos.</p>

<p>Según la documentación, al correr <strong>teeworlds_srv -f fichero.cfg</strong> cargará ese
fichero. Muy útil para crear múltiples modos de juego. Al lanzar el comando
<strong>teeworlds_srv</strong> noté que dice:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">[58db3577][storage]: using standard paths</span>
</span><span class='line'><span class="go">[58db3577][storage]: added path &#39;$USERDIR&#39; (&#39;/home/lazaro/.teeworlds&#39;)</span>
</span><span class='line'><span class="go">[58db3577][storage]: added path &#39;$DATADIR&#39; (&#39;/usr/share/teeworlds/data&#39;)</span>
</span><span class='line'><span class="go">[58db3577][storage]: added path &#39;$CURRENTDIR&#39; (&#39;/home/lazaro/.teeworlds&#39;)</span>
</span><span class='line'><span class="go">[58db3577][console]: failed to open &#39;autoexec.cfg&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Así que al crear el fichero <strong>/home/lazaro/.teeworlds/autoexec.cfg</strong> resultó que
se cargaba solo. Pero&hellip; ¿qué metemos ahí?</p>

<figure class='code'><figcaption><span>&#8220;autoexec.cfg&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># teeworld_srv -f este_fichero.cfg</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Los mapas y la secuencia de mapas</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># ls /usr/share/teeworlds/data/maps/</span>
</span><span class='line'><span class="err">sv_map</span> <span class="err">dm7</span>
</span><span class='line'><span class="err">sv_maprotation</span> <span class="err">dm7</span> <span class="err">dm6</span> <span class="err">dm2</span> <span class="err">dm9</span> <span class="err">md8</span> <span class="err">dm1</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># como se ve el servidor</span>
</span><span class='line'><span class="err">sv_name</span> <span class="err">Masacre</span> <span class="err">en</span> <span class="err">el</span> <span class="err">Calixto</span>
</span><span class='line'><span class="err">sv_motd</span> <span class="err">&quot;las</span> <span class="err">teclas</span> <span class="err">son</span> <span class="err">«a»,</span> <span class="err">«d»</span> <span class="err">y</span> <span class="err">Espacio&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># que tipo de juego jugamos</span>
</span><span class='line'><span class="err">sv_gametype</span> <span class="err">dm</span>
</span><span class='line'><span class="err">sv_scorelimit</span> <span class="err">30</span>
</span><span class='line'><span class="err">sv_timelimit</span> <span class="err">0</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># configuración del servidor</span>
</span><span class='line'><span class="err">bindaddr</span> <span class="err">0.0.0.0</span>
</span><span class='line'><span class="err">sv_register</span> <span class="err">to</span> <span class="err">0</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># permite usar la consola remota</span>
</span><span class='line'><span class="err">sv_rcon_password</span> <span class="err">secretisimo</span>
</span></code></pre></td></tr></table></div></figure>


<p>Dice: Jugaremos una ronda de 30 puntos, sin límite de tiempo, que empieza por el
mapa &ldquo;dm7&rdquo;.</p>

<p>El comando <em>sv_maprotation</em> recibe como argumento la lista de mapas. Cada vez
que termine una ronda, se cambiará el mapa.</p>

<p>Más información en el sitio de teeworlds <a href="https://www.teeworlds.com/?page=docs&amp;wiki=server_setup_2">www.teeworlds.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nueva VM siempre es PV]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/17/nueva-vm-siempre-es-pv/"/>
    <updated>2017-03-17T20:46:32-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/17/nueva-vm-siempre-es-pv</id>
    <content type="html"><![CDATA[<p>Cuando usamos XenOrchestra, aveces sucede que teniendo un XenServer con &ldquo;muchas&rdquo;
máquinas virtuales, al crear una nueva; se crea como Paravirtualizada (PV) y no
como Virutalización por Hardware (HVM). Nos damos cuenta porque arrancar la
máquina buteando de una unidad óptica es casi imposible.</p>

<p>Algunos creen que es porque XenServer impone un límite. Esto no es cierto, ya
que XenServer es completamente gratuito hoy en día. Simplemente, asume que el
servidor está muy cargado y que una PV es más ligera. En mi experiencia creo que
XenOrchestra es el que hace eso; no xenserver como tal. También influye la
plantilla que utilices para crear una nueva VM.</p>

<p>Cuando esto pase, simplemente tomas la máquina y le dices que se pase a HVM. Lo
haremos seteando un parámetros que involucre HVM.</p>

<figure class='code'><figcaption><span>&#8220;xe&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> xe vm-param-set <span class="nv">uuid</span><span class="o">=</span>uuid-de-la-maquina HVM-boot-policy<span class="o">=</span><span class="s2">&quot;BIOS order&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Al setearle que el orden de buteo será el que diga el bios y listo. La máquina
pasa a ser HVM.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rainloop en debian]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/04/rainloop-en-debian/"/>
    <updated>2017-03-04T13:45:55-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/04/rainloop-en-debian</id>
    <content type="html"><![CDATA[<p>Aún recuerdo que algunos clientes me preguntaban con mucho asombro: &ldquo;-y porque
no roundcube&rdquo;; cuando hablábamos de webmail. Pero finalmente rainloop se ha
puesto de moda en cuba.</p>

<p>Un método bastante perezoso de instalar una LAMP <strong>en Debian</strong>, es instalar el
paquete <strong>phpmyadmin</strong>. Esto instala y configura el servidor SQL; además de
hacer jugar a apache2 con php y mysql, todo de un solo teclazo. Pero aveces, por
ejemplo, al instalar RainLoop, no queremos que phpmyadmin quede instalado. Una
buena variante es desinstalarlo después; pero nos quedan algunos paquetes
innecesarios instalados.</p>

<p>Para lograr la armonía que buscamos, instalaremos la LAMP por partes. Primero
apache SOLO.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> aptitude install apache2</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora instalamos mysql, a través de los metapaquetes, para que se instale el
adecuado de manera automática.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> aptitude install mysql-server mysql-client</span>
</span></code></pre></td></tr></table></div></figure>


<p>Llegado a este punto, debian y su magia te ayudarán a configurar el mysql,
pidiéndote la contraseña del root. Ahora instalamos la piedra angular. El
soporte de php+mysql de apache.</p>

<figure class='code'><figcaption><span>&#8220;soporte de mysql&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> aptitude install php5 libmysqlclient-dev php5-mysql</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instalamos el resto de la paquetería necesaria para rainloop.</p>

<figure class='code'><figcaption><span>&#8220;paquetería de rainloop&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> aptitude install curl libcurl3 libcurl3-dev php5-curl php5-json</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora <strong>reinicia</strong> tanto apache como mysql.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> systemctl restart mysql</span>
</span><span class='line'><span class="go"> systemctl restart apache2</span>
</span></code></pre></td></tr></table></div></figure>


<p>Crearemos un par de bases de datos necesarias para rainloop. Puedes o no crear
un usuario para rainloop, pero si vamos a tener un servidor sql con dos bases de
datos para una aplicación; la cual además, será la única cosa sql en el
servidor; no vale la pena crear otro usuario. Lo dejo a tu elección.</p>

<figure class='code'><figcaption><span>&#8220;creando las bases&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">create</span> <span class="k">database</span> <span class="n">rainloop</span><span class="p">;</span>
</span><span class='line'><span class="k">create</span> <span class="k">database</span> <span class="n">contactos</span><span class="p">;</span>
</span><span class='line'><span class="k">commit</span><span class="p">;</span>
</span><span class='line'><span class="n">exit</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Si de todas maneras quieres crear el usuario.</p>

<figure class='code'><figcaption><span>&#8220;un usuario pa rainloop&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">create</span> <span class="k">user</span> <span class="n">rainloop</span><span class="o">@</span><span class="n">localhost</span> <span class="n">identified</span> <span class="k">by</span> <span class="ss">&quot;rainloop&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">grant</span> <span class="k">all</span> <span class="k">privileges</span> <span class="k">on</span> <span class="n">rainloop</span><span class="p">.</span><span class="o">*</span> <span class="k">to</span> <span class="n">rainloop</span><span class="o">@</span><span class="n">localhost</span><span class="p">;</span>
</span><span class='line'><span class="n">flush</span> <span class="k">privileges</span><span class="p">;</span>
</span><span class='line'><span class="n">exit</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y vamos a instalar rainloop! La manera clásica de hacerlo es usando el paquete
&ldquo;.zip&rdquo; del sitio. Si quieres llégate allá y bájatelo. Descomprimes en un
directorio y sigue las instrucciones; sin embargo hay otra manera.</p>

<figure class='code'><figcaption><span>&#8220;alando rainloop del repositorio&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">mkdir -p /var/www/rainloop</span>
</span><span class='line'><span class="go">cd /var/www/rainloop</span>
</span><span class='line'><span class="go">curl -s http://repository.rainloop.net/installer.php | php</span>
</span></code></pre></td></tr></table></div></figure>


<p>Si tienes acceso a internet de verdad. Pinchará. Si estás detrás de un proxy, te
jodiste, hazlo a la manera ortodoxa.</p>

<p>Rainloop es fulísima con los permisos. Si no los tienes claros, dará unos palos
horribles que no tienen nada que ver con permisos aparentemente. Por ejemplo, si
el fichero que dice la versión, no pertenece al usuario que corre el servidor
web, te dirá que no puede encontrar el directorio &ldquo;data&rdquo;. Espectacular! Para
evitar eso, solo los directorios tendrán el ejecutable. Además, todo pertenecerá
al usuario <strong>www-data</strong>; que en debian es el usuario que usa el apache para
correr.</p>

<figure class='code'><figcaption><span>&#8220;estableciendo permisos&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chown -R www-data:www-data .
</span><span class='line'>find . -type d -exec chmod <span class="m">755</span> <span class="o">{}</span> <span class="se">\;</span>
</span><span class='line'>find . -type f -exec chmod <span class="m">644</span> <span class="o">{}</span> <span class="se">\;</span>
</span></code></pre></td></tr></table></div></figure>


<p>No te pondré como hacer el virtualhost porque eso no tengo que explicártelo (no
te hace falta verdad?). Te recomiendo que uses SSL.</p>

<p>No olvides entrar al admin panel (o al fichero de configuración) de rainloop y
pasarle la mano. Para abrir el admin panel, usa la url <strong>/?admin</strong>. Ahí
configura las bases de datos. Muy importante habilitar el soporte de contactos y
especificarle la base de datos, que creo, no debe ser la misma que rainloop;
aunque una gente me dijo que tiene ambas cosas en la misma base de datos; yo no
le he probado.</p>

<p>El usuario por defecto es <strong>admin</strong> y la contraseña es <strong>12345</strong>. De más está
que te diga: <strong>CÁMBIALO!</strong></p>

<p>Si estás de cara a internet, recuerda que rainloop viene con yahoo y gmail
configurado como servidores por defecto. No sé si está habilitados pero
chequéalo. Juraría que hay versiones en que venía habilitado. De todas formas,
te interesará que tus usuarios tengan gmail/yahoo más cerca, especialmente si un
usuario tiene múltiples identidades. Recuérdales que deben habilitar el acceso
pop en su cuenta de gmail.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx y websocket]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/03/nginx-y-websocket/"/>
    <updated>2017-03-03T23:49:47-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/03/nginx-y-websocket</id>
    <content type="html"><![CDATA[<p>Resulta que los websocket no pasan tan fácilmente por el proxy inverso. Llevan
su burumba.</p>

<p>Aquí por ejemplo, haremos un proxy inverso con SSL para una aplicación que
escucha por el puerto 8888.</p>

<figure class='code'><figcaption><span>&#8220;nginx&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">server</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">listen</span> <span class="mi">80</span> <span class="n">default_server</span><span class="p">;</span>
</span><span class='line'>   <span class="k">return</span> <span class="mi">301</span> <span class="nl">https</span><span class="p">:</span><span class="c1">//$host$request_uri;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">server</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">listen</span> <span class="mi">443</span> <span class="n">ssl</span> <span class="n">default_server</span><span class="p">;</span>
</span><span class='line'>   <span class="n">ssl_certificate</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">nginx</span><span class="p">.</span><span class="n">crt</span><span class="p">;</span>
</span><span class='line'>   <span class="n">ssl_certificate_key</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">nginx</span><span class="p">.</span><span class="n">key</span><span class="p">;</span>
</span><span class='line'>   <span class="n">location</span> <span class="o">/</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">proxy_set_header</span>        <span class="n">Host</span> <span class="err">$</span><span class="n">host</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_set_header</span>        <span class="n">X</span><span class="o">-</span><span class="n">Real</span><span class="o">-</span><span class="n">IP</span> <span class="err">$</span><span class="n">remote_addr</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_set_header</span>        <span class="n">X</span><span class="o">-</span><span class="n">Forwarded</span><span class="o">-</span><span class="n">For</span> <span class="err">$</span><span class="n">proxy_add_x_forwarded_for</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_set_header</span>        <span class="n">X</span><span class="o">-</span><span class="n">Forwarded</span><span class="o">-</span><span class="n">Proto</span> <span class="err">$</span><span class="n">scheme</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_pass</span> <span class="nl">http</span><span class="p">:</span><span class="c1">//127.0.0.1:8888/;</span>
</span><span class='line'>      <span class="n">proxy_http_version</span> <span class="mf">1.1</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_set_header</span> <span class="n">Connection</span> <span class="s">&quot;upgrade&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_set_header</span> <span class="n">Upgrade</span> <span class="err">$</span><span class="n">http_upgrade</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_redirect</span> <span class="k">default</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_read_timeout</span> <span class="mi">1800</span><span class="p">;</span>
</span><span class='line'>      <span class="n">client_max_body_size</span> <span class="mi">128</span><span class="n">G</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note como los encabezados Upgrade son seteados. Ese es el truco&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pkg tras un proxy]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/03/pkg-tras-un-proxy/"/>
    <updated>2017-03-03T23:00:57-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/03/pkg-tras-un-proxy</id>
    <content type="html"><![CDATA[<p>En el 5to infierno de infomed, con la vida detrás del proxy que ya he mencionado
incontables veces; todo se vuelve difícil.</p>

<p>Por suerte freebsd ha mejorado en materia de soporte de proxy. Si bien en
<strong>csh</strong>, basta con usar:</p>

<figure class='code'><figcaption><span>&#8220;setenv&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">setenv http_proxy http://proxy.sld.cu:3128</span>
</span><span class='line'><span class="go">setenv https_proxy $http_proxy</span>
</span></code></pre></td></tr></table></div></figure>


<p>Operaciones de rutinas como <strong>pkg audit -F</strong> suelen fallar al ser ejecutadas por
el cron. Setear el proxy de manera global es una opción; pero nunca ha sido de
mi agrado. Por suerte, el nuevo gestor de paquetes de freebsd soporta proxy en
su configuración.</p>

<p>El fichero de configuración está en una ubicación bien extravagante. Nada menos
que en <strong>/usr/local/etc/pkg.conf</strong>. Los comentarios hablan por si solos, vale la
pena mirarlos; no necesitarás leer manual ni buscar en google para darte cuenta
que:</p>

<figure class='code'><figcaption><span>&#8220;/usr/local/etc/pkg.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">PKG_ENV</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>   <span class="nx">http_proxy</span><span class="o">:</span> <span class="s2">&quot;http://proxy.sld.cu:3128&quot;</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>¡Establece el proxy!</p>

<p>Con eso <strong>pkg audit</strong> corrido desde el cron funcionará perfectamente. Además de
las demás operaciones que requieran bajar contenido de internet; claro está.</p>

<p>OJO! Nota que al final de la declaración del proxy, lo que hay es una <strong>coma</strong>,
NO un punto y coma. La configuración parece ser un <strong>json</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[portknocking en freebsd]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/01/portknocking-en-freebsd/"/>
    <updated>2017-03-01T23:53:01-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/01/portknocking-en-freebsd</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://uranio-235.github.io/images/alibaba.jpg" width="400" height="500" title="" ></p>

<p>La técnica port-knocking o knockd para otros, es en mi opinión, <strong>pilar de la
seguridad</strong> en cualquier servidor que use SSH. Aunque es bastante versátil y
puede ser usado hasta para reiniciar servicios sin loguearte.</p>

<p>Una de las cosas que empece a extrañar en FreeBSD fue knockd, pero gracias a la
flexbilidad de ipfw, podemos usar este poderoso software. En FreeBSD el fichero
se encuentra en <strong>/usr/local/etc/knockd.conf.sample</strong> y el paquete se llama
<strong>knock</strong>.</p>

<p>OJO!! Muy importante especificarle la interfaz por la cual va a escuchar.</p>

<figure class='code'><figcaption><span>&#8220;/usr/local/etc/knockd.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'> <span class="k">[options]</span>
</span><span class='line'>         <span class="na">logfile</span> <span class="o">=</span> <span class="s">/var/log/knockd.log</span>
</span><span class='line'><span class="s">         interface = xn0</span>
</span><span class='line'>
</span><span class='line'> <span class="k">[openSSH]</span>
</span><span class='line'>         <span class="na">sequence</span>    <span class="o">=</span> <span class="s">111,222,333</span>
</span><span class='line'><span class="s">         seq_timeout = 9</span>
</span><span class='line'><span class="s">         command     = /sbin/ipfw -q add 00001 allow all from %IP% to me</span>
</span><span class='line'><span class="s">         tcpflags    = syn</span>
</span><span class='line'>
</span><span class='line'> <span class="k">[closeSSH]</span>
</span><span class='line'>         <span class="na">sequence</span>    <span class="o">=</span> <span class="s">222,111,333</span>
</span><span class='line'><span class="s">         seq_timeout = 9</span>
</span><span class='line'><span class="s">         command     = /sbin/ipfw -q delete 00001</span>
</span><span class='line'><span class="s">         tcpflags    = syn</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nada, resumiendo, que el truco está en poner la regla con el número 00001.
Recuerdas que ipfw te permite (casi te obliga a) especificar un número para cada
regla. Pues usaremos ese numerito diminuto para ponerla de primera.</p>

<p>Los tipos ortodoxos criticarán que es una regla <em>al tetón</em>. Pienso que no vale
la pena abrir solo el 22; si voy a pasar tanto trabajo, que se me abra la puerta
completa.</p>

<p>Por cierto, junto con knock, viene un programita para hacer el knocking. Yo
solía hacerlo con netcat pero knock es más cómodo.</p>

<figure class='code'><figcaption><span>&#8220;knock&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">   knock 192.168.3.1 111,222,333</span>
</span></code></pre></td></tr></table></div></figure>


<p>En mi <strong>.bashrc</strong>, tengo esta función declarada.</p>

<figure class='code'><figcaption><span>&#8220;.bashrc&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> abrete_cesamo<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    knock  <span class="nv">$1</span> <span class="m">111</span> <span class="m">222</span> 333
</span><span class='line'>    ssh root@<span class="nv">$1</span>
</span><span class='line'>    knock  <span class="nv">$1</span> <span class="m">222</span> <span class="m">111</span> 333
</span><span class='line'> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>No tengo que decirte que la combinación de puertos está de acorde al ejemplo de
la entrada y que debes cambiarla por la que tu establezcas. Así de esa manera,
hacerle SSH a un servidor es ejecutar <strong>abrete_cesamo ip.del.servidor</strong> Luego al
terminar la sesión ssh, se ejecuta la secuencia de cerrado.</p>

<p>Y hablando de implementaciones raras de knockd!</p>

<p>En alpine linux, iptables está en <strong>/sbin</strong>, no en /usr/sbin. Sin
embargo, el fichero de configuración tiene puesto que está en /usr/sbin/, lo
cual, repito; no es correcto.</p>

<p>Además, tanto en debian como alpine. No importa que pongas en la configuración
porque interfaz escuchará. Siempre lo hará por eth0. Para cambiar esta
situación; debes:</p>

<p>En <strong>alpine</strong> linux, configurar la interfaz en el fichero <strong>/etc/conf.d/knockd</strong></p>

<p>En <strong>debian</strong>, configurar la interfaz (y poner un 1) en <strong>/etc/default/knockd</strong></p>

<p>Recuerda que en linux, el comando de iptables, viene con &ldquo;-A INPUT&rdquo;. Si tienes
un firewall corriendo, obviamente que no pincha; por tanto, ponlo con &ldquo;-I
INPUT&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bind en infomed]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/01/bind-en-infomed/"/>
    <updated>2017-03-01T23:13:34-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/01/bind-en-infomed</id>
    <content type="html"><![CDATA[<p>Seguimos con bind&hellip;</p>

<p>No hace mucho le comentaba a alguien, a raíz de una duda que tenía el colega
Paradyx; la manera correcta de configurar un servidor bind para una red que
cuelga de infomed.</p>

<p>Le comentaba que no vale la pena usar un forward por defecto; que hacer del
dominio &lsquo;.sld.cu&rsquo; una zona forward sería más que suficiente. Digo esto porque
infomed no resuelve ningún dominio que valla más allá de &ldquo;.sld.cu&rdquo;, por tanto,
no vale la pena transferirle las sepetecientas peticiones que hacen cuanta
mierda se conecta a nuestra red (especialmente android).</p>

<figure class='code'><figcaption><span>&#8220;named.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">options</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">directory</span> <span class="s">&quot;/etc/bind/&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="n">pid</span><span class="o">-</span><span class="n">file</span> <span class="s">&quot;/run/named/named.pid&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="n">listen</span><span class="o">-</span><span class="n">on</span> <span class="p">{</span> <span class="mf">10.1.1.1</span><span class="p">;</span> <span class="n">localhost</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>   <span class="n">allow</span><span class="o">-</span><span class="n">transfer</span> <span class="p">{</span> <span class="n">none</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>   <span class="n">allow</span><span class="o">-</span><span class="n">update</span> <span class="p">{</span> <span class="n">none</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>   <span class="n">version</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>   <span class="n">hostname</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>   <span class="n">server</span><span class="o">-</span><span class="n">id</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">view</span> <span class="n">lan</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">match</span><span class="o">-</span><span class="n">clients</span> <span class="p">{</span><span class="mf">10.1.1.0</span><span class="o">/</span><span class="mi">24</span><span class="p">;};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;localhost&quot;</span> <span class="n">IN</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">master</span><span class="p">;</span>
</span><span class='line'>      <span class="n">file</span> <span class="s">&quot;localhost.zone&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;hcg.sld.cu&quot;</span> <span class="n">IN</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">master</span><span class="p">;</span>
</span><span class='line'>      <span class="n">file</span> <span class="s">&quot;hcg.zone&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">notify</span> <span class="n">no</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;sld.cu&quot;</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">forwarders</span> <span class="p">{</span> <span class="mf">201.220.222.131</span><span class="p">;</span> <span class="mf">201.220.222.132</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">forward</span><span class="p">;</span>
</span><span class='line'>      <span class="n">forward</span> <span class="n">only</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span> <span class="c1">// view lan</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como mi dominio es hcg.sld.cu (subdominio de .sld.cu) lo declaramos ARRIBA
del dominio sld.cu. El dominio <strong>hcg.sld.cu</strong> es una zona <strong>master</strong>, sin
embargo, el dominio <strong>sld.cu</strong> es del tipo <strong>forward</strong> y entonces ahí declaramos
los forwarders (los dns de infomed).</p>

<p>Así solo le reenviaremos a infomed, aquellas peticiones que sean para infomed.</p>

<p>En mi opinión esto no es necesario. Tanto así, que la zona donde infomed hace
forward; la tengo para los servidores. En el caso de la zona para LAN,
simplemente declaro los servidores de correo en un fakeroot y listo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QoS con tc o dummynet]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/01/qos-con-tc/"/>
    <updated>2017-03-01T19:57:14-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/01/qos-con-tc</id>
    <content type="html"><![CDATA[<p>Acá en el 5to infierno de infomed, algunos usuarios; están acostumbrados a usar
un &ldquo;MUA&rdquo; (léase &ldquo;cliente de correo&rdquo;)  para alar el correo de infomed. Con el
boom de la wifi, los médicos querían tener su correo de infomed en el puñetero
cliente de correo de android/ios. Tras hacer un forward a los smtp y pop de
infomed, el ancho de vianda se fue a la mierda. Por tanto, surgió la necesidad
de chapiar el tráfico que va desde/hacia infomed. Por ejemplo, el tráfico smtp,
es saliente (subida), sin embargo, el tráfico pop es entrante (bajada).</p>

<p>El servidor que uso como &ldquo;router&rdquo;, es un alpine linux. El trinomio bind, dhcp e
iptables, sumado al kernel grsec; convierte en mi opinión a alpinelinux en la
mejor opción para un router.</p>

<p>Entrando en materia. Tenemos un canal de 2 megabit (256 KB/s). Pero en HDSL, la
subida es más triste que la bajada; y además, hay más gente bajando correo que
subiendo. Por tanto, usaremos un canal para el smtp, más estrecho que el del
pop. En este caso, <strong>eth0</strong> será la interfaz donde está el router.</p>

<figure class='code'><figcaption><span>&#8220;tc del firewall&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># reiniciamos las colas que hallan en eth0</span>
</span><span class='line'><span class="c"># para empezar a trabajar en limpio</span>
</span><span class='line'>tc qdisc del root dev eth0
</span><span class='line'>tc qdisc add dev eth0 root handle 1: htb default 30
</span><span class='line'>
</span><span class='line'><span class="c"># un canal de 256 KB/s lo partimos en dos</span>
</span><span class='line'><span class="c"># una fracción de 10 KB/s y otro de 20KB/s</span>
</span><span class='line'>tc class add dev eth0 parent 1:  classid 1:1  htb rate 256kbps burst 5k
</span><span class='line'>tc class add dev eth0 parent 1:1 classid 1:10 htb rate  20kbps burst 5k
</span><span class='line'>tc class add dev eth0 parent 1:1 classid 1:11 htb rate  10kbps burst 5k
</span><span class='line'>
</span><span class='line'><span class="c"># lo que valla para el pop e imap, lo dejamos en el :10 con 20kbps</span>
</span><span class='line'>tc filter add dev eth0 parent 1: protocol ip prio <span class="m">1</span> u32 match ip src 201.220.211.7 match ip sport <span class="m">110</span> 0xffff flowid 1:10
</span><span class='line'>tc filter add dev eth0 parent 1: protocol ip prio <span class="m">1</span> u32 match ip src 201.220.211.7 match ip sport <span class="m">143</span> 0xffff flowid 1:10
</span><span class='line'>
</span><span class='line'><span class="c"># lo que valla por el smtp, en el :11 de 10kbps</span>
</span><span class='line'>tc filter add dev eth0 parent 1: protocol ip prio <span class="m">1</span> u32 match ip dst 201.220.211.39 match ip dport <span class="m">25</span> 0xffff flowid 1:11
</span></code></pre></td></tr></table></div></figure>


<p>Note como en el caso de lo que venga del &ldquo;.7&rdquo;, (src) de los puertos pop e imap
(sport) pasarán por la cola <strong>1:10</strong>. Mientras que en el &ldquo;.39&rdquo;, se usan las
cláusulas dst y dport.</p>

<p><strong>pero aquí NO terminan las aventuras de QoS</strong></p>

<p>Resulta que el tráfico proveniente de las WiFi era apabullante para el servidor
proxy. Mientras que de una IP de una máquina entran 3 peticiones, de la IP de
un router wifi entran 30.</p>

<p>En un principio pensaba usar un delay_pool especial para estas ip, pero sería
complicar más el esquema de delay_pool que funciona bien por usuarios. Por
tanto, el tema de la bajada ya está cubierto. Ningún usuario puede acaparar todo
el ancho de banda con una descarga. Sin embargo, 1&#8217;000 peticiones de basura
(android con proxy configurado) ahogan al proxy. La medida fue, que el tráfico
entrante de la wifi, no exceda los 200KB.</p>

<p>En mi caso, los AP usan la ip 10 al 15, por tanto, haciendo un pipe de dummynet
y metiéndolos a todos en ese pipe: -que se fajen por los 200KB!</p>

<figure class='code'><figcaption><span>&#8220;ipfw.rules&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ipfw pipe <span class="m">1</span> config bw 200KBytes
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.10 to me
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.11 to me
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.12 to me
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.13 to me
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.14 to me
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.15 to me
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bind personal]]></title>
    <link href="http://uranio-235.github.io/blog/2017/02/22/bind-personal/"/>
    <updated>2017-02-22T21:05:26-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/02/22/bind-personal</id>
    <content type="html"><![CDATA[<p>Una cosa que me jode, es que linux el tema de los múltiples DNS no los maneje
bien. Por ejemplo, estamos en una LAN con red 192.168.1.0/24 y además,
tenemos una conexión a internet.</p>

<p>Entonces seteas dos DNS en el resolv.conf y no pincha!</p>

<p>Además, si la situación es itinerante (vas a múltiples LAN) mantener la
configuración DNS se vuelve un rollo. Aunque el networkmanager te permita
configurarlo, volvemos a la situación anterior.</p>

<p>Solución, tenemos un bin con sus debidos forwarders para cada red. En mi caso,
el <strong>/etc/named.conf</strong> me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/named.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="c1">// vim:set ts=4 sw=4 et:</span>
</span><span class='line'><span class="n">options</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">directory</span> <span class="s">&quot;/etc/bind/&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="n">pid</span><span class="o">-</span><span class="n">file</span> <span class="s">&quot;/run/named/named.pid&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="n">allow</span><span class="o">-</span><span class="n">recursion</span> <span class="p">{</span> <span class="mf">127.0.0.1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>        <span class="n">allow</span><span class="o">-</span><span class="n">transfer</span> <span class="p">{</span> <span class="mf">127.0.0.1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>        <span class="n">allow</span><span class="o">-</span><span class="n">update</span> <span class="p">{</span> <span class="mf">127.0.0.1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>        <span class="n">version</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>        <span class="n">hostname</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>        <span class="n">server</span><span class="o">-</span><span class="n">id</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>        <span class="n">recursion</span> <span class="n">yes</span><span class="p">;</span>
</span><span class='line'>        <span class="n">auth</span><span class="o">-</span><span class="n">nxdomain</span> <span class="n">no</span><span class="p">;</span>
</span><span class='line'>        <span class="n">listen</span><span class="o">-</span><span class="n">on</span> <span class="p">{</span> <span class="mf">127.0.0.1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// la lan por su DNS local</span>
</span><span class='line'><span class="n">zone</span> <span class="s">&quot;dominio.cu&quot;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">type</span> <span class="n">forward</span><span class="p">;</span>
</span><span class='line'>  <span class="n">forwarders</span> <span class="p">{</span> <span class="mf">192.168.1.3</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// lo demás por google</span>
</span><span class='line'><span class="n">zone</span> <span class="s">&quot;.&quot;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">type</span> <span class="n">forward</span><span class="p">;</span>
</span><span class='line'>  <span class="n">forwarders</span> <span class="p">{</span> <span class="mf">8.8.8.8</span><span class="p">;</span> <span class="mf">8.8.4.4</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>De esta manera, el dominio de la LAN (<strong>dominio.cu</strong>), será resuelto a través
del servidor DNS 192.168.1.3; que es el de la LAN. Para eso usamos la zona
&ldquo;dominio.cu&rdquo; del tipo forward y especificamos a 192.168.1.3 como su forward.</p>

<p>El resto, o sea, la zona &ldquo;.&rdquo;, será también del tipo forward y para este ejemplo,
usamos los dns de google como forward.</p>

<p>Ahora solo te queda actualizar el <strong>/etc/resolv.conf</strong> y setear a 127.0.0.1
como tu servidor dns</p>

<figure class='code'><figcaption><span>&#8220;/etc/resolv.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp"># Generated by resolvconf</span>
</span><span class='line'><span class="n">nameserver</span> <span class="mf">127.0.0.1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Recuerda que cada configuración automatizada, actualiza este fichero. Te
recomiendo que no te fajes con el fichero, si no que en cada conexión que desees
usar tu servidor, se lo especifiques. Por ejemplo, con networkmanager, le dices
a N conexión, que el servidor dns es manual y será <em>127.0.0.1</em>. Si usas Gnome
(NetworkManager), te recomiendo usar la utilidad <strong>nm-connection-editor</strong>. Te
permitirá especificar el dominio de búsqueda, cosa que no he visto como hacer
con el administrador de conexiones de gnome.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dns con vistas]]></title>
    <link href="http://uranio-235.github.io/blog/2017/02/05/dns-con-vistas/"/>
    <updated>2017-02-05T18:57:26-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/02/05/dns-con-vistas</id>
    <content type="html"><![CDATA[<p>Que lindo corre bind9 en alpine linux. Ahora que mis servidores están todo en el
pool de xenserver (los reyes magos me trajeron un servidor pro) tengo un nuevo
problema. Dentro de la red interna de xen, los servidores tienen una ip
distinta. Por ejemplo, para todo el mundo, el alpine linux que hace de router,
es 192.168.0.1, pero para los servidores, es 169.254.0.10</p>

<p>Además, el forward para infomed, es un privilegio que solo los servidores
tienen. Por tanto, lo más seguro, será usar una zona para la LAN y otra para la
red interna del pool.</p>

<p>Esto me recuerda las DMZ, pero no es lo mismo, porque no estoy creando cuellos
de botella. La red interna del pool es una vif, que funciona sin emitir
tráfico real por alguna pif.</p>

<figure class='code'><figcaption><span>&#8220;/etc/bind/named.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="c1">// vim:set ts=4 sw=4 et:</span>
</span><span class='line'>
</span><span class='line'><span class="n">options</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">directory</span> <span class="s">&quot;/etc/bind/&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="n">pid</span><span class="o">-</span><span class="n">file</span> <span class="s">&quot;/run/named/named.pid&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="n">listen</span><span class="o">-</span><span class="n">on</span><span class="o">-</span><span class="n">v6</span> <span class="p">{</span> <span class="n">none</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>   <span class="n">listen</span><span class="o">-</span><span class="n">on</span> <span class="p">{</span> <span class="mf">169.254.0.0</span><span class="o">/</span><span class="mi">16</span><span class="p">;</span> <span class="n">localhost</span><span class="p">;</span> <span class="mf">192.168.1.0</span><span class="o">/</span><span class="mi">24</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>   <span class="n">allow</span><span class="o">-</span><span class="n">transfer</span> <span class="p">{</span> <span class="n">none</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>   <span class="n">allow</span><span class="o">-</span><span class="n">update</span> <span class="p">{</span> <span class="n">none</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>   <span class="n">version</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>   <span class="n">hostname</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>   <span class="n">server</span><span class="o">-</span><span class="n">id</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>   <span class="c1">// los servidores hacen recursion</span>
</span><span class='line'>   <span class="n">allow</span><span class="o">-</span><span class="n">recursion</span> <span class="p">{</span> <span class="mf">169.254.0.0</span><span class="o">/</span><span class="mi">16</span><span class="p">;</span> <span class="n">localhost</span><span class="p">;};</span>
</span><span class='line'>   <span class="n">recursion</span> <span class="n">yes</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">view</span> <span class="n">lan</span>  <span class="p">{</span> <span class="c1">// la red LAN</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">match</span><span class="o">-</span><span class="n">clients</span> <span class="p">{</span><span class="mf">192.168.1.0</span><span class="o">/</span><span class="mi">24</span><span class="p">;};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;localhost&quot;</span> <span class="n">IN</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">master</span><span class="p">;</span>
</span><span class='line'>      <span class="n">file</span> <span class="s">&quot;localhost.zone&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;hcg.sld.cu&quot;</span> <span class="n">IN</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">master</span><span class="p">;</span>
</span><span class='line'>      <span class="n">file</span> <span class="s">&quot;hcg.zone&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">notify</span> <span class="n">no</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;.&quot;</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">master</span><span class="p">;</span>
</span><span class='line'>      <span class="n">file</span> <span class="s">&quot;fakeroot.zone&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span> <span class="c1">// view lan</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">view</span> <span class="n">xen</span> <span class="p">{</span> <span class="c1">// la red interna de XenServer</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">match</span><span class="o">-</span><span class="n">clients</span> <span class="p">{</span><span class="mf">169.254.0.0</span><span class="o">/</span><span class="mi">16</span><span class="p">;</span> <span class="n">localhost</span><span class="p">;};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;localhost&quot;</span> <span class="n">IN</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">master</span><span class="p">;</span>
</span><span class='line'>      <span class="n">file</span> <span class="s">&quot;localhost.zone&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;xen&quot;</span> <span class="n">IN</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">master</span><span class="p">;</span>
</span><span class='line'>      <span class="n">file</span> <span class="s">&quot;xen.zone&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">notify</span> <span class="n">no</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;hcg.sld.cu&quot;</span> <span class="n">IN</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">master</span><span class="p">;</span>
</span><span class='line'>      <span class="n">file</span> <span class="s">&quot;hcg.zone&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">notify</span> <span class="n">no</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;sld.cu&quot;</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">forwarders</span> <span class="p">{</span> <span class="mf">201.220.222.131</span><span class="p">;</span> <span class="mf">201.220.222.132</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">forward</span><span class="p">;</span>
</span><span class='line'>      <span class="n">forward</span> <span class="n">only</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span> <span class="c1">// view xen</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como ven, cree el dominio &ldquo;.xen&rdquo; que solo será visible a la red interna del
pool. La zona &ldquo;hcg.sld.cu&rdquo; también será visible para los servidores ya que estos
tienen una pata en la LAN; a esto suele llamarse &ldquo;shared zone&rdquo; (zona
compartida). Finalmente, la zona &ldquo;sld.cu&rdquo; (debajo de hcg) es una zona forward en
la vista de la interfaz interna.</p>

<p>El host proxy.hcg.sld.cu resolverá una ip de la lan; de esta misma manera, el
host proxy.xen, resolverá la ip de dicho host, pero dentro de la red interna del
pool.</p>

<p><strong>¿y por qué?</strong></p>

<p>Por que esta menera, solo los servidores (a través de la red del pool), harán
forward. Por ejemplo, el servidor de correo, podrá enviar y recibir su correo
multipop, ya que el alpine que está haciendo como router, permite forward desde
la red del pool hacia la WAN; o sea, todos los servidores, ven a la WAN. Es
obligaría al servidor de correo, a usar el dns de infomed para resolver
direcciones de infomed y el servidor local para resolver las direcciones de la
LAN, lo cual funciona de asco. Sin embargo, la vista del pool tiene una zona
forward. Cabe destacar, que una zona forward y un fakeroot, no se por qué; hace
que ninguna pinche.</p>

<p>Sensillo y seguro.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ipfw simple y conciso]]></title>
    <link href="http://uranio-235.github.io/blog/2017/02/01/ipfw-simple-y-consiso/"/>
    <updated>2017-02-01T23:15:47-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/02/01/ipfw-simple-y-consiso</id>
    <content type="html"><![CDATA[<p>Las instrucciones para hacer un cortafuegos realmente <strong>SIMPLE</strong> y la vez
funcional (statefull firewall) con ipfw; sensillamente <em>&ldquo;no existen&rdquo;</em>, al menos
No de manera oficial. El cortafuegos ejemplificado en el handbook es bastante
ortodoxo y no muestra la flexibilidad de ipfw.</p>

<p>Para empezar, el módulo debe ser cargado en el kernel, así que inicializaremos
ipfw como si fuera un demonio más del sistema. Esto quiere decir que lo
añadiremos al <strong>/etc/rc.conf</strong></p>

<figure class='code'><figcaption><span>&#8220;/etc/rc.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="nv">firewall_enable</span><span class="o">=</span><span class="s2">&quot;YES&quot;</span>
</span><span class='line'> <span class="nv">firewall_type</span><span class="o">=</span><span class="s2">&quot;/usr/local/etc/ipfw.rules&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Te recomiendo reiniciar ahora; para que todo se cargue correctamente.</p>

<p>La <a href="https://www.freebsd.org/doc/handbook/firewalls-ipfw.html">documentación oficial</a> aclara que
los firewall pueden ser (además) del tipo: open, client, simple, closed o
UNKNOWN. Sin embargo, <strong>en mi opinión</strong> estas configuraciones prefabricadas, no
son suficiente para un servidor (por ejemplo proxy).</p>

<p>Para mantener la armonía chea y anticuada de freebsd; colocamos el cortafuegos
en el etc/ que está bajo /usr/local/. Ten en cuenta que casi todas las
aplicaciones que instales, tendrán su /etc ahí.</p>

<p>Reiniciar ipfw no es tan jamón como un usuario de iptables haría. Hacer un flush
de las reglas, significa quedarse trancado y perder la conexión por ssh. Para
reiniciar el cortafuegos, deberás tener un script que haga flush y además,
reiniciar el servicio. Este scriptsito me lo hice para la faena de toquetear el
cortafuegos</p>

<figure class='code'><figcaption><span>&#8220;/usr/local/bin/reiniciar_ipfw.sh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="c">#!/bin/csh</span>
</span><span class='line'> service ipfw stop
</span><span class='line'> ipfw -q flush
</span><span class='line'> service ipfw start
</span><span class='line'> ipfw show
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>La documentación oficial (y otras muchas) indican que cada regla se cree
enumerada y que bebes mantener esta numeración manualmente. Sin embargo, esto no
es estrictamente necesario. Cada regla incrementará el número de manera
implícita.</p>

<p>La mecánica de ipfw es más sencilla que cualquier firewall de linux en mi
opinión.</p>

<p><strong>ipfw add accion argumento</strong></p>

<p>Si ya conoces <strong>ufw</strong>, te darás cuenta de que es una copia bastante mala de
ipfw, sobre todo; teniendo cuenta que ipfw es un firewall en sí, mientras que
ufw, es un stack que genera instrucciones de iptables.</p>

<p>Algo de lo que linux se ha alejado mucho es el teorema de KISS, pero en BSD, que
es unix ortodoxo, mantiene la simpleza como pilar. De esta manera, una acción
allow, en su forma más simple, es casi lenguaje natural.</p>

<p><strong>ipfw add allow all from 10.99 to me</strong></p>

<p>O sea, permite todo lo que venga de 10.0.0.1 para mi. Pero podemos hacer algo
más discriminatorio.</p>

<p><strong>ipfw add allow tcp from 10.0.0.99 to 10.0.0.1 dst-port 22 in via xn0</strong></p>

<p>Permite el tráfico tcp de 10.99 para 10.1 que valla para el puerto 22 en sentido
entrante (in) por la interfaz (via) xn0</p>

<p>¿Te la llevaste? Jamón de pollo! ¿Verdad?</p>

<p>Veamos pues un <strong>ipfw.rules</strong> bien básico. La interfaz <strong>lo0</strong> (lo con un cero)
es el localhost. La interfaz xn0 es la WAN y xn1 es la LAN.</p>

<figure class='code'><figcaption><span>&#8220;ipfw.rules&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="c"># lo permitimos todo pa afuera</span>
</span><span class='line'> ipfw -q add allow all from any to any out keep-state
</span><span class='line'>
</span><span class='line'> <span class="c"># permite todo por el localhost</span>
</span><span class='line'> ipfw -q add allow all from any to any via lo0
</span><span class='line'>
</span><span class='line'> <span class="c"># las conexiones que ya estén iniciadas, pásalas</span>
</span><span class='line'> <span class="c"># compara eso con el de iptables</span>
</span><span class='line'> ipfw -q add allow tcp from any to any established
</span><span class='line'>
</span><span class='line'> <span class="c"># permite que te hagan ping desde la LAN </span>
</span><span class='line'> <span class="c"># pero no mucho icmp para que no hagan flood</span>
</span><span class='line'> ipfw pipe <span class="m">1</span> config bw 30KBytes
</span><span class='line'> ipfw -q add pipe <span class="m">1</span> icmp from 192.168.1.0/24 to me in via xn1
</span><span class='line'> ipfw -q add allow  icmp from 192.168.1.0/24 to me in via xn1
</span><span class='line'>
</span><span class='line'> <span class="c"># permite que accedan al proxy desde la LAN</span>
</span><span class='line'> ipfw -q add allow tcp from 192.168.1.0/24 to me <span class="m">3128</span> via xn1
</span><span class='line'>
</span><span class='line'> <span class="c"># permite el servidor web pero solo deade la WAN</span>
</span><span class='line'> <span class="c"># en este caso &quot;me&quot; será la ip de la WAN</span>
</span><span class='line'> ipfw -q add allow tcp from any to me dst-port <span class="m">80</span> via xn0
</span><span class='line'>
</span><span class='line'> <span class="c"># descarta el resto de los paquetes ENTRANTES</span>
</span><span class='line'> <span class="c"># esta regla casi nunca es necesaria, ya que</span>
</span><span class='line'> <span class="c"># suele ser implícita, o sea, drop por defecto</span>
</span><span class='line'> ipfw -q add drop all from any to any
</span></code></pre></td></tr></table></div></figure>


<p>Veamos algunas características de este cortafuegos&hellip;</p>

<p>Como ven, no arranca haciendo flush como los de iptables. De hecho, hacer flush
como primera linea puede causarte problemas muy serios. Por otro parte,
reiniciar el cortafuegos sin hacer flush, provoca que se dupliquen las reglas.</p>

<p>La salida, por definición, está bloqueada. La última regla; autoriza la salida
del tráfico. ¿Por qué la última? ¿Por qué no al principio? Pues por si hacemos
un pipe de salida. Aveces regular el ancho de banda de salida, es más útil que
regular el de entrada. Por ejemplo, si queremos moderar la cantidad de tráfico
que un servidor web exporta. Más adelante veremos dummynet y los pipe.</p>

<p>En iptables, hacemos DROP cuando queremos desechar paquetes. En ipfw usamos
<strong>deny</strong>, aunque también puedes usar <strong>drop</strong> que es sinónimo de deny. El
cortafuego lo sustituirá por deny. Lo puedes ver al usar: ipfw show</p>

<p>Note que &ldquo;<strong>from me</strong>&rdquo; para ipfw, significa un paquete que provenga de cualquiera de
las ip que tiene configurada el servidor. En este caso, la interfaz xn0 debe
tener alguna de la red 192.168.1.0/24 así que <strong>me</strong> será dicha ip.</p>

<p>Una característica de ipfw <strong>bien peligrosa</strong> es que tiene muchas cosas
<strong>implícitas</strong>. Como lo de la numeración. Cuando digo implícita me refrito a que
si no las pones, ipfw las asume. Fíjate bien como se maneja el tema de los
puertos en la siguientes reglas.</p>

<figure class='code'><figcaption><span>&#8220;ipfw dst-port&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="c"># permite que accedan al proxy desde la LAN</span>
</span><span class='line'> ipfw -q add allow tcp from 192.168.1.0/24 to me <span class="m">3128</span> via xn1
</span><span class='line'>
</span><span class='line'> <span class="c"># permite el servidor web pero solo deade la WAN</span>
</span><span class='line'> <span class="c"># en este caso &quot;me&quot; será la ip de la WAN</span>
</span><span class='line'> ipfw -q add allow tcp from any to me dst-port <span class="m">80</span> via xn0
</span></code></pre></td></tr></table></div></figure>


<p>En la primera regla, declaramos &ldquo;<strong>me 3128</strong>&rdquo;, esto significa &ldquo;para mi ip por el
puerto 3128&rdquo;. Realmente ipfw lo reescribe (puedes verlo con &ldquo;show&rdquo;) y pondrá la
cláusula <strong>dst-port</strong> al igual que la siguiente linea, detrás de <strong>me</strong> viene la
cláusula <strong>dst-port</strong> seguida por el puerto. Pero si no la pones, se asume como
implícita. En poca palabras:</p>

<p>&ldquo;to me 3128&rdquo; y &ldquo;to me dst-port 3128&rdquo; es exactamente lo mismo.</p>

<p>Otro tema que le retraquetea el mango; es la gestión del ancho de vianda. Porque
tc de iproute (en linux) es un asco. Pero si conocemos ipfw, sabremos que maneja
el ancho de vianda de una menera muy peculiar; usando un módulo llamado
dummynet. No esperes ver la palabra &ldquo;dummynet&rdquo; escrita en el cortafuegos. En
fin; analiza este ejemplo:</p>

<figure class='code'><figcaption><span>&#8220;ipfw y dummynet&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> ipfw add pipe <span class="m">1</span> ip from me to 192.168.1.0/24 out via xn0
</span><span class='line'> ipfw pipe <span class="m">1</span> config bw 128KBytes
</span></code></pre></td></tr></table></div></figure>


<p>Se crea el pipe número 1, con un ancho de banda de 128 KyloBytes. En la regla de
arriba, se dijo que todo el tráfico de la interfaz xn0, proveniente de el
servidor hacia la red 192.168.1.0/24 y en sentido saliente; será a 128K. O sea,
modificamos el ancho de banda <strong>que sale</strong> del servidor, lo cual es bastante
útil para un servidor web o ftp.</p>

<p>En el caso de un servidor proxy, no vale la pena modificar el ancho de banda de
<strong>salida</strong>, ya que las páginas son enviadas al cliente una vez bajadas y si ya
nos hicimos el arakiri de bajarla: ¿Pa que demorarlas más? Para un servidor
proxy usamos una regla bidireccional. O sea, creamos el pipe 1 y el pipe 2 con
igual o diferente ancho de banda y aplicamos una regla pa afuera y otra pa
adentro.</p>

<p>Tenga en cuenta que el las conexiones HDSL tiene más ancho de vianda pa abajo
que pa arriba. Osea, que salida a la WAN (el router) debe ser más estrecha que
salida a la LAN.</p>

<p>En un servidor de correo sí sería útil regular la entrada, ya que hay gente que
manda elefantes por el puerto 25. Sobre todo en redes conmutadas o muy lentas.
También sería útil moderar la entrada en un servidor que involucre subida de
ficheros, por ejemplo, una nube, un servidor de carpetas compartidas.</p>

<p>Ah! por cierto:</p>

<p>Si crearas un pipe y le dijeras que 3 ip, lo usan, el ancho de vianda sería
compartido para esas 3 ip. O sea</p>

<figure class='code'><figcaption><span>&#8220;ipfw y dummynet&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> ipfw add pipe <span class="m">1</span> ip from me to 192.168.1.10/24 out via xn0
</span><span class='line'> ipfw add pipe <span class="m">1</span> ip from me to 192.168.1.11/24 out via xn0
</span><span class='line'> ipfw add pipe <span class="m">1</span> ip from me to 192.168.1.12/24 out via xn0
</span><span class='line'> ipfw pipe <span class="m">1</span> config bw 128KBytes
</span></code></pre></td></tr></table></div></figure>


<p>En este caso, 10, 11 y 12, tienen un total de 128KB/s, si 10 acapara todo el
ancho de banda (los 128) entonces 11 y 12 tendrán unos bellos timeout como
respuesta. Piensa en todo lo que puedes hacer con eso.</p>

<p><strong>OJO CON EL ÓRDEN!!!</strong></p>

<p>Esa regla machea <strong>la salida</strong>. Si la colocaras <strong>debajo</strong> de la regla que
permite todo hacia afuera, simplemente, <strong>no pinchará</strong> porque <strong>no machea</strong>.
Coge por la regla de salida y nunca va al pipe. Como diría los yumas &ldquo;rule of
thumbs&rdquo;</p>

<p><strong>Las reglas que envían el tráfico al pipe, debes ponerlas arriba de la regla
&ldquo;destino final&rdquo; del paquete.</strong></p>

<p>De esta manera el paquete va al pipe y luego regresa al cortafuegos. O sea,
intenta poner siempre los pipe arriba y el cortafuegos abajo</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mis crónicas con freebsd]]></title>
    <link href="http://uranio-235.github.io/blog/2017/01/28/freebsd-11/"/>
    <updated>2017-01-28T23:39:52-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/01/28/freebsd-11</id>
    <content type="html"><![CDATA[<p>Si vas a leer este artículo, te aviso, que no tiene nada que ver con el blog. Me
dispongo a expresar mi criterio sobre FreeBSD y un tanto de como ha formado
parte de mi vida profesional.</p>

<p>   <blockquote><p>FreeBSD, tecnología arcana para algunos y arcaica para otros.</p></blockquote></p>

<p>Se cuentan leyendas sobre FreeBSD, como que es el sistema operativo de los nodos
y cosas así. Mucha gente lo tiene como un arcano o algo que probarán <em>un día de
estos</em>. Yo pienso que no tiene nada del otro mundo. De hecho, en mi opinión,
gentoo es más complicado que freebsd.</p>

<p>Lo que si me queda claro que es un excelente sistema operativo para servidores
proxy. Además, ipfw, su cortafuegos, es sólido como una piedra. En FreeBSD eso
de caer de rodillas ante un ataque DoS, es simplemente utópico.</p>

<p>En ambientes libres de proxy, el binomio dummynet-<a href="https://www.freebsd.org/doc/handbook/firewalls-ipfw.html">ipfw</a>
permite un manejo del ancho de banda con una simpleza que ya quisiera <strong>tc</strong>. Un
solo pipe puede tener valores diferentes para su ancho de banda, encolamiento y
delay.</p>

<p>Por otra parte, el sistema de
<a href="https://www.freebsd.org/doc/handbook/jails.html">jails</a> es un batazo. Sobre
todo en ambientes donde te ves obligado a meter la pata y no dispones de
virtualización. Lo único equivalente a esto en linux, sería LXC, pero no es ni
la chancleta. Los jails combinado con ZFS, permiten hacer cosas alucinantes.</p>

<p>Cada versión nueva que sale la pruebo; y aunque había hecho mis cositas con él,
siempre acababa dejándolo de lado por el tema del ancho de banda. Cualquier
operación que hagas con la paquetería requiere conexión y poco ancho de banda
provoca que la operación falle. La versión 9 en mi opinión fue un desastre.
Especialmente por el sistema de ports que daba unos palos horribles.</p>

<p>El gestor de paquetes ha mejorado muchísimo. La resolución de dependencias y
velocidad es espectacular. Además, han logrado una completa integración de
gestión de paquetes en una sola herramienta. Ya no es el reguero ese de pkg_info
por un lado y pkg_add por otro. Ahora además, soporta operaciones de limpieza
como <em>autoremove</em> y <em>clean</em>. La herramienta <strong>portaudit</strong> al parecer fue
<em>portada</em> a pkg también y ahora es oficial. Otras novedades relevantes son que permite crear
respositorios y hacer operaciones en jails. Ah! y para que contarte el soporte
de proxy. Más detalles (y una rosetta) <a href="https://wiki.freebsd.org/PkgPrimer">lo puedes ver aquí</a>.</p>

<p>FreeBSD 10 no lo toqué, estuve más girado para OpenIndiana.</p>

<p>Pero la versión 7 de OI parecía no terminar nunca. Finalmente el avión no
despegó. El fiasco de nexenta store y la insertidumbre de oracle, golpearon
fuertemente a la comunidad de OpenIndiana. El mundo se dio cuenta que OI tenía
el futuro de un submarino descapotable y gran parte de la comunidad de illumos
se mudó pa BSD. La comunidad de OpenIndiana se desmoronaba con las botas
puestas. El agitado canal de freenode #openindiana se convirtió en un canal
muerto. En lo personal, tras fracasar en mi afán por portar Ruby a OI, en parte
debido a que no tengo ancho de banda para hacer operaciones en el Userland; alcé
bandera blanca también.</p>

<p>Pero como soy Linuxero! Volví a poner mis servidores en debian y comencé a mirar
a fedora. De nuevo el ancho de vianda me golpeó; además de otros avatares de la
vida. Terminé usando un chroot de arch, sobre la viejísima instalación de debian
en mi laptop Pentium 3 que ya estaba más que obsoleta. Todas mis aplicaciones,
mi /home, etc&hellip; Eran un chroot de arch dentro de un debian desnudo. Corría i3 y
levantaba con startx luego de entrar al chroot.</p>

<p>Free BSD andaba por finales de la 9 y la 10 en el horno; si mal no recuerdo&hellip;
Yo, me dedicaba a leer noticias y continuaba suscrito a la lista de freebsd en
español; donde hacer top-posting se paga con la pena capital.</p>

<p>Mientras tanto, perdía yo mi trabajo y paradógicamente recién adquiría una nueva
laptop. Apostar por el recién abierto &ldquo;modelo de trabajo por cuenta propia&rdquo;; me
costó perder mi empleo y quedarme sentado un buen rato. Instalé ArchLinux en la
laptop nueva para conservar las configuraciones de la anterior. Para este
entonces me consideraba usuario de archlinux &ldquo;por casualidad&rdquo;. Me soñaba como un
feliz usuario de Fedora. Consideraba ya a Debian; única y expresamente una
herramienta para servidores. Seguía teniendo a FreeBSD en al mira, pero para
cuando consiguiera un trabajo con un internet &ldquo;decente&rdquo; y tuviera algo de
tiempo.</p>

<p>El período más jodido de mi vida estaba aconteciendo en ese momento. No voy a
escribir aquí mis problemas personales; pero a modo de resumen diré que la
última enfermera que tuve como pareja me calló a tarros y la casa donde nací, la
vendieron sin decirme nada. Al estilo país capitalista &ldquo;me quede en la calle&rdquo;.
Con el ánimo y la autoestima en el piso; el único producto que podía ofrecer
eran servidores con debian. A mediados del 2014, empecé en el calixto, de vuelta
al trabajo estatal. El ancho de vianda seguía siendo un problema; también el
tema de la cuota. FreeBSD seguía &ldquo;pospuesto pero no olvidado&rdquo;.</p>

<p>A finales del 2016, me trajeron el servidor de gama media para remplazar el
totem de servidores. Además, habían ampliado el susodicho ancho de vianda. Fue
entonces cuando decidí, que el nuevo proxy, no podía quedarse mariado como le
pasa al squid en linux; muchísimo menos con el micro tan poco potente del
servidor (gama media).</p>

<p>Para mi sopresa, FreeBSD andaba por la 11 (yo lo hacía por la 10 todavía) por lo
lento que se desarrolla; el pobre. Ahora estoy muy contento con mi squid sobre
FreeBSD 11. Que si bien también se marea, lo hace bastante poco y se recupera
rápido.</p>

<p>Por lo que veo ya no son tan retrógrados como antes; han mejorado mucho en ese
aspecto, aunque siguen siendo una mirada al futuro desde el pasado. Mantienen la
onda chea reflejada en su configuración; pero todo bien afinado, fresco y
modernizado. Además, la simpleza en un pilar de base en freebsd.</p>

<p>Dejaron de ser retrógrados para convertirse en modernos pero anticuados.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[animación del palito]]></title>
    <link href="http://uranio-235.github.io/blog/2017/01/21/palito/"/>
    <updated>2017-01-21T12:47:55-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/01/21/palito</id>
    <content type="html"><![CDATA[<p>Por si se me olvida, porque lo he olvidado varias veces. En ocasiones, queremos
hacer una simple animación de consola, para representar trabajo de un script sin
mostrar lo que está procesando. Este script de ejemplo, itera por cada caracter
de la fecha y muestra la barra cambiando de posición, el clásico palito girando.</p>

<figure class='code'><figcaption><span>&#8220;scope&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># esta es la animación, puedes sustituirla</span>
</span><span class='line'><span class="c1"># por lo que más te guste, solo pon la secuencia</span>
</span><span class='line'><span class="n">animacion</span><span class="o">=[</span><span class="s1">&#39;|&#39;</span><span class="p">,</span><span class="s1">&#39;/&#39;</span><span class="p">,</span><span class="s1">&#39;-&#39;</span><span class="p">,</span> <span class="s1">&#39;\ &#39;</span><span class="o">.</span><span class="n">strip</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">d</span><span class="p">,</span><span class="n">i</span>  <span class="k">in</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">chars</span><span class="o">.</span><span class="n">each_with_index</span>
</span><span class='line'>
</span><span class='line'>   <span class="c1"># múeve a la siguiente frama de la animación</span>
</span><span class='line'>   <span class="n">palito</span><span class="o">=</span><span class="p">(</span><span class="n">animacion</span><span class="o">.</span><span class="n">push</span> <span class="n">animacion</span><span class="o">.</span><span class="n">shift</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>   <span class="c1"># muestra el palito y has un retorno de carro</span>
</span><span class='line'>   <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">palito</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="se">\r</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>   <span class="c1"># has una media</span>
</span><span class='line'>   <span class="nb">sleep</span> <span class="mi">0</span><span class="o">.</span><span class="mi">3</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">d</span><span class="o">=</span><span class="n">d</span> <span class="c1"># nada que hacer con los datos</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>En el array, el último caracter tiene un String#strip porque al escribir <strong>\&lsquo;</strong>
el compilador suele interpretarlo como que estás escapando la comilla simple.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DataTables en español]]></title>
    <link href="http://uranio-235.github.io/blog/2017/01/20/datatables-espanol/"/>
    <updated>2017-01-20T16:39:32-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/01/20/datatables-espanol</id>
    <content type="html"><![CDATA[<p>Siempre hay un cliente exquisito que le molesta la aplicación completa en
español, a excepción del puñetero paginador que está en inglés.</p>

<p>Como ya no uso kaminari ni will_paginate la cosa se complica. Decidí llamar a
todas las tables id=&ldquo;latabla&rdquo; y en el <strong>application.js</strong>, según la
documentación de la API de DataTables, le ponemos la clave <em>language</em> con sus
pertinentes componentes.</p>

<figure class='code'><figcaption><span>&#8220;application.js&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#latabla&#39;</span><span class="p">).</span><span class="nx">DataTable</span><span class="p">(</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="s2">&quot;language&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;decimal&quot;</span><span class="o">:</span>        <span class="s2">&quot;.&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;emptyTable&quot;</span><span class="o">:</span>     <span class="s2">&quot;No hay datos para mostrar&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;info&quot;</span><span class="o">:</span>           <span class="s2">&quot;del _START_ al _END_ (_TOTAL_ total)&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;infoEmpty&quot;</span><span class="o">:</span>      <span class="s2">&quot;del 0 al 0 (0 total)&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;infoFiltered&quot;</span><span class="o">:</span>   <span class="s2">&quot;(filtrado de todas las _MAX_ entradas)&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;infoPostFix&quot;</span><span class="o">:</span>    <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;thousands&quot;</span><span class="o">:</span>      <span class="s2">&quot;&#39;&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;lengthMenu&quot;</span><span class="o">:</span>     <span class="s2">&quot;Mostrar _MENU_ entradas&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;loadingRecords&quot;</span><span class="o">:</span> <span class="s2">&quot;Cargando...&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;processing&quot;</span><span class="o">:</span>     <span class="s2">&quot;Procesando...&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;search&quot;</span><span class="o">:</span>         <span class="s2">&quot;Buscar:&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;zeroRecords&quot;</span><span class="o">:</span>    <span class="s2">&quot;No hay resultados&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;paginate&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;first&quot;</span><span class="o">:</span>      <span class="s2">&quot;Primero&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;last&quot;</span><span class="o">:</span>       <span class="s2">&quot;Último&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;next&quot;</span><span class="o">:</span>       <span class="s2">&quot;Siguiente&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;previous&quot;</span><span class="o">:</span>   <span class="s2">&quot;Anterior&quot;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="s2">&quot;aria&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="s2">&quot;sortAscending&quot;</span><span class="o">:</span>  <span class="s2">&quot;: ordenar de manera Ascendente&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="s2">&quot;sortDescending&quot;</span><span class="o">:</span> <span class="s2">&quot;: ordenar de manera Descendente &quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span> <span class="p">);</span> <span class="c1">// document ready</span>
</span></code></pre></td></tr></table></div></figure>


<p>Claro, realmente no lo hice así, ya que en vez de <strong>&ldquo;Anterior&rdquo;</strong> puse
<strong>t(:dt_prev)</strong>  y cree su pertinente fichero de idioma con la traducción, pero
escribí esta entrada pensando en gente que puede o no usar RoR. No obstante, el
buen desarrollador de rails, sabe que lo correcto sería usar la in API de i18n.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tendencias tecnológicas]]></title>
    <link href="http://uranio-235.github.io/blog/2017/01/09/tendencias-tecnologicas/"/>
    <updated>2017-01-09T21:04:02-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/01/09/tendencias-tecnologicas</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://uranio-235.github.io/images/bandwagon.jpg" width="400" height="500" title="" ></p>

<p>Por suerte, la era de Zentyal está a punto de terminar.</p>

<p>Ahora tenemos tocadores de pfSense, que se creen usuarios de FreeBSD.</p>

<p>Siempre me ha maravillado el criterio de selección tecnológica de la mayoría (NO
todos) los cubanos</p>

<h4>puro efecto bandwagon</h4>

<p>Funciona como especie de moda, donde el software más popular triunfa,
simplemente por su popularidad, no por su adecuación, o idoneidad.</p>

<p>Por ejemplo, nginx se puso de moda, porque el jovenclub lo usa. El jovenclub es
famoso por sus disparates tecnológicos, pero no importa. ¡Usemos nginx! Antes yo
usaba nginx, como proxy inverso, balanceo de carga y servidor web de contenido
estático. Entonces yo era &ldquo;un extravagante&rdquo;. Ahora todo el mundo usa nginx para
TODO. Tipos que AYER tocaron la puntica de nginx, te dicen: &ldquo;¿aún usas apache?&rdquo;
y te miran como si tú fueras un bicho raro. Curiosamente, la misma mirada que
ponían cuando les decías que usabas nginx (además de apache).</p>

<p>Muchos dicen que &ldquo;systemd es una mierda&rdquo;, pero al preguntar &ldquo;por qué&rdquo;, son pocos
los que dan argumentos técnicos que vallan más allá de simple resistencia al
cambio. Parece no haber un término medio. Todo es blanco y negro. Nadie dice por
ejemplo que systemd es bueno para máquinas de escritorios pero no tan bueno para
servidores. NOOoo&hellip;</p>

<p>Otro que bien baila es Proxmox. La herramienta de virtualización que ha caído en
manos de los mas perezosos como dedo en el anillo. Al parecer soy el único
cubano que usa Xen. Actualmente me dicen: &ldquo;ah! ¿no usas proxmox?&rdquo;. Pero cuando
pregunto: ¿qué tiene proxmox superior a xen? Estoo, es queeee, veráaas,
bueeenooo&hellip;. Nada, que está moda. La ecuación es simple:</p>

<h4>Virtualización = Proxmox</h4>

<p>click-click-click-click-click ¡<strong>ZAS</strong>! Todo está listo!!</p>

<p>Dejaron de usar windows Server (click, click listo!)</p>

<p>Para usar:</p>

<p>Proxmox+Zimbra+pfSense (click, click ¡LISTO! ¡¡¡y además FUNCIONA!!)</p>

<p>¿Cambio de paradigma? ¿Filosofía UNIX? ¿Estilo de trabajo? ¿Teorema de KISS?
¿Software Libre? <em>-pfff, que chiste. Ese tipo está loco, anda con la pila de
consolas que parecen salida de la matrix. Nerd!</em></p>

<p>No saben que demonios es un cortafuegos, no son capaces de elaborar una solución
a la medida de su problema y ni siquiera entienden el software que usan pero
eso son nimiedades.</p>

<p>Cuando las necesidades tan pecularies de cubita la bella dicen &ldquo;aquí estoy&rdquo;,
entonces no saben como van a modificar el comportamiento del software para
adecuarse a nuestras extravagantes necesidades. Por que hay cientos de menus con
cientos de click y checkmarks, pero ninguna hace lo que le exigen al sysadmin
cubano.</p>

<p>El servidor de correos, es su mayor dolor de cabeza, pero hay Zimbra. A veces
necesitan un servidor SIMPLE o un servidor COMPLEJO, nada que ver con Zimbra y
bueno, prueba a ver si iRedMail te lo resuelve.</p>

<p>Ven herramientas como nagios o smokeping, se quedan con la boca abierta, pero
¡joder! es muy complicado, me paso. Al menos,  hasta que alguien me de una
configuración que funcione y yo cambiarle los valores para que se adecue a mi
entorno.</p>

<p>Reza porque todo funcione. Ya que es tanta la ignorancia, que si hay un
problema, ni siquiera saben como van a pedir ayuda, porque ni siquiera entienden
con que están tratando.</p>

<p>Siempre puedes decirle al jefe &ldquo;no se puede&rdquo;. Después de todo, eres un
<strong>tolerable asalariado</strong> y no te pasará nada por incumplir. Le puedes echar la
culpa <em>al país que es una mierda por el atraso tecnológico</em> y bla bla bla; todas
esas excusas que usan los mediocres de gama alta.</p>

<h4>pero tienen más horas de facebook que de consola</h4>

<p>Los más triste del caso, es que luego quieren venir a discutir de tecnología y
uno no sabe como va a llevar la conversación para no humillarlos.</p>

<h4>punto y aparte</h4>

<p>Además, están los tipos que <strong>Sí SABEN</strong>, pero que usan todo eso porque &ldquo;no
tienen tiempo&rdquo;. Trabajan sentados, el día entero apretando teclas en aire
acondicionado y &ldquo;no tienen tiempo&rdquo;.</p>

<p>Pierden su tiempo en jugar con toda esta parafernalia modista, para luego darse
cuenta que esos sistemas, están incompletos. Les falta algo que ellos ya han
hecho mejor y es cuando se dan cuenta, que están andando con juguetes.</p>

<h4>para los extremistas</h4>

<p>No digo que Zimbra/pfSense/Proxmox sean malos, digo que el método perezoso, es
malo.</p>

<p>No puedes comparar la picoloro con la llave inglesa.</p>

<p>Tampoco puedes pensar que solo necesitas una de las dos para hacerlo todo. Ambas
son útiles, en su adecuado ambiente y para la tarea que fueron diseñadas.</p>

<p>Antes de emitir un criterio tecnológico, pruebo el software, lo instalo, lo
manoceo, trato de romperlo, de ver como funciona, que tiene por detrás;
finalmente, que haría yo si quisiera/pudiera mejorarlo. Entonces me hago un
criterio.</p>

<p>La gente que me conoces, sabe que aveces digo: &ldquo;eso es una mierda&rdquo;. Otros, que
me conocen mejor y que hace lo mismo que yo; suelen oírme cuando digo: -eso es
una mierda y te contaré como llegué a esa conclusión, ya que seguro que a ti te
ha pasado parecido.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[flasheando modem al S4]]></title>
    <link href="http://uranio-235.github.io/blog/2017/01/09/flasheando-modem-al-s4/"/>
    <updated>2017-01-09T19:00:58-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/01/09/flasheando-modem-al-s4</id>
    <content type="html"><![CDATA[<p>Es un mojón de los Samsung, tener el módem (banda base) como una partición y
(por ende un firmware) aparte del sistema. Por este motivo, cuando flasheas
cyanogen (léase &ldquo;cualquier ROM&rdquo;) una y otra vez; o cuando el teléfono se apaga
abruptamente&hellip; Diiiicen que se corrompe el módem.</p>

<p>Entonces, de buenas a primeras, el teléfono te dice &ldquo;tarjeta SIM expulsada,
Reinicie&rdquo;. Aveces al reiniciar no se soluciona el problema. Yo he estado hasta 3
días sin teléfono. Quitarle la batería un rato y volverla a poner, suele ser una
solución, pero aveces, hasta 7 veces al día; he tenido que lidiar con el
errorsito de los cojones.</p>

<p><img class="right" src="http://uranio-235.github.io/images/acercade_baseband.png" width="200" height="300" title="" ></p>

<p>La única solución paliativa que he visto, es, de vez en vez, al menos una cada
dos mes; flahsear el módem.</p>

<p>El cómo dar con el módem te lo dejo de tarea. Lo siento, no soy la base de datos
de bandas bases de samsung. La mía la <strong>busqué en google</strong> escribiendo el texto:</p>

<p>&ldquo;modem SGH-M919&rdquo;</p>

<p>Oséase, pidiendo el módem para mi modelo del teléfono, que al parecer, la
<strong>M919UVUFNH7</strong>, es la última disponible para mi canchanfleta.</p>

<p>El proceso de flasheo, la primera vez, requiere que nos hagamos con el
fichero PIT del teléfono.</p>

<p>Reinicia el teléfono en modo descarga. Si no sabes cómo hacerlo, googlea, cada
samsung tiene su forma. El mío (S4 T-Mobile) es Power+VolDown+Home. Luego, en el
modo descarga; una vez que (presiones VolUp) para inicializar la conexión,
pasamos a Heimdall.</p>

<p>Nota para los imbéciles: Conecte el teléfono a la computadora mediante un cable
USB <strong>en buen estado</strong>.</p>

<p><img class="right" src="http://uranio-235.github.io/images/pitfile.png" width="600" height="700" title="" ></p>

<p>En Heimdall, vamos a la pestaña <strong>Utilities</strong>. Presiona botón
<em>Detect</em><sup>1</sup>, cuando te coja el teléfono, presiona <em>Save As</em><sup>2</sup>
y te dará un nombre de fichero para salvar, por ejemplo, <strong>fulanito.pit</strong>.
Finalmente presiona <em>Download</em><sup>3</sup> y te creará el fichero.</p>

<p>Decirte quiero que este ficherito es muy famoso, ya que es algo así como tu
tabla de particiones.</p>

<p>Una vez que tienes el fichero en tu poder, Heimdall, será capaz de saber <em>a
ciegas</em> donde están las particiones de tu teléfono sin tener que preguntárselo
una y otra vez, así que guardalo en un directorio donde pongas todas las
gangarreas de tu teléfono. Por cierto, terminamos con el teléfono; aunque diga
&ldquo;do not turn off&rdquo; cágate en la noticia y reinicia (quita la batería).</p>

<p>Ahora viene tiempo de google, muuuuucho google, para dar con tu módem.</p>

<p>Digamos que finalmente diste con el módem de tu samsung. Seguro tiene un nombre
muy genérico, casi siempre se llaman <strong>modem.bin</strong>. Procede con el mismo
preludio del ritual (modo descarga y abre heimdall)</p>

<p><img class="left" src="http://uranio-235.github.io/images/flasheo_modem.png" width="600" height="700" title="" ></p>

<p>Ahí ve para la pestaña que dice <strong>Flash</strong>. Click en <em>Browse</em><sup>1</sup> y
localiza tu pitfile. Click en <em>Add</em><sup>2</sup> y luego en el <em>select</em> del campo
<em>partition name</em><sup>3</sup> selecciona la partición <strong>MDM</strong>. Finalmente, le
buscamos el fichero modem.bin haciendo click en Browse<sup>4</sup>.</p>

<p>¿No tengo que decirte que pulses <strong>Start</strong>, verdad?</p>

<p>Si todo salió bien, se reiniciará y tendrás tu módem recién flasheado. Pero no
cantes victoria. Si tu modem se deterioró, fue que ALGO lo deterioró y ese algo,
lo joderá de nuevo, así que, mantén las herramientas a manos; las necesitarás
pronto.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails-assets]]></title>
    <link href="http://uranio-235.github.io/blog/2017/01/02/rails-assets/"/>
    <updated>2017-01-02T18:55:02-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/01/02/rails-assets</id>
    <content type="html"><![CDATA[<p>Gemas como twitter-bootstrap-rails, hacen que el trabajo con CSS complejas
supuestamente se haga &ldquo;al click&rdquo;. Pero cuando deseas ir un poco más allá, por
ejemplo, si quieres DataTables, notarás que tienes dos opciones, la primera,
usar una gema desfasada (si hay, que casi siempre la hay, aunque buena para
nada).</p>

<p>Sin embargo, parece que algún cerebrito, hizo un sitio en el cual la fuente
oficial de las assets (quizás a través de npm) se convierten de manera
automatizada en una gema de rails.</p>

<p>De esta manera, al poner en el Gemfile de tu aplicación esto:</p>

<figure class='code'><figcaption><span>&#8220;Gemfile&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span>  <span class="s1">&#39;https://rails-assets.org&#39;</span> <span class="k">do</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-underscore&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-DataTables&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-bootstrap&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-jquery-ui&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-stringjs&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-iCheck&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-jquery&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instalarás dichas js/css en tu aplicación.</p>

<p>En el <a href="https://rails-assets.org">sito web de rails-assets</a> explica con unos
diff, que debes poner en el application.js y aaplication.css para incluir cada
una de las assets. Casi siempre es algo genérico al nombre, lo puedes intuir.</p>

<p>De todas maneras, el fracasado proyecto de crear un jquery unobstructive;
condujo a que jquery fuera expulsada del core de rails. Así que al parecer la
tendencia de rails 5 en adelante, será usar las js aparte. Más vale tener un
buen jquery a mano.</p>
]]></content>
  </entry>
  
</feed>
