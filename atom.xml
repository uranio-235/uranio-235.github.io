<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[El SysAdmin del 3er Mundo]]></title>
  <link href="http://uranio-235.github.io/atom.xml" rel="self"/>
  <link href="http://uranio-235.github.io/"/>
  <updated>2016-03-26T19:48:21-04:00</updated>
  <id>http://uranio-235.github.io/</id>
  <author>
    <name><![CDATA[låzaro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[misterio con ethernet foxconn]]></title>
    <link href="http://uranio-235.github.io/blog/2016/03/14/misterio-con-ethernet-foxconn/"/>
    <updated>2016-03-14T14:52:46-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/03/14/misterio-con-ethernet-foxconn</id>
    <content type="html"><![CDATA[<p>Para nadie es un secreto que foxconn, no le descarga a Linux. Hacen mil mierdas
para entorpecerlo cuando corre sobre su hardware.</p>

<p>Uno de los misterios, es cuando las tajetas de red permiten conexiones, pues dan
ping sin problema. Pero al intentar transferir grandes bloques de red, da
timeout.</p>

<p>Problema, el tamaño del MTU por defecto en sus putas tarjetas</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ip l set dev eth0 mtu 1492</span></code></pre></td></tr></table></div></figure>


<p>Veremos con que se bajan la próxima vez</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cargar rvm]]></title>
    <link href="http://uranio-235.github.io/blog/2016/03/07/cargar-rvm/"/>
    <updated>2016-03-07T21:25:44-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/03/07/cargar-rvm</id>
    <content type="html"><![CDATA[<p>De siempre, desplegar Ruby con <a href="https://rvm.io/">RVM</a>, ha sido un método
catalogado de &ldquo;burdo&rdquo; o &ldquo;sucio&rdquo; aunque sin dudas, es el más rápido.</p>

<p>Un problema que se enfrenta con RVM, es a la hora de integrarlo a entornos que
no carguen el el bashrc modificado por el instalador. Por ejemplo, un script de
arrancada con el sistema o un script del cron.</p>

<p>He aquí un ejemplo, de un escript.sh que levanta una aplicación de ruby on
rails, luego de haber cargado el entorno de RVM.</p>

<figure class='code'><figcaption><span>&#8220;startapp.sh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="nb">cd</span> /opt/aplicacion
</span><span class='line'><span class="nb">source</span> /usr/local/rvm/environments/default
</span><span class='line'>unicorn -l 0:8080 -D
</span></code></pre></td></tr></table></div></figure>


<p>Como vemos, el dichero en <strong>environments</strong> carga todas las variables de entorno
requerida y de facto, <strong>unicorn</strong> pasa a ser un ejecutable, ya que <strong>$PATH</strong>
ahora contiene también la ruta bin/ donde se instalaron las gemas&hellip;</p>

<p>Problema <em>resolvido</em>&hellip;</p>

<p>Note en caso de tener varios rubies instalados, en environments, tendrás junto a
default, los demás script necesarios para cargar dichos rubies.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[data confirm en un boton]]></title>
    <link href="http://uranio-235.github.io/blog/2016/02/22/data-confirm-en-un-boton/"/>
    <updated>2016-02-22T14:20:33-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/02/22/data-confirm-en-un-boton</id>
    <content type="html"><![CDATA[<p>Usualmente, tenemos un botón en un formulario y nos gustaría que al pulsar este,
nos preguntara algo para confirmar. He aquí un buen ejemplo:</p>

<figure class='code'><figcaption><span>&#8221;_navbar.html.erb&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='rhtml'><span class='line'>  <span class="cp">&lt;%=</span> <span class="n">form_tag</span> <span class="n">manager_email_path</span><span class="p">,</span><span class="ss">class</span><span class="p">:</span> <span class="s1">&#39;navbar-form navbar-left&#39;</span><span class="p">,</span><span class="ss">role</span><span class="p">:</span> <span class="s1">&#39;search&#39;</span><span class="p">,</span><span class="nb">method</span><span class="p">:</span> <span class="ss">:post</span> <span class="k">do</span> <span class="cp">%&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">&quot;email&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">class=</span><span class="s">&quot;form-control&quot;</span> <span class="na">placeholder=</span><span class="s">&quot;fulanito@infomed.sld.cu&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>     <span class="cp">&lt;%=</span> <span class="n">button_tag</span><span class="p">(</span><span class="ss">:class</span> <span class="o">=&gt;</span> <span class="s2">&quot;btn btn-default&quot;</span><span class="p">,</span> <span class="ss">data</span><span class="p">:</span> <span class="p">{</span><span class="ss">:confirm</span> <span class="o">=&gt;</span> <span class="s1">&#39;Seguro?&#39;</span><span class="p">}</span> <span class="p">)</span> <span class="k">do</span> <span class="cp">%&gt;</span>
</span><span class='line'>        Enviar
</span><span class='line'>     <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</span><span class='line'>  <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[los hooks de pacman]]></title>
    <link href="http://uranio-235.github.io/blog/2016/02/20/hooks-de-pacman/"/>
    <updated>2016-02-20T03:14:28-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/02/20/hooks-de-pacman</id>
    <content type="html"><![CDATA[<p>Finalmente, después de tantas plegarias, tenemos <strong>hooks</strong> en pacman. Lo cual
nos permite, por medio de la poderosa API de alpm correr script antes o después
de cada instalación.</p>

<p>Desgraciadamente, hay poca documentación sobre el tema. Para colmo, la página de
man de alpm-hooks, no dice como deben llamarse los archivos. Tuve que adivinar
que la extensión <strong>.hook</strong> era necesaria.</p>

<p>Primero que todo, vamos a especificar en <strong>/etc/pacman.con</strong> que el directorio
de hooks está en otro lado.</p>

<figure class='code'><figcaption><span>&#8220;escope de</span><a href='http://uranio-235.github.io/etc/pacman.conf"'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">HookDir</span> <span class="o">=</span> /etc/pacman.d/hooks/
</span></code></pre></td></tr></table></div></figure>


<p>¿Por qué aquí? Muy sencillo. Quiero que al hacer una salva de mi configuración
de pacman, los hooks también se salven. Un hook sencillo, podría correr un
comando simple, como el del ejemplo en la página de man; sin embargo, uno
complejo, sería mejor ponerlo en un script.</p>

<p>Lo más importante: El fichero con el hook <strong>debe tener la extensión .hook</strong> Si
no pacman se limpia el culo con él.</p>

<p>Creemos uno de ejemplo, llamado /etc/pacman.d/hooks/migancho<strong>.hook</strong> y
digámosle que ejecutará el script, sito en /etc/pacman.d/hooks/migancho.sh</p>

<p>Sería así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/pacman.d/hooks/migancho.hook&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>Trigger<span class="o">]</span>
</span><span class='line'><span class="nv">Operation</span> <span class="o">=</span> Install
</span><span class='line'><span class="nv">Operation</span> <span class="o">=</span> Upgrade
</span><span class='line'><span class="nv">Operation</span> <span class="o">=</span> Remove
</span><span class='line'><span class="nv">Type</span> <span class="o">=</span> Package
</span><span class='line'><span class="nv">Target</span> <span class="o">=</span> *
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Action<span class="o">]</span>
</span><span class='line'><span class="nv">Description</span> <span class="o">=</span> sincronizando disco
</span><span class='line'><span class="nv">Depends</span> <span class="o">=</span> coreutils
</span><span class='line'><span class="nv">When</span> <span class="o">=</span> PostTransaction
</span><span class='line'><span class="nv">Exec</span> <span class="o">=</span> /etc/pacman.d/hooks/migancho.sh
</span></code></pre></td></tr></table></div></figure>


<p>Como ve, la cláusula <strong>Operation</strong> está repetida, con los 3 posibles momentos
que se disparará el gancho. Podrías hacerlo en uno de ellos solamente. La
cláusula <strong>Description</strong> se verá cuando pacman termine de instalar. En este caso
cuando termine, ya que la cláusula <strong>When</strong> especifica <em>PreTransaction</em> o
<em>PostTransaction</em> (antes o después de la transacción).</p>

<p>Ahora creamos el script <strong>migancho.sh</strong> y le ponemos todas las aberraciones que
queremos llevar a cabo tras una instalación, desinstalación o actualización.</p>

<p>Digamos por ejemplo, en este caso uno trivial, ejecutar sync cuando termine una
operación, lo cual evita que si falla la energía en ese momento, queden datos
por escribirse en la cache disco.</p>

<figure class='code'><figcaption><span>&#8220;/etc/pacman.d/hooks/migancho.sh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>/usr/bin/sync
</span></code></pre></td></tr></table></div></figure>


<p>Veámoslo en acción</p>

<figure class='code'><figcaption><span>&#8220;el hook&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span><span class="c"># pacman -S --noconfirm unrar</span>
</span><span class='line'>warning: unrar-1:5.3.11-1 is up to date -- reinstalling
</span><span class='line'>resolving dependencies...
</span><span class='line'>looking <span class="k">for</span> conflicting packages...
</span><span class='line'>
</span><span class='line'>Packages <span class="o">(</span>1<span class="o">)</span> unrar-1:5.3.11-1
</span><span class='line'>
</span><span class='line'>Total Installed Size:  0.32 MiB
</span><span class='line'>Net Upgrade Size:      0.00 MiB
</span><span class='line'>
</span><span class='line'>:: Proceed with installation? <span class="o">[</span>Y/n<span class="o">]</span>
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> checking keys in keyring                                                   <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> checking package integrity                                                 <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> loading package files                                                      <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> checking <span class="k">for</span> file conflicts                                                <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> checking available disk space                                              <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'>:: Processing package changes...
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> reinstalling unrar                                                         <span class="o">[</span><span class="c">##############################################] 100%</span>
</span><span class='line'>:: Running post-transaction hooks...
</span><span class='line'><span class="o">(</span>1/1<span class="o">)</span> sincronizando disco
</span><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span><span class="c">#</span>
</span></code></pre></td></tr></table></div></figure>


<p>Véanlo como dice <em>sincronizando discos</em> en español, corriendo la operación (1/1)
ya que hay un solo hook.</p>

<p>Sencillo!!! Como todo en ArchLinux: KISS</p>

<p>Podría volverse más creativo&hellip;</p>

<p>Digamos por ejemplo, que yo quiero tener la lista de paquetes que tiene mi
sistema antes y después de una instalación, para saber que se instalo y cuando.</p>

<figure class='code'><figcaption><span>&#8220;/etc/pacman.d/hooks/listpackages.sh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>pacman -Qe &gt; /root/<span class="k">$(</span>date +%j%H%M%S<span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Eso creará un fichero similar a /root/051153712, el nombre, es el yday (día del
año) y con la hora, minuto y segundo. Dentro del fichero, una lista de todos los
paquetes instalados. Muy útil si eres tester o desarrollador, o simplemente
quieres saber que paquetes había antes o después de instalar.</p>

<p>Por cierto, otra manera de saber que si instalo hoy y ayer, es esta:</p>

<figure class='code'><figcaption><span>&#8220;¿cuando fue?&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ls -ltcr --time-style +%j /var/lib/pacman/local/
</span></code></pre></td></tr></table></div></figure>


<p>Devuelve el día del año en el que se instaló un paquete. Así sabes que se
instaló hoy. Te recuerdo, que en ArchLinux, todos los días hay algo nuevo que
instalar :D</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[arch compartir paquetes]]></title>
    <link href="http://uranio-235.github.io/blog/2016/02/01/arch-compartir-paquetes/"/>
    <updated>2016-02-01T13:56:56-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/02/01/arch-compartir-paquetes</id>
    <content type="html"><![CDATA[<p>No desde cuando, pero por fin, un sueño echo realidad en ArchLinux. Revertir un
paquete de su forma instalada, a su forma de paquete. Esto puede no resultar
algo novedoso para el que tenga internet como algo cotidiano, pero para los
cubanos de a pie, resulta una verdadera novedad.</p>

<p>Digamos que mi socio necesita instalar nginx en su arch, misma arquitectura que
el mío. Simplemente, le genero el paquete a partir de mi instalación y listo.</p>

<figure class='code'><figcaption><span>&#8220;bacman en acción&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@samsung ~<span class="o">]</span><span class="c"># cd /var/cache/pacman/pkg/</span>
</span><span class='line'><span class="o">[</span>root@samsung pkg<span class="o">]</span><span class="c"># bacman nginx</span>
</span><span class='line'><span class="o">==</span>&gt; Package: nginx-1.8.1-1
</span><span class='line'>  -&gt; Copying package files...
</span><span class='line'>    -&gt; Generating .PKGINFO metadata...
</span><span class='line'>    -&gt; Generating the package...
</span><span class='line'>  <span class="o">==</span>&gt; Done.
</span><span class='line'><span class="o">[</span>root@samsung pkg<span class="o">]</span><span class="c"># ls nginx*</span>
</span><span class='line'>nginx-1.8.1-1-x86_64.pkg.tar.xz
</span></code></pre></td></tr></table></div></figure>


<p>Pues <strong>bacman</strong> es la respuesta. Ahora se puede regresar un paquete a su estado;
digamos &ldquo;pristino&rdquo;.</p>

<p>¡¡OJO!! <strong>TUS</strong> ficheros de configuración, también se empaquetan.</p>

<p>Usualmente solía mantener en mi caché los paquetes necesarios para llevar a cabo
una instalación de archlinux usando mi laptop; pero con este nuevo método, la
cosa cambia bastante. Ahora solo debo cargar con el &ldquo;.iso&rdquo;</p>

<p>Mi proxima idea es reconstruir el grupo <strong>base</strong> completo dentro de la cache y
luego con <strong>repo-add</strong> crear un mirror, capaz de llevar a cabo una instalación
de sistema.</p>

<p>De momento quiero probar este script:</p>

<figure class='code'><figcaption><span>&#8220;pristine.sh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="c"># cambiate al directorio de cache</span>
</span><span class='line'><span class="nb">cd</span> /var/cache/pacman/pkg/
</span><span class='line'>
</span><span class='line'><span class="c"># itera por los paquetes del sistema base</span>
</span><span class='line'><span class="k">for</span> pkg in <span class="k">$(</span>pacman -Qeg base<span class="p">|</span>awk <span class="s1">&#39;{print $2}&#39;</span><span class="k">)</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>   <span class="c"># háblate</span>
</span><span class='line'>   <span class="nb">echo</span> <span class="nv">$pkg</span> <span class="s1">&#39;&gt;&#39;</span> <span class="k">$(</span>pacman -Qi <span class="nv">$pkg</span><span class="p">|</span>grep Description<span class="p">|</span>cut -d : -f 2<span class="k">)</span>
</span><span class='line'>
</span><span class='line'>   <span class="c"># reviértelo</span>
</span><span class='line'>   bacman <span class="nv">$pkg</span> 2&gt; /dev/null &gt; /dev/null
</span><span class='line'>
</span><span class='line'><span class="k">done</span>
</span><span class='line'>
</span><span class='line'><span class="c"># crea el repo</span>
</span><span class='line'>rm /var/cache/pacman/pkg/custom.db.tar.gz
</span><span class='line'>repo-add /var/cache/pacman/pkg/custom.db.tar.gz /var/cache/pacman/pkg/*.pkg.tar.xz
</span></code></pre></td></tr></table></div></figure>


<p>Tendré que probar a instalar usando mi cache como repo. Poniéndole a la máquina
una source como esta:</p>

<figure class='code'><figcaption><span>&#8220;pacman.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>mirepo<span class="o">]</span>
</span><span class='line'><span class="nv">SigLevel</span> <span class="o">=</span> Optional TrustAll
</span><span class='line'><span class="nv">Server</span> <span class="o">=</span> http://localhost:8080
</span></code></pre></td></tr></table></div></figure>


<p><em>Nota para los imbéciles: Cambiar <strong>localhost</strong> por la ip de la máquina que está compartiendo la caché.</em></p>

<p>Y para servir tu cache como repo, puedes usar darkhttpd</p>

<figure class='code'><figcaption><span>&#8220;darkhttpd&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>darkhttpd /var/cache/pacman/pkg/ --chroot --port 8080
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bind9, registro arbitratio]]></title>
    <link href="http://uranio-235.github.io/blog/2016/01/25/hostname-arbitrario-en-bind9/"/>
    <updated>2016-01-25T20:35:37-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/01/25/hostname-arbitrario-en-bind9</id>
    <content type="html"><![CDATA[<p>Para este tipo de cosas, usualmente recomiendo
<a href="https://wiki.archlinux.org/index.php/dnsmasq">dnsmasq</a> pero aveces, no nos
queda más remiendo que usar bind9, por N motivos.</p>

<p>En algunas ocasiones, nos vemos forzados a declarar registros para punteros, a
host que nada tienen que ver con nuestro domino. Por ejemplo, queremos que el
host time.windows.com apunte a nuestro servidor de tiempo, para que todos las
computadoras con windows de la red, se actualicen por nuestro servidor ntp.</p>

<p>En salud, aveces es mejor declarar localmente los punteros a los servidores de
correo de salud, que hacer otro forward y además, tener que especificarle un
segundo servidor DNS a nuestros usuarios.</p>

<p>Para lograr esto, debemos declarar una raíz dns en nuestro named.conf, que
responda a todo, o sea, &ldquo;.&rdquo;, a mi me quedó así.</p>

<figure class='code'><figcaption><span>&#8220;/etc/bind/named.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// la zona pa hacer lo que me de la gana</span>
</span><span class='line'><span class="nx">zone</span> <span class="s2">&quot;.&quot;</span> <span class="p">{</span>
</span><span class='line'>   <span class="nx">type</span> <span class="nx">master</span><span class="p">;</span>
</span><span class='line'>   <span class="nx">file</span> <span class="s2">&quot;/etc/bind/fakeroot.zone&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>Acá, el fichero <strong>fakeroot.zone</strong> tendrá los registros, donde declaramos los
FQDN como si fueran hostnames.</p>

<figure class='code'><figcaption><span>&#8220;/etc/bind/fakeroot.zone&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">@</span>       <span class="nx">IN</span>      <span class="nx">SOA</span>     <span class="p">.</span> <span class="nx">hostmaster</span><span class="p">.</span><span class="nx">domain</span><span class="p">.</span><span class="nx">com</span><span class="p">.</span> <span class="p">(</span> <span class="mi">1</span> <span class="mi">3</span><span class="nx">h</span> <span class="mi">1</span><span class="nx">h</span> <span class="mi">1</span><span class="nx">w</span> <span class="mi">1</span><span class="nx">d</span> <span class="p">)</span>
</span><span class='line'><span class="nx">localhost</span>             <span class="nx">IN</span>      <span class="nx">A</span>       <span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span>
</span><span class='line'><span class="err">@</span>                     <span class="nx">IN</span>      <span class="nx">NS</span>      <span class="nx">localhost</span><span class="p">.</span>
</span><span class='line'><span class="p">;</span>
</span><span class='line'><span class="p">;</span> <span class="nx">Los</span> <span class="nx">servidores</span> <span class="nx">de</span> <span class="nx">correo</span> <span class="nx">de</span> <span class="nx">infomed</span>
</span><span class='line'><span class="nx">smtp</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>           <span class="nx">IN</span>      <span class="nx">A</span>       <span class="mf">201.220</span><span class="p">.</span><span class="mf">211.39</span>
</span><span class='line'><span class="nx">pop</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>            <span class="nx">IN</span>      <span class="nx">A</span>       <span class="mf">201.220</span><span class="p">.</span><span class="mf">211.7</span>
</span><span class='line'><span class="nx">pop3</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>           <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pop</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>
</span><span class='line'><span class="nx">imap</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>           <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pop</span><span class="p">.</span><span class="nx">sld</span><span class="p">.</span><span class="nx">cu</span>
</span><span class='line'><span class="p">;</span>
</span><span class='line'><span class="p">;</span> <span class="nx">Los</span> <span class="nx">servidores</span> <span class="nx">de</span> <span class="nx">tiempo</span> <span class="nx">m</span><span class="err">á</span><span class="nx">s</span> <span class="nx">pedidos</span>
</span><span class='line'><span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span>          <span class="nx">IN</span>      <span class="nx">A</span>       <span class="mf">10.1</span><span class="p">.</span><span class="mf">1.1</span>
</span><span class='line'><span class="o">*</span><span class="p">.</span><span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span><span class="p">.</span>       <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span>
</span><span class='line'><span class="nx">time</span><span class="p">.</span><span class="nx">microsoft</span><span class="p">.</span><span class="nx">com</span>    <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span>
</span><span class='line'><span class="nx">time</span><span class="p">.</span><span class="nx">windows</span><span class="p">.</span><span class="nx">com</span>      <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span>
</span><span class='line'><span class="nx">time</span><span class="o">-</span><span class="nx">ios</span><span class="p">.</span><span class="nx">apple</span><span class="p">.</span><span class="nx">com</span>    <span class="nx">IN</span>      <span class="nx">CNAME</span>   <span class="nx">pool</span><span class="p">.</span><span class="nx">ntp</span><span class="p">.</span><span class="nx">org</span>
</span></code></pre></td></tr></table></div></figure>


<p>En este caso de ejemplo, declaramos un par de host que son de salud, con una ip
externa. Abajo, los host ntp más típicos, apuntando a nuestro servidor de
tiempo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[espejos de clamav y salud]]></title>
    <link href="http://uranio-235.github.io/blog/2016/01/19/espejos-de-clamav/"/>
    <updated>2016-01-19T13:32:53-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/01/19/espejos-de-clamav</id>
    <content type="html"><![CDATA[<p>ClamAV, el antivirus más subestimado en mi opinión. De siempre, lo he usado por
compromiso; aunque nunca he sentido la necesidad de hacerlo.</p>

<p>Infomed, mantiene un espejo de ClamAV bien al día pero no un mirror como tal.</p>

<p>Decidí bajarlos para mi máquina y usar la misma como espejo. Después de todo, la
misma tiene lo que necesita para correr un mirror. Es algo tan sencillo como
crear un virtualhost y poner en su raíz las actualziaciones.</p>

<p>Más fácil aún, es usar /var/lib/clamav/ como raíz y así TU actualización se
convierte en el mirror.</p>

<p>En mi caso, el virtualhost de nginx me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/nginx/sites-enabled/clamav&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>
</span><span class='line'>   listen   10.1.1.14:80<span class="p">;</span>
</span><span class='line'>   listen   10.1.1.14:443 ssl<span class="p">;</span>
</span><span class='line'>   server_name clamav.hcg.sld.cu<span class="p">;</span>
</span><span class='line'>   location / <span class="o">{</span>
</span><span class='line'>      root /var/lib/clamav/<span class="p">;</span>
</span><span class='line'>   <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>El resto del truco está en el lado del cliente, ya que hay que hacerle una
burumba a freshclam. Decirle que no busque scripts, así me quedó el freshclam.</p>

<figure class='code'><figcaption><span>&#8220;/etc/clamav/freshclam.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>UpdateLogFile /var/log/clamav/freshclam.log
</span><span class='line'>DatabaseMirror clamav.hcg.sld.cu
</span><span class='line'>NotifyClamd /etc/clamav/clamd.conf
</span><span class='line'>ScriptedUpdates no
</span><span class='line'>PrivateMirror clamav.hcg.sld.cu
</span></code></pre></td></tr></table></div></figure>


<p>No olvides el puntero a <strong>clamav.tudominio.cu</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[clamav en windows]]></title>
    <link href="http://uranio-235.github.io/blog/2016/01/14/clamav-en-windows/"/>
    <updated>2016-01-14T21:39:45-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/01/14/clamav-en-windows</id>
    <content type="html"><![CDATA[<p>Síiiii, por loco que suene&hellip;</p>

<p>Una compañía llamada Source Fire, desarrolló un producto llamado &ldquo;immunet&rdquo;, Por
lo que vi, es una herramienta de &ldquo;cloud security&rdquo;. En teoría; un antivirus que
no necesita ser actualizado, una especie de community driven (reescribió la
rueda y le quedó bien).</p>

<p>Esto en cuba es un chiste, por el ancho de banda. No obstante, pasarle todos tus
archivos a un servidor para que este los verifique, no me parece un buen
negocio. Aunque sabe dios que hace windows con tus archivos&hellip;</p>

<p>No obstante, estos señores, incluyeron el motor de clamav y frontend para
escanear en tiempo real usando clamav y <strong>QUE PINCHA</strong>. Se la comieron!</p>

<p>Quiero advertirte que: Mis conocimientos de windows son BIEN REDUCIDOS, así que
veré como me hago entender. Trataré de escribir de memoria lo que hice, antes de
que se me olvide.</p>

<p>Primero llégate a <a href="http://www.immunet.com/free/index.html">www.immunet.com</a> y
manda a descargar el antivirus. Te dará un ficherito triste de unos kilobytes.
Este es el downloader.</p>

<p>Ve a una máquina con windows y ejecuta el downloader. Pulsa un botón que dice
&ldquo;detalles&rdquo;, para que veas que está instalando.</p>

<p>Antes de que se cierre el dialogo del instalador, o sea, antes de pulsar el
botón &ldquo;Finalizar&rdquo;, mira en las rutas, el directorio temporal donde se está
descargando y localiza un fichero llamado <strong>protect-latest.exe</strong></p>

<p>No he logrado capturar la URL!!! Sería bueno, así te evitas el ritual anterior.
No es algo que puedas trazar con squid, ya que la descarga es una conexión SSL.</p>

<p>Una vez que tengas <strong>protect-latest.exe</strong> en la mano, podrás instalarlo donde
quieras.</p>

<p>Cuando termines, te puso el ícono de immunet en el escritorio. Ejecútalo y
dirígete a <strong>settings</strong>, ahí le pones el botón <strong>on</strong> a un chucho que dice
<strong>Enable Clamav Engine</strong>.</p>

<p><img class="center" src="http://uranio-235.github.io/images/immunenet_config.png"></p>

<p>Cierra esa interfaz y has click secundario en el acceso directo del escritorio.</p>

<p>Verás una opción en el menú que dice &ldquo;Abrir directorio que lo contiene&rdquo; o algo
por el estilo, no recuerdo bien.</p>

<p>Una vez en el directorio de Immunet, sube un nivel y verás el directorio
<strong>clamav</strong>. Entra ahí.</p>

<p><img class="center" src="http://uranio-235.github.io/images/segui.png"></p>

<p>Ejecuta el fichero <strong>sigui.exe</strong>(1) y en la pestaña derecha, verás una opción
que dice &ldquo;Local Signature Management&rdquo;.</p>

<p>Toca el boton &ldquo;Add&rdquo;(2) y te dará un browser de ficheros. Localiza el directorio
donde tiene los *.cvd de clamav. Puedes seleccionar los tres ficheros de un
palo, incluso, pincha por carpeta compartida.</p>

<p>Cuando estén en la caja de arriba, has click en &ldquo;Verify and Install
signatures&rdquo;(3).</p>

<p>ANDANDO! Ya lo tienes configurado.</p>

<p>En la máquina que lo probé. Restuaré la cuarentena de nod32 y el clamav se
despacho los virus. A los 5 segundos, nod32 pedía reinicio para desinfectar
amenazas. Simplemente lo desinstalé.</p>

<p>Como muchos saben, el motor de clamav cambia constantemente. No se si será
necesario la descarga y reinstalación del antivirus. Pero un compañero me
planteaba que eso significaría un buen negocio.</p>

<p>Suerte&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[servidor jabber con prosody]]></title>
    <link href="http://uranio-235.github.io/blog/2015/12/14/servidor-jabber-con-prosody/"/>
    <updated>2015-12-14T18:22:29-05:00</updated>
    <id>http://uranio-235.github.io/blog/2015/12/14/servidor-jabber-con-prosody</id>
    <content type="html"><![CDATA[<p>Lua, es uno de los tantos lenguajes interpretados que hay. Lo curioso de este es
que es Made in Brasil&hellip;</p>

<p>Aunque no les quedó mal, lo de ellos definitivamente es la samba y el futboll.
Lo digo porque ese fue uno de los primeros lenguajes que estuve manoseando y No
creo que halla un buen motivo para escribir algo con él.</p>

<p>¡Pero <a href="https://prosody.im/">Prosody</a>, demuestra que me equivoco!</p>

<p>La robusteza, simplicidad y el rendimiento de este servidor, quizás sean
superiores a la de ejabberd (que está escrito en Erlang, un lenguaje aún más
exótico que Lua). Por otra parte, su todo en uno, lo hace más versátil que otros
cuantos. No tiene nada que envidiarle al cochino OpenFire y toda su parafernaria
de Java.</p>

<p>En su estado natural, prosody solo viene con lo básico. Ampliarlo, es solo
cuestión de modificar la configuración. No piense en una extraña interfaz web
como la de ejabber, hablamos de un fichero de configuración &ldquo;.lua&rdquo; con todo
comentado. Lua, que es bien rarito, usa para comentario es &ldquo;&ndash;&rdquo; en vez de &ldquo;#&rdquo;</p>

<p>Comenzamos. En debian todo es muy fácil:</p>

<figure class='code'><figcaption><span>&#8220;aptitude&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>aptitude install prosody
</span></code></pre></td></tr></table></div></figure>


<p>Esto dará lugar un fichero de configuracion en: <strong>/etc/prosody/prosody.cfg.lua</strong></p>

<p>De ahí modificaremos lo que necesitamos. Primero, poner la JID del admin, eso
lo haremos aunque nuestro dominio no halla sido declarado.</p>

<figure class='code'><figcaption><span>&#8220;prosody.cfg.lua&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">admins</span> <span class="o">=</span> <span class="p">{</span> <span class="s1">&#39;</span><span class="s">tu_usaurio@tudominio.cu&#39;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora vamos a la sesión modules_enabled. Todo bien comentadito. Yo lo habilito
todo menos el servidor http y el telnet, como que no me da buena espina.</p>

<p>Si habilitamos el módulo &ldquo;motd&rdquo; nuestro servidor contará con un MOTD,
pero debemos especificarlo. De esta forma cada módulo es una función que puede
o no llevar parámetros de configuración. Para argumentar la configuración
de motd, escribimos FUERA de las sesión de módulos.</p>

<figure class='code'><figcaption><span>&#8220;prosody.cfg.lua&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">motd_text</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="s">este es el motd de mi server&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pero <strong>motd_text</strong> no estaba escrito en ninguna parte. Para ver si un
módulo tiene o no configuración, sus detalles, que hace y hasta un ejemplo,
podemos verlo en la lista de módulos.</p>

<p><a href="http://prosody.im/doc/modules">http://prosody.im/doc/modules</a></p>

<p>Pero volvamos a la configuración. La siguiente linea de interés es la
que permite el registro de usuarios.</p>

<figure class='code'><figcaption><span>&#8220;prosody.cfg.lua&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">allow_registration</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>OJO! se requiere un &ldquo;;&rdquo; al final de la configuración (razón por la cual abandoné
Lua en aquel entonce). Si no quieres que los usuarios se registren déjalo en
false. Puedes usar la aplicación de control para crear usuarios. Ejecuta
<strong>prosodyctl</strong> sin parámetros y veras una pantalla aprueba de imbéciles que te
dice como crear los usuarios y otras opciones interesantes.</p>

<p>Por ejemplo, para crear un usuario</p>

<figure class='code'><figcaption><span>&#8220;prosodyctl&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>prosodyctl adduser fulanito@dominio.cu
</span></code></pre></td></tr></table></div></figure>


<p>Lo siguiente es el SSL, no es bueno desabilitarlo porque muchos cliente jabbers
traen por definición usar ssl. Mejor seguir a las que dice:</p>

<figure class='code'><figcaption><span>&#8220;prosody.cfg.lua&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">c2s_require_encryption</span> <span class="o">=</span> <span class="kc">false</span>
</span><span class='line'><span class="n">s2s_require_encryption</span> <span class="o">=</span> <span class="kc">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>Poniéndolas en false, el servidor usara lo mismo SSL que plana.</p>

<p>Pero aún no hemos declarado el dominio. Resulta que como te dije todo es
modular. Los dominios son VirtualHost. Al igual que en apache, incluso el
dominio por defecto, es un virtual host. Podemos declarar varios dominios y
dejarlos deshabilitados.</p>

<figure class='code'><figcaption><span>&#8220;prosody.cfg.lua&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">VirtualHost</span> <span class="s2">&quot;</span><span class="s">tudominio.cu&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya tenemos un dominio, podríamos tener más con solo agregarlos pero con eso ya
tenemos un servidor con lo indispensable. Vamos a extenderlo un poco, una sala
de conferencia:</p>

<figure class='code'><figcaption><span>&#8220;prosody.cfg.lua&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">Component</span> <span class="s2">&quot;</span><span class="s">conference.tudominio.cu&quot;</span> <span class="s2">&quot;</span><span class="s">muc&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora solo falta crear un puntero DNS que apunte a <strong>conference.tudominio.cu</strong></p>

<p>Pero hablando de punteros DNS. Para que jabber pinche, necesita un puntero DNS
especial.</p>

<p>Para <strong>dnsmasq</strong>, supongamos que el servidor que correo el jabber se llama
<strong>chat.tudominio.cu</strong></p>

<figure class='code'><figcaption><span>&#8220;dnsmasq.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">address</span><span class="o">=</span>/chat.tudominio.cu/10.1.1.1
</span><span class='line'>srv-host<span class="o">=</span>_xmpp-client._tcp.chat.tudominio.cu,chat.tudominio.cu,5222
</span><span class='line'>srv-host<span class="o">=</span>_xmpp-server._tcp.chat.tudominio.cu,chat.tudominio.cu,5269
</span><span class='line'>txt-record<span class="o">=</span>_xmppconnect.chat.tudominio.cu,<span class="s2">&quot;_xmpp-client-xbosh=http://chat.tudominio.cu:5280/http-bind&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Por cierto, eso último, es el puntero al servidor bosh.</p>

<figure class='code'><figcaption><span>&#8220;prosody.cfg.lua&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'> <span class="n">bosh_ports</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">5280</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>y a cotorrear se ha dicho&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mc demora en abrir]]></title>
    <link href="http://uranio-235.github.io/blog/2015/11/29/mc-demora-en-abrir/"/>
    <updated>2015-11-29T19:37:00-05:00</updated>
    <id>http://uranio-235.github.io/blog/2015/11/29/mc-demora-en-abrir</id>
    <content type="html"><![CDATA[<p>Esta es una nota bien rápida pa que no se me olvide&hellip;</p>

<p>Alguna vez han notado que los midnight commander con soporte operaciones de red
(especialmente samba) y al arrancarlo, se mete tremendo rato levantando?</p>

<p><img class="right" src="http://uranio-235.github.io/images/mc.png" title="" ></p>

<p>Pues resulta que buscar el propio hostname de la máquina, se mete tremendo rato
haciendo un reverse lookup. Cuando tiene declaro un servidor dns inalcanzable,
se pone más feo todavía.</p>

<p>Solución. Pon tu propio hostname en <strong>/etc/hosts</strong> junto a localhost</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[desmume ultralento]]></title>
    <link href="http://uranio-235.github.io/blog/2015/11/23/desmume-ultralento/"/>
    <updated>2015-11-23T21:37:40-05:00</updated>
    <id>http://uranio-235.github.io/blog/2015/11/23/desmume-ultralento</id>
    <content type="html"><![CDATA[<p>Es tremendo mojón departe del desmume, no venir con el compilador JIT activado
por defecto. Los juegos de DS corren suúuuuper lentos. Pero si corres desmume
con los siguientes argumentos:</p>

<figure class='code'><figcaption><span>&#8220;desmume&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>desmume  --fwlang<span class="o">=</span><span class="m">5</span> --jit-size<span class="o">=</span><span class="m">100</span> --cpu-mode<span class="o">=</span><span class="m">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Se activará el <a href="https://es.wikipedia.org/wiki/Compilaci%C3%B3n_en_tiempo_de_ejecuci%C3%B3n">Compilador en Tiempo de Ejecución</a>
que tiene desmume y créeme, la mejora es increíble. Tanto que luego se dispara
de una manera descomunal, así que será necesario limitar el FrameSkip a 60 FPS.</p>

<p><img class="right" src="http://uranio-235.github.io/images/desmume.png"></p>

<p>Como ven en la imagen, está corriendo Le pokemón negro, y con un micro de 2 mil
herzios se me monta en los 80fps renderizando 3d. Con la Soul Silver, se me
monta en +100 fps, ya que las peleas son en 2D.</p>

<p>Te preguntarás por que usar Frameskip entonces. Pues al menos en mi caso, cuando
el juego renderiza 3D, sin Frameskip, no llega ni a las 40FPS. Por suerte, con
la opción marcada debajo, ni se siente el frame-skip, cosa que en otros
emuladores es un dolor.</p>

<p>Por suerte el DS solo puede renderizar 3D en una sola pantalla a la vez. Ah!
OpenGL es por gusto, desmume pincha arriba del micro.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[certificado autofirmado]]></title>
    <link href="http://uranio-235.github.io/blog/2015/11/22/certificado-autofirmado/"/>
    <updated>2015-11-22T19:33:54-05:00</updated>
    <id>http://uranio-235.github.io/blog/2015/11/22/certificado-autofirmado</id>
    <content type="html"><![CDATA[<p>Ya hemos visto en varios post, que para hacer un servicio con SSL, requerimos un
certificado autofirmado. De ahora en lo adelante, no pienso repetir ese proceso,
por el contrario, pondré un link a este post.</p>

<p>Una vez creado tu propio certificado, no tendrás que volver a crear uno para
cada servicio, simplemente uno para cada host. Por tanto, vamos a crear y
almacenar nuestro certificado en <strong>/etc/ssl/private/</strong> para usarlo con todos los
servicios.</p>

<p>De facto, asumo que tienes el paquete <strong>openssl</strong> instalado.</p>

<figure class='code'><figcaption><span>&#8220;/etc/ssl/private&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /etc/ssl/private/
</span></code></pre></td></tr></table></div></figure>


<p>Primeros debemo generar una <a href="https://es.wikipedia.org/wiki/RSA">Clave RSA Privada</a>. La clave RSA es la que genera los
certificados autofrimados como tal.</p>

<figure class='code'><figcaption><span>&#8220;generando la RSA&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl genrsa -des3 -out privado.key 1024
</span></code></pre></td></tr></table></div></figure>


<p>Te pide un password. Debes ver algo como esto:</p>

<figure class='code'><figcaption><span>&#8220;salida&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>.++++++
</span><span class='line'>..............................++++++
</span><span class='line'>e is <span class="m">65537</span> <span class="o">(</span>0x10001<span class="o">)</span>
</span><span class='line'>Enter pass phrase <span class="k">for</span> privado.key:
</span><span class='line'>Verifying - Enter pass phrase <span class="k">for</span> privado.key:
</span></code></pre></td></tr></table></div></figure>


<p>Ah! El password no se ve mientras los escribes&hellip;</p>

<p>Bueno, ahora generamos el CSR (Certificate Signing Request). Esto se usa para
dos cosas: El CSR, es lo que se le envía a una autoridad certificadora (CA) para
identificarnos con ella o como es el caso para simplemente, generar certificados
autofirmados.</p>

<p>En este proceso, que ya lo hemos visto repetidamente, te preguntarán por
aquellos datos que identifican a tu servicio de manera fideligna.</p>

<p><strong>OJO</strong> El servidor que especifiques en el FQDN debe machear al hostname que se
pida en las peticiones DNS.</p>

<figure class='code'><figcaption><span>&#8220;generando el CSR&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl req -new -key privado.key -out privado.csr
</span></code></pre></td></tr></table></div></figure>


<p>Debes ver algo como esto:</p>

<figure class='code'><figcaption><span>&#8220;salida&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Enter pass phrase <span class="k">for</span> privado.key:
</span><span class='line'>You are about to be asked to enter information that will be incorporated
</span><span class='line'>into your certificate request.
</span><span class='line'>What you are about to enter is what is called a Distinguished Name or a DN.
</span><span class='line'>There are quite a few fields but you can leave some blank
</span><span class='line'>For some fields there will be a default value,
</span><span class='line'>If you enter <span class="s1">&#39;.&#39;</span>, the field will be left blank.
</span><span class='line'>-----
</span><span class='line'>Country Name <span class="o">(</span><span class="m">2</span> letter code<span class="o">)</span> <span class="o">[</span>AU<span class="o">]</span>:CU
</span><span class='line'>State or Province Name <span class="o">(</span>full name<span class="o">)</span> <span class="o">[</span>Some-State<span class="o">]</span>:Havana
</span><span class='line'>Locality Name <span class="o">(</span>eg, city<span class="o">)</span> <span class="o">[]</span>:Plaza
</span><span class='line'>Organization Name <span class="o">(</span>eg, company<span class="o">)</span> <span class="o">[</span>Internet Widgits Pty Ltd<span class="o">]</span>:
</span><span class='line'>Organizational Unit Name <span class="o">(</span>eg, section<span class="o">)</span> <span class="o">[]</span>:
</span><span class='line'>Common Name <span class="o">(</span>e.g. server FQDN or YOUR name<span class="o">)</span> <span class="o">[]</span>:tuservidor.cu
</span><span class='line'>Email Address <span class="o">[]</span>:
</span><span class='line'>
</span><span class='line'>Please enter the following <span class="s1">&#39;extra&#39;</span> attributes
</span><span class='line'>to be sent with your certificate request
</span><span class='line'>A challenge password <span class="o">[]</span>:
</span><span class='line'>An optional company name <span class="o">[]</span>:Calixto Garcia
</span></code></pre></td></tr></table></div></figure>


<p><strong>REPITO</strong> Donde dice: &ldquo;Common Name (eg, your name or your server&rsquo;s hostname)&rdquo;
Debes poner el hostname por el que será llamado tu server. Por esta razón, los
pop3 y los SMTP, suelen generar certificados aparte.</p>

<p>Otra jodedera de los certificados autofirmados, es que siempre piden un password
cuando van a ser usados. Para evitar este fenómeno, debemos hacer una burumba y
quitarle el password.</p>

<figure class='code'><figcaption><span>&#8220;quitando el password&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cp privado.key privado.key.org
</span><span class='line'>openssl rsa -in privado.key.org -out privado.key
</span></code></pre></td></tr></table></div></figure>


<p>Ya puedes borrar el fichero &ldquo;privado.key.org&rdquo; tranquilamente, pero bueno, si lo
guardas, nadie se pondrá bravo.</p>

<p>Ahora por fin vamos a generar el dichoso certificado autofirmado. Para
generarlo, necesitaremos usar una CA, en este caso, nosotros mismos.</p>

<figure class='code'><figcaption><span>&#8220;generando el certificados&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl x509 -req -days <span class="m">365</span> -in privado.csr -signkey privado.key -out privado.crt
</span></code></pre></td></tr></table></div></figure>


<p>Debes ver algo como esto:</p>

<figure class='code'><figcaption><span>&#8220;salida&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Signature ok
</span><span class='line'><span class="nv">subject</span><span class="o">=</span>/C<span class="o">=</span>CU/ST<span class="o">=</span>Havana/L<span class="o">=</span>Plaza/O<span class="o">=</span>Internet Widgits Pty Ltd/CN<span class="o">=</span>tuservidor.cu
</span><span class='line'>Getting Private key
</span><span class='line'>Enter pass phrase <span class="k">for</span> privado.key:
</span></code></pre></td></tr></table></div></figure>


<p>El parámetros <strong>-days</strong> puede saltarse si no quiere que el certificado caduque.
Pero en ambientes muy hostiles, donde de verdad se quiere cifrado, es necesario
que el ceritificado caduque. Uno nunca sabe que mariconá están planificando los
hackers por ahí.</p>

<p>Ahí tienes tu certificado autofirmado ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rc.local en systemd]]></title>
    <link href="http://uranio-235.github.io/blog/2015/11/12/rc-dot-local-en-systemd/"/>
    <updated>2015-11-12T09:49:30-05:00</updated>
    <id>http://uranio-235.github.io/blog/2015/11/12/rc-dot-local-en-systemd</id>
    <content type="html"><![CDATA[<p>Déjame decirte, que es un gran mojón de parte de systemd; el hecho de que no
halla una puñetera compatibilidad con el <strong>rc.local</strong>. Si buscas en google, como
correr un comando al butear, verás que complicado se vuelve.</p>

<p>Para palear este desmesurado inconveniente. Me he creado una unit del tipo
oneshot, que cargue el /etc/rc.local</p>

<p>Crea el fichero <strong>/etc/systemd/system/rclocal.service</strong> y métele esto:</p>

<figure class='code'><figcaption><span>/etc/systemd/system/rclocal.service</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>Unit<span class="o">]</span>
</span><span class='line'><span class="nv">Description</span><span class="o">=</span>El viejo /etc/rc.local
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Service<span class="o">]</span>
</span><span class='line'><span class="nv">Type</span><span class="o">=</span>oneshot
</span><span class='line'><span class="nv">ExecStart</span><span class="o">=</span>/bin/bash /etc/rc.local
</span><span class='line'><span class="nv">TimeoutSec</span><span class="o">=</span>0
</span><span class='line'><span class="nv">StandardOutput</span><span class="o">=</span>tty
</span><span class='line'><span class="nv">RemainAfterExit</span><span class="o">=</span>yes
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Install<span class="o">]</span>
</span><span class='line'><span class="nv">WantedBy</span><span class="o">=</span>multi-user.target
</span></code></pre></td></tr></table></div></figure>


<p>Lo habilitamos:</p>

<figure class='code'><figcaption><span>&#8220;systemctl&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>systemctl daemon-reload
</span><span class='line'>systemctl <span class="nb">enable </span>rclocal
</span></code></pre></td></tr></table></div></figure>


<p>A singar por tuberías, esto es todo&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[las mujeres gordas]]></title>
    <link href="http://uranio-235.github.io/blog/2015/11/03/las-mujeres-gordas/"/>
    <updated>2015-11-03T23:41:52-05:00</updated>
    <id>http://uranio-235.github.io/blog/2015/11/03/las-mujeres-gordas</id>
    <content type="html"><![CDATA[<p><em>¿Como te gustan las mujeres gordas o flacas?</em></p>

<p><img class="right" src="http://uranio-235.github.io/images/gorda2.jpg" width="190" height="290" title="" ></p>

<p>Esa pregunta se a vuelto un boicot.</p>

<p>Hasta los <del>cojones</del> estoy de vivir en una sociedad que desprecia a las mujeres por
que su figura no encaja en un patrón de belleza que <strong>alguien</strong> impuso.</p>

<p>Resulta que &ldquo;delgado&rdquo; es sinónimo de &ldquo;lindo&rdquo;.</p>

<p>Nadie hizo una encuesta ni le preguntó a los hombres si preferían a las mujeres
flacas o gordas, simplemente, impusieron un paradigma.</p>

<p>Hay gustos para todo y eso hay que tenerlo en cuenta.</p>

<p><em>&ldquo;no debemos juzgar a una mujer por su figura&rdquo;</em> <strong>FALSO</strong> Las seguiremos
juzgando por su figura, porque tenemos ojos en la cara, pero no con paradigmas
impuesto por una sociedad, si no con nuestro gusto.</p>

<p>¿A qué hombre no le gusta una mujer con las piernas gordas, los senos
extratalla y las nalgas grandes.</p>

<p>&ldquo;hembras y con masa&rdquo;</p>

<p>Ah! Casi todas las gordas tienen la cara linda, eso es casi axiomático, aunque
toda regla tiene su acepción.</p>

<h4>NO estoy aplaudiendo la obesidad.</h4>

<p>Las gordas lindas son las gordas que hacen ejercicio.</p>

<ul>
<li> tiene cintura</li>
<li> no tienen mucho abdomen</li>
<li> no están flácidas</li>
<li> tienen carne en vez de grasa</li>
</ul>


<p>Gorda con Ejercicio</p>

<p>Mi hermano, a una mujer así, múerdete la lengua antes de decirle gorda, porque
estás ante un monumento.</p>

<p>Si eres mujer y te sientes pasada de peso. No hagas ejercicios para bajar de
peso. Has ejercicios para mejorar tu figura. Mi esposa usa ajustadores talla 44
y cuando baja de peso le empiezan a quedar grandes. Pal coppelia urgente.</p>

<p>Preocúpense por estar macizas en vez de grasosas, no por bajar de peso.</p>

<p>Cuando coges una gorda sentada, le aprietas un muslo y te dice &ldquo;ay! eso duele&rdquo;,
esa es masa pura. Si no le duele, es manteca.</p>

<h4>deterioro de la autoestima</h4>

<p><img class="right" src="http://uranio-235.github.io/images/gorda1.jpg" width="190" height="290" title="" ></p>

<p>Este tema es muy peliagudo y repercute, tanto pa las gordas, como para los
amantes de las curvas.</p>

<p>Los hombres, en la mayoría de los casos, NO andamos diciéndole a las mujeres si
están gordas. Pero entre ellas mismas, se dicen &ldquo;ay mija que gorda estás&rdquo; y
todas las sandeces esas.</p>

<p>Resulta que una mujer gorda, se autoconsidera fea generalmente. <strong>Por el mero
hecho de que a ella no le gusta lo que ve en el espejo.</strong> ¿Ya te cercioraste si
a alguien de tu trabajo y barrio le gusta?</p>

<p>Quizás quiere acercarse alguien, pero postpone el plan para cuando baje un poco
de peso (nunca). Por esa misma razón: no va a la playa, no usa sayas cortas, no
usa la ropa tal, etc&hellip;</p>

<p>Por suerte las licras han vuelto a ponerse de moda.</p>

<p>Otro caso es que le decimos a la mujer &ldquo;me gusta que seas gorda&rdquo; y casi se
ofenden: &ldquo;¿me estás diciendo gorda?&rdquo; Síiii! Te estoy diciendo gorda! ¿Qué hay de
malo en eso?</p>

<p>Muchas mujeres <em>quieren</em> bajar de peso pero no tienen la voluntad suficiente
para lograrlo. Mientras tanto, viven flagelándose con las dietas.</p>

<h4>Si fueras flaca a lo mejor él no te hubiera mirado!!!</h4>

<p>El tema <a href="https://es.wikipedia.org/wiki/All_About_That_Bass">All About That Bass</a>
de Meghan Trainor, tuvo una crítica muy disímil por esta razón. Dijeron que era
antifeminista. Como si ser gorda fuera ir contra la feminidad. No obstante, el
tema estuvo en la cima de Billboard Hot 100 ocho semanas (y eso es mucho decir)
así que la gente aceptó la cancioncita.</p>

<p>Y vamos a estar aquí. Soy flaco como un güin, pero pa flaco yo. Prefiero abultar
ideas que bíceps. Yo estoy malo, malo, maaaalooo y digo: <em>las lagartijas, pa
poder treparse en la pared, no pueden ser musculosas</em>. No me preocupa mi figura,
porque hay mujeres que le encantan los flacos desbaratados y por lo general, son
gordas (afortunadamente).</p>

<p>Las mujeres si no están en esa bobería. Está la rubia que le encantan los negros
y NO se esconde para decirlo, se pasea con su prieto por la calle. En cambio, el
tipo que le gustan las gordas, le pesa reconocerlo e incluso, le da pena que la
gente lo vean con aun gorda.</p>

<p>   <blockquote><p>Los huesos son para los perros,<br/>   los hombres comen carne.</p></blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tls y ssl en postfix]]></title>
    <link href="http://uranio-235.github.io/blog/2015/11/03/tls-y-ssl-en-postfix/"/>
    <updated>2015-11-03T21:13:44-05:00</updated>
    <id>http://uranio-235.github.io/blog/2015/11/03/tls-y-ssl-en-postfix</id>
    <content type="html"><![CDATA[<p>Acá en salud, ahora <em>se están cayendo de la mata</em> y dándose cuenta de los
peligroso que son las conexiones planas.</p>

<p>Aún no logro hacerle entender a la gente, la diferencia entre un certificado
autofirmado y un certificado emitido por una <a href="https://es.wikipedia.org/wiki/Autoridad_de_certificaci%C3%B3n">autoridad de certificación</a>
; pero que más les vamos a pedir, si el certificado de nauta es autofirmado.</p>

<p>De momento con darle la muela del candadito y las letricas verdes en el
navegador, van cogiendo algo.</p>

<p>Pero volviendo al tema <strong>postfix con SSL</strong>. Vamos a crear un certificado
autofirmado, por tanto, regla de oro:</p>

<h4>el hostname que provees en el certificado, debe ser machear al del servicio</h4>

<p>En letra de molde. Si proveemos un certificado autofirmado, para conectarnos a
<strong>smtp.hcg.sld.cu</strong> no puedes decir en el cliente de correo, que el servidor
smtp es <strong>192.168.0.1</strong> porque no será válido.</p>

<p>Aún cuando el certificado no sea válido, déjame recodarte que debemos ir
haciéndole cultura de seguridad informática, si no&hellip; bueno&hellip; no me voy a meter
en un lío diciendo las barbaridades que se logran suplantando identidades.</p>

<p>Bueno entremos en materia. Lo Primero que haremos será generar la clave privada
para el servidor.</p>

<p>Donde dice <strong>smtp.tudominio.cu</strong> tu pondrás el hostname de que apunta para tu
servidor smtp. Si eres un desastre y no tiene DNS. Pon la IP de tu servidor de
correo.</p>

<h4>REPITO</h4>

<p>Donde dice <strong>FQDN or YOUR name</strong> debe decir la dirección del servidor SMTP. La
dirección tal cual la pones en los clientes.</p>

<p>Cuando lo hagas, te pedirá un password.</p>

<figure class='code'><figcaption><span>&#8220;generando clave privada del servidor&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl genrsa -des3 -out smtp.tudominio.cu.key 2048
</span></code></pre></td></tr></table></div></figure>


<p>Ahora creamos el certificado. Te pedirá hasta la talla de calzoncillos que usas.
<strong>NO respondas a lo locoi</strong>, recuerda el <strong>FQDN</strong>. Te acuerdas del password
que pusiste?</p>

<figure class='code'><figcaption><span>&#8220;creando el certificado&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl req -new -key smtp.tudominio.cu.key -out smtp.tudominio.cu.csr
</span></code></pre></td></tr></table></div></figure>


<p>Debes ver algo como esto:</p>

<figure class='code'><figcaption><span>&#8220;ceremonia de creación de certificado&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Enter pass phrase <span class="k">for</span> smtp.tudominio.cu.key:
</span><span class='line'>You are about to be asked to enter information that will be incorporated
</span><span class='line'>into your certificate request.
</span><span class='line'>What you are about to enter is what is called a Distinguished Name or a DN.
</span><span class='line'>There are quite a few fields but you can leave some blank
</span><span class='line'>For some fields there will be a default value,
</span><span class='line'>If you enter <span class="s1">&#39;.&#39;</span>, the field will be left blank.
</span><span class='line'>-----
</span><span class='line'>Country Name <span class="o">(</span><span class="m">2</span> letter code<span class="o">)</span> <span class="o">[</span>AU<span class="o">]</span>:CU
</span><span class='line'>State or Province Name <span class="o">(</span>full name<span class="o">)</span> <span class="o">[</span>Some-State<span class="o">]</span>:Havana
</span><span class='line'>Locality Name <span class="o">(</span>eg, city<span class="o">)</span> <span class="o">[]</span>:Plaza
</span><span class='line'>Organization Name <span class="o">(</span>eg, company<span class="o">)</span> <span class="o">[</span>Internet Widgits Pty Ltd<span class="o">]</span>:Calixto
</span><span class='line'>Organizational Unit Name <span class="o">(</span>eg, section<span class="o">)</span> <span class="o">[]</span>:Informatica
</span><span class='line'>Common Name <span class="o">(</span>e.g. server FQDN or YOUR name<span class="o">)</span> <span class="o">[]</span>:smtp.tudominio.cu
</span><span class='line'>Email Address <span class="o">[]</span>:ssl@tudominio.cu
</span></code></pre></td></tr></table></div></figure>


<p>Bites verdad? Bueno, ya hicimos lo más importante, pero no hemos terminado.
Vamos a firmar el certificado con la la llave emisora.</p>

<figure class='code'><figcaption><span>&#8220;cri-cra firmando el certificado&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl x509 -req -days <span class="m">365</span> -in smtp.tudominio.cu.csr -signkey smtp.tudominio.cu.key -out smtp.tudominio.cu.crt
</span></code></pre></td></tr></table></div></figure>


<p>Ahora vamos a dar un paso <strong>cuestionable</strong>.</p>

<p>Cada vez que un servicio con con un certificado SSL valla a ser iniciado.
Debería pedir un password, para así asegurar que el legítimo operador de
servicio ha sido quien le dio la arrancada. Pero poner un password cada vez que
arranca postfix, no es ninguna gracia. Por tanto, quitamos el password.
Obviamente, te lo pedirá una última vez.</p>

<figure class='code'><figcaption><span>&#8220;quitando el password&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl rsa -in smtp.tudominio.cu.key -out smtp.tudominio.cu.key.sinpassword
</span><span class='line'>mv smtp.tudominio.cu.key.sinpassword smtp.tudominio.cu.key
</span></code></pre></td></tr></table></div></figure>


<p>Emitimos una autoridad de raíz (de pacotilla)</p>

<figure class='code'><figcaption><span>&#8220;la CA del chiste&#8221; </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>openssl req -new -x509 -extensions v3_ca -keyout cakey.pem -out cacert.pem -days 3650
</span><span class='line'><span class="c"># aqui te pedirá la misma rutina, ojo con lo que pones en el campo FQDN or YOUR name</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bueno, con el disi y con el mulo, ya tenemos una CA loca, que la podemos reusar
para otros servicios, por tanto, tratemosla como tal.</p>

<figure class='code'><figcaption><span>&#8220;los puntos sobre las ies&#8221; </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod <span class="m">600</span> smtp.tudominio.cu.key
</span><span class='line'>chmod <span class="m">600</span> cakey.pem
</span><span class='line'>mv smtp.tudominio.cu.key /etc/ssl/private/
</span><span class='line'>mv smtp.tudominio.cu.crt /etc/ssl/certs/
</span><span class='line'>mv cakey.pem /etc/ssl/private/
</span><span class='line'>mv cacert.pem /etc/ssl/certs/
</span></code></pre></td></tr></table></div></figure>


<p>Ahora viene el turno de postfix. Haremos dos cosas</p>

<ul>
<li>habilitar el tranporte ssl/tls por el puerto 465</li>
<li>habilitar las funciones ssl</li>
</ul>


<p>Ve al <strong>master.cf</strong> y busca la cadena de texto <strong>smtps</strong> debes ver algo como
esto:</p>

<figure class='code'><figcaption><span>&#8220;parte del master.cf ANTES&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>smtp      inet  n       -       -       -       -       smtpd
</span><span class='line'><span class="c">#smtp      inet  n       -       -       -       1       postscreen</span>
</span><span class='line'><span class="c">#smtpd     pass  -       -       -       -       -       smtpd</span>
</span><span class='line'><span class="c">#dnsblog   unix  -       -       -       -       0       dnsblog</span>
</span><span class='line'><span class="c">#tlsproxy  unix  -       -       -       -       0       tlsproxy</span>
</span><span class='line'><span class="c">#submission inet n       -       -       -       -       smtpd</span>
</span><span class='line'><span class="c">#  -o syslog_name=postfix/submission</span>
</span><span class='line'><span class="c">#  -o smtpd_tls_security_level=encrypt</span>
</span><span class='line'><span class="c">#  -o smtpd_sasl_auth_enable=yes</span>
</span><span class='line'><span class="c">#  -o smtpd_client_restrictions=permit_sasl_authenticated,reject</span>
</span><span class='line'><span class="c">#  -o milter_macro_daemon_name=ORIGINATING</span>
</span><span class='line'><span class="c">#smtps     inet  n       -       -       -       -       smtpd</span>
</span><span class='line'><span class="c">#  -o syslog_name=postfix/smtps</span>
</span><span class='line'><span class="c">#  -o smtpd_tls_wrappermode=yes</span>
</span><span class='line'><span class="c">#  -o smtpd_sasl_auth_enable=yes</span>
</span><span class='line'><span class="c">#  -o smtpd_client_restrictions=permit_sasl_authenticated,reject</span>
</span><span class='line'><span class="c">#  -o milter_macro_daemon_name=ORIGINATING</span>
</span><span class='line'><span class="c">#628       inet  n       -       -       -       -       qmqpd</span>
</span><span class='line'>pickup    fifo  n       -       -       <span class="m">60</span>      <span class="m">1</span>       pickup
</span><span class='line'>cleanup   unix  n       -       -       -       <span class="m">0</span>       cleanup
</span></code></pre></td></tr></table></div></figure>


<p>Descomentamos todo lo que tenga que ver con <strong>smtps</strong> debe quedarte más o menos
así:</p>

<figure class='code'><figcaption><span>&#8220;parte del master.cf DESPUES&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>smtp      inet  n       -       -       -       -       smtpd
</span><span class='line'><span class="c">#smtp      inet  n       -       -       -       1       postscreen</span>
</span><span class='line'><span class="c">#smtpd     pass  -       -       -       -       -       smtpd</span>
</span><span class='line'><span class="c">#dnsblog   unix  -       -       -       -       0       dnsblog</span>
</span><span class='line'><span class="c">#tlsproxy  unix  -       -       -       -       0       tlsproxy</span>
</span><span class='line'><span class="c">#submission inet n       -       -       -       -       smtpd</span>
</span><span class='line'><span class="c">#  -o syslog_name=postfix/submission</span>
</span><span class='line'><span class="c">#  -o smtpd_tls_security_level=encrypt</span>
</span><span class='line'><span class="c">#  -o smtpd_sasl_auth_enable=yes</span>
</span><span class='line'><span class="c">#  -o smtpd_client_restrictions=permit_sasl_authenticated,reject</span>
</span><span class='line'><span class="c">#  -o milter_macro_daemon_name=ORIGINATING</span>
</span><span class='line'>smtps     inet  n       -       -       -       -       smtpd
</span><span class='line'>  -o <span class="nv">syslog_name</span><span class="o">=</span>postfix/smtps
</span><span class='line'>  -o <span class="nv">smtpd_tls_wrappermode</span><span class="o">=</span>yes
</span><span class='line'>  -o <span class="nv">smtpd_sasl_auth_enable</span><span class="o">=</span>yes
</span><span class='line'>  -o <span class="nv">smtpd_client_restrictions</span><span class="o">=</span>permit_sasl_authenticated,reject
</span><span class='line'>  -o <span class="nv">milter_macro_daemon_name</span><span class="o">=</span>ORIGINATING
</span><span class='line'><span class="c">#628       inet  n       -       -       -       -       qmqpd</span>
</span><span class='line'>pickup    fifo  n       -       -       <span class="m">60</span>      <span class="m">1</span>       pickup
</span><span class='line'>cleanup   unix  n       -       -       -       <span class="m">0</span>       cleanup
</span></code></pre></td></tr></table></div></figure>


<p>Ahora trabajemos con el <strong>main.cf</strong>, habilitamos las funciones que tengan que
ver con SSL, declarando esto:</p>

<figure class='code'><figcaption><span>&#8220;tope del main.cf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">smtpd_use_tls</span> <span class="o">=</span> yes
</span><span class='line'><span class="nv">smtpd_tls_auth_only</span> <span class="o">=</span> no
</span><span class='line'><span class="nv">smtpd_tls_key_file</span> <span class="o">=</span> /etc/ssl/private/smtp.tudominio.cu.key
</span><span class='line'><span class="nv">smtpd_tls_cert_file</span> <span class="o">=</span> /etc/ssl/certs/smtp.tudominio.cu.crt
</span><span class='line'><span class="nv">smtpd_tls_CAfile</span> <span class="o">=</span> /etc/ssl/certs/cacert.pem
</span><span class='line'><span class="nv">tls_random_source</span> <span class="o">=</span> dev:/dev/urandom
</span></code></pre></td></tr></table></div></figure>


<p>No olvides correr <strong>postfix reload</strong></p>

<p>   <blockquote><p>Te voy a coser el culo con un alambre finito.<br/>   No te quedará bonito, pero te quedará seguro.</p><footer><strong>Décima popular</strong></footer></blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[compartir la wifi]]></title>
    <link href="http://uranio-235.github.io/blog/2015/10/20/compartir-la-wifi/"/>
    <updated>2015-10-20T23:36:19-04:00</updated>
    <id>http://uranio-235.github.io/blog/2015/10/20/compartir-la-wifi</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://uranio-235.github.io/images/23_gente.jpg" width="300" height="500" title="" ></p>

<p>Cada vez que paso por
<a href="http://www.ecured.cu/index.php/Calle_23_%28Vedado%29">23</a>, me cuentro mil y una
red cuyo ESSID tiene el sufijo <strong>Conectify</strong> delante. Insultado por semejante
derroche de windows, le comentaba a un colega, que daba tristeza no ver un
linuxero ahí conectado.</p>

<p>El socio me dijo: -en linux no se puede compartir la wifi</p>

<p>PA DARLE POR LA CARA!</p>

<p>Dos paquetes nada más que hacen falta: <strong>iw</strong>, <strong>hostapd</strong></p>

<p>La idea es:</p>

<ul>
<li>crear una interfaz wifi como estacion</li>
<li>crear una interfaz wifi como AP</li>
<li>crear un interfaz bridge (puente)</li>
<li>declarar que la interfaz de salida del puente, es la estación</li>
<li>echar a andar el AP por software</li>
</ul>


<h3>¿SE ENTENDIÓ?</h3>

<p>Si tienes el puñetero NetworkManager corriendo, este es un buen momento para
pararlo.</p>

<p>La interfaz que usualmente vez como <strong>wlan0</strong> es en realidad <strong>phy0</strong>. ¿Quieres
verlo? Corre esto:</p>

<figure class='code'><figcaption><span>iw</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iw dev wlan0 del
</span></code></pre></td></tr></table></div></figure>


<p>¿Te fijaste que<strong> wlan0</strong> desapareció? No te preocupes, puedes volver a crearla.
Así:</p>

<figure class='code'><figcaption><span>iw</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iw phy phy0 interface add estacion0 <span class="nb">type </span>station
</span></code></pre></td></tr></table></div></figure>


<p>Como mismo hicimos una estación, podemos hacer un AP.</p>

<figure class='code'><figcaption><span>iw</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iw phy phy0 interface add hotspot0 <span class="nb">type </span>__ap
</span></code></pre></td></tr></table></div></figure>


<p>Ahora creamos la interfaz de puente y le asignamos a <strong>wlan0</strong> como extremo de
salida.</p>

<figure class='code'><figcaption><span>br0</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ip link add name br0 <span class="nb">type </span>bridge
</span><span class='line'>iw dev estacion0 <span class="nb">set </span>4addr on
</span><span class='line'>ip link <span class="nb">set </span>dev estacion0 promisc on
</span><span class='line'>ip link <span class="nb">set </span>dev estacion0 up
</span><span class='line'>ip link <span class="nb">set </span>dev estacion0 master br0
</span><span class='line'>ip link <span class="nb">set </span>up dev br0
</span></code></pre></td></tr></table></div></figure>


<p>En letra de molde:</p>

<ul>
<li>crea un bridge llamado br0</li>
<li>dile que lleva ipv4 (requerido, no se por qué)</li>
<li>pon la interfaz en modo promiscuo</li>
<li>levanta el enlace de estaicon0</li>
<li>coloca a estacion0 como interfaz de salida del túnel</li>
<li>levanta el bridge</li>
</ul>


<p>Ahora viene lo más importante, el AP. El fichero <strong>/etc/hostapd/hostapd.conf</strong>
contendrá la configuración de nuestros AP. A mi me quedó así:</p>

<figure class='code'><figcaption><span>/etc/hostapd/hostapd.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># el nombre de tu wifi</span>
</span><span class='line'><span class="nv">ssid</span><span class="o">=</span>Linux
</span><span class='line'>
</span><span class='line'><span class="c"># la contraseña de tu wifi</span>
</span><span class='line'><span class="nv">wpa_passphrase</span><span class="o">=</span>secretisisimo
</span><span class='line'>
</span><span class='line'><span class="c"># la interfaz de red que hará de AP</span>
</span><span class='line'><span class="nv">interface</span><span class="o">=</span>hostspot0
</span><span class='line'>
</span><span class='line'><span class="c"># el puente al que se acoplará</span>
</span><span class='line'><span class="nv">bridge</span><span class="o">=</span>br0
</span><span class='line'>
</span><span class='line'><span class="c"># el canal, lo puede seleccionar manual</span>
</span><span class='line'><span class="c"># pero un valor de 0, hará el survey.</span>
</span><span class='line'><span class="c"># Mejor que el ap lo seleccione, así</span>
</span><span class='line'><span class="c"># no chocas con ningún canal de etecsa en 23</span>
</span><span class='line'><span class="c"># y aprovechemos ahora que podemos hacer lo</span>
</span><span class='line'><span class="c"># que nos de la gana con el espectro radioeléctrico</span>
</span><span class='line'><span class="nv">channel</span><span class="o">=</span>0
</span><span class='line'>
</span><span class='line'><span class="c"># no toques más nada de aquí pa abajo</span>
</span><span class='line'><span class="nv">auth_algs</span><span class="o">=</span>3
</span><span class='line'><span class="nv">driver</span><span class="o">=</span>nl80211
</span><span class='line'><span class="nv">hw_mode</span><span class="o">=</span>g
</span><span class='line'><span class="nv">logger_stdout</span><span class="o">=</span>-1
</span><span class='line'><span class="nv">logger_stdout_level</span><span class="o">=</span>2
</span><span class='line'><span class="nv">max_num_sta</span><span class="o">=</span>5
</span><span class='line'><span class="nv">rsn_pairwise</span><span class="o">=</span>CCMP
</span><span class='line'><span class="nv">wpa</span><span class="o">=</span>2
</span><span class='line'><span class="nv">wpa_key_mgmt</span><span class="o">=</span>WPA-PSK
</span><span class='line'><span class="nv">wpa_pairwise</span><span class="o">=</span>TKIP CCMP
</span></code></pre></td></tr></table></div></figure>


<p>y arráncalo:</p>

<figure class='code'><figcaption><span>systemctl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>systemctl start hostapd
</span></code></pre></td></tr></table></div></figure>


<p>Desde entonces, lo que se conecte a tu wifi con ESSID &ldquo;Linux&rdquo; en este caso, irá
a dar a la red que tengas conectada en tu Wifi. En este caso la red de br0, cuyo
otro extremo sería la wifi de etecsa.</p>

<p>Lo mismo puede hacer cambiando el extremo del tunel. Por ejemplo, con eth0
saldría hacia una red cableada. Una manera de meter una WiFi en una red.</p>

<h4>Además</h4>

<p>De esta misma forma, si tuvieras dos tarjetas wifi, pones una como AP y le pones
la otra como extremo del puente.</p>

<h4>OJO</h4>

<p>Otra cosa, si tienes corriendo el <strong>NetworkManager</strong> no podrás echar a andar
<strong>hostapd</strong>. Páralo, arranca hostapd y vuelve a hechar a andar el
NetworkManager.</p>

<p>   <blockquote><p>La técnica es la técnica y sin técnica, no hay técnica.</p><footer><strong>Teófilo Stevenson</strong> <cite><a href='https://es.wikipedia.org/wiki/Te%C3%B3filo_Stevenson'>Boxeador Cubano</a></cite></footer></blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[systemd-timesyncd]]></title>
    <link href="http://uranio-235.github.io/blog/2015/10/18/systemd-timesyncd/"/>
    <updated>2015-10-18T13:19:01-04:00</updated>
    <id>http://uranio-235.github.io/blog/2015/10/18/systemd-timesyncd</id>
    <content type="html"><![CDATA[<p>Mantener un reloj sincronizado y en hora, siempre ha sido un dilema. Algunas
personas no reconocen la necesidad de esto; y además son tan imbéciles, que
luego se quejan cuando la desfasada fecha de su computadora les impide
conectarse a un sitio SSL.</p>

<p>En los servidores y en las estaciones de trabajo que se respeten; siempre ha
sido una opción usar un cliente NTP. Pero los ntp, cuando la fecha no está en el
día adecuado, no se toman la molestia de sincronizar. En los raspberry-pi eso
puede llegar a ser un tremendo problema, ya que NO tienen reloj de hardware y ni
siquiera conservan la fecha.</p>

<p>El tan criticado <a href="https://es.wikipedia.org/wiki/Systemd">Systemd</a>, tiene una
solución para este problema. Sucia y burda, pero muy eficiente. Normalmente, los
&ldquo;clientes&rdquo; <a href="https://es.wikipedia.org/wiki/Network_Time_Protocol">NTP</a>, son
cliente y servidor. En el caso de systemd-timsyncd, no se tomaron la molestia de
implementar un servidor; solamente un cliente minimalista. Además, guarda las
sincronizaciones en un fichero, para determinar si tu reloj de hardware se
adelante o atraza y contrarrestar dicho efecto.</p>

<p>Lo bueno que tiene es que agarra la fecha y hora de cualquier parte; luego, la
setea sin chistar. La configuración es sencillísima. Localiza el fichero:</p>

<p><strong>/etc/systemd/timesyncd.conf</strong></p>

<p>Declárale un servidor principal y si te da la gana, uno o varios adicionales. A
mi me quedó así:</p>

<figure class='code'><figcaption><span>/etc/systemd/timesyncd.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#  This file is part of systemd.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  systemd is free software; you can redistribute it and/or modify it</span>
</span><span class='line'><span class="c">#  under the terms of the GNU Lesser General Public License as published by</span>
</span><span class='line'><span class="c">#  the Free Software Foundation; either version 2.1 of the License, or</span>
</span><span class='line'><span class="c">#  (at your option) any later version.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># You can override the directives in this file by creating files in</span>
</span><span class='line'><span class="c"># /etc/systemd/timesyncd.conf.d/*.conf.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># See timesyncd.conf(5) for details</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Time<span class="o">]</span>
</span><span class='line'><span class="nv">NTP</span><span class="o">=</span>time.hcg.sld.cu
</span><span class='line'><span class="nv">FallbackNTP</span><span class="o">=</span>time.sld.cu time.microsoft.com
</span></code></pre></td></tr></table></div></figure>


<p>Generalmente, mi laptop está en el calixto, por eso puse mi servidor local como
primario; pero si no lo estuviera, de seguro <strong>time.sld.cu</strong> sería alcanzable. En
el dificilísimo caso de que estuviera de cara a internet, quizás responda el de
microsoft, que no está malo. Por cierto, los comentarios del fichero son
bastante útiles, vale la pena leerlos.</p>

<p>Por último, lo más importante, habilitar y arrancar el servicio:</p>

<p>systemctl <strong>start</strong> systemd-timesyncd.service</p>

<p>systemctl <strong>enable</strong> systemd-timesyncd.service</p>

<p>Para saber el estado del servicio, corre:</p>

<p><strong>timedatectl</strong></p>

<p>Te dirá la hora local y la UTC; te dirá además si está sincronizando por NTP.
Con ese comando puede hacer un montón de operaciones, por ejemplo, setear la
hora civilizadamente, ya que este la pone en el <a href="https://es.wikipedia.org/wiki/Reloj_en_tiempo_real">RTC</a> también.</p>

<p>   <blockquote><p>No existe juez más justo, que el pasar del tiempo.</p></blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[palo con la wifi]]></title>
    <link href="http://uranio-235.github.io/blog/2015/10/16/palo-con-la-wifi/"/>
    <updated>2015-10-16T12:40:04-04:00</updated>
    <id>http://uranio-235.github.io/blog/2015/10/16/palo-con-la-wifi</id>
    <content type="html"><![CDATA[<p>Vale la pena hacer una entrada de esto, porque podría ser el problema de alguien
que como yo; se cansó de alarse los pelos y buscar en google.</p>

<p>Recién no se cuando me bajé una versión de algo que involucra al networkmanager
y BUN! La wifi, cada vez que levantaba al susodicho, se bloqueaba.</p>

<p>El problema parecía estar en el fichero:</p>

<p><strong>/var/lib/NetworkManager/NetworkManager.state</strong></p>

<p>No se porque, decía tener la wifi deshabilitada. El fichero contiene algo como
esto:</p>

<figure class='code'><figcaption><span>NetworkManager.state</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>main<span class="o">]</span>
</span><span class='line'><span class="nv">NetworkingEnabled</span><span class="o">=</span><span class="nb">true</span>
</span><span class='line'><span class="nv">WirelessEnabled</span><span class="o">=</span><span class="nb">true</span>
</span><span class='line'><span class="nv">WWANEnabled</span><span class="o">=</span><span class="nb">true</span>
</span><span class='line'><span class="nv">WimaxEnabled</span><span class="o">=</span><span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>No se por qué, la clave <strong>NetworkingEnabled</strong> estaba con valor <strong>false</strong> y al
arrancar NetworkManager, bloqueaba la wifi, al punto que al levantarla
manualmente, me decía que tenía que desbloquearla con rfkill. Para el que no lo
sepa, con rfkill se pueden bloquear los radios.</p>

<p>Si por casualidad tienes alguno bloqueado, ejecuta:</p>

<p>rfkill unblock all</p>

<p>Cosa que tenía que ejecutar cada vez que arrancaba el dichóso NetworkManager</p>

<p>Probé apagar la wifi y arrancar el networkmanager con la wifi apagada, para ver
si eso cambiaba algo en el fichero antes mencionado; pero no. Lo cual me llevó a
la conclusión de que no fue una metedura de pata mía si no, un bug.</p>

<p>Ponerle atributo inmutable a ese fichero podría ser una solución, pero todo lo
que está en /var suele ser un dato volátil que señala el estado de algo, así que
ponerle inmutable podría causar fallos en la aplicación.</p>

<p>Si ese fichero está en /var es porque el network manager dumpea ahí su estado,
fíjese que está junto a los lease del DHCP. No tengo certeza de que modificando
esa configuración manualmente esta persista; pero ya llevo una semana con el
problema resuelto.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[repo de fdroid]]></title>
    <link href="http://uranio-235.github.io/blog/2015/10/15/repo-de-fdroid/"/>
    <updated>2015-10-15T14:38:20-04:00</updated>
    <id>http://uranio-235.github.io/blog/2015/10/15/repo-de-fdroid</id>
    <content type="html"><![CDATA[<p>&ldquo;La que se avecina&rdquo;, sería una buena manera para describir la revolución de
aparatos con android que habrá en el Calixto García muy pronto. Yo siempre con
el paso al frente y las luz larga (modestia y aparte) estuve pensando que tener
nuestro propio repositorio de aplicaciones para android; sería una buena manera
de mantener a todo el mundo bien actualizado, sobre todo a aquellos que no
tienen acceso a internet.</p>

<p>Para el que no lo conozca, <a href="https://f-droid.org/">fdroid</a> es una herramienta
cliente para repositorios de android, osea como google market pero libre.</p>

<p>La mecánica es sencilla: Bajo los paquetes con
<a href="http://www.aptoide.com">aptoide</a>, verifico que sean seguros y copio la cache
para el directorio repo/ de fdroid en el servidor con <a href="https://acrosync.com/">acrosync</a></p>

<p>En el repo de debian y en AUR, el paquete se llama <strong>fdroidserver</strong>. La rutina
de instalación ya la conoces.</p>

<p>Creamos el directorio donde meteremos el repo, en mi caso, aquí:</p>

<figure class='code'><figcaption><span>mkdir</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p /srv/http/fdroid/repo
</span></code></pre></td></tr></table></div></figure>


<p>Creamos la configuración de nginx, a mi me quedó así:</p>

<figure class='code'><figcaption><span>nginx.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>
</span><span class='line'>     listen   10.1.1.14:80<span class="p">;</span>
</span><span class='line'>     listen   10.1.1.14:443 ssl<span class="p">;</span>
</span><span class='line'>     server_name android.hcg.sld.cu<span class="p">;</span>
</span><span class='line'>     location / <span class="o">{</span>
</span><span class='line'>     root /srv/http/fdroid/repo/<span class="p">;</span>
</span><span class='line'>     <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Un virtualhost nombrado <em>android</em>. <strong>No olvide crear el puntero DNS</strong></p>

<p>Ahora, ve al directorio raíz del repo, OJO <strong>A LA RAIZ</strong>, NO a donde dice repo/.</p>

<figure class='code'><figcaption><span>fdroid</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> /srv/http/fdroid/
</span><span class='line'>fdroid init
</span></code></pre></td></tr></table></div></figure>


<p>Te preguntará por la <strong>android-sdk</strong>, por lo general, está en /opt/android-sdk,
dale la ruta.</p>

<p>¿¿No tienes la SDK de android?? Ah pues estás muy jodio&hellip; En el caso de arch,
el repo de bbqlinux contiene la sdk completa, solo para 64 bits.</p>

<p>Pero volviendo con fdroid:</p>

<p>Ahora debe habérse creado el directorio <strong>repo/</strong> dentro del directorio
<strong>/srv/http/fdroid</strong> y es ahí donde copiarás las APK.</p>

<p>cp /donde/esten/tus/*.apk /srv/http/fdroid/<strong>repo/</strong></p>

<p>Pero claro, querrás que tu repo se identifique.  El fichero
<strong>/srv/http/fdroid/config.py</strong> contiene lo que buscas. Por la linea trenta y
pico; a mi me quedó así:</p>

<figure class='code'><figcaption><span>config.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">...</span>
</span><span class='line'>
</span><span class='line'><span class="n">repo_url</span> <span class="o">=</span> <span class="s">&quot;http://android.hcg.sld.cu&quot;</span>
</span><span class='line'><span class="n">repo_name</span> <span class="o">=</span> <span class="s">&quot;Calixto Garcia&quot;</span>
</span><span class='line'><span class="n">repo_icon</span> <span class="o">=</span> <span class="s">&quot;calixto_xsm.png&quot;</span>
</span><span class='line'><span class="n">repo_description</span> <span class="o">=</span> <span class="s">&quot;&quot;&quot;</span>
</span><span class='line'><span class="s">Repositorio de aplicaciones de android del calixto. Intentaremos proveerle</span>
</span><span class='line'><span class="s">aplicaciones debidamente actualizadas. Sientase libre de colaborar, trayendonos</span>
</span><span class='line'><span class="s">las mas recientes APK.</span>
</span><span class='line'><span class="s">&quot;&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ah! y sin tildes, si no, python se vuelve loco con el encoding.</p>

<p>Ahora vamos a crear el índice inicial, pero eso mismo comando lo correrás cuando
agregues aplicaciones a tu repo.</p>

<figure class='code'><figcaption><span>fdroid</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>fdroid update --create-metadata
</span></code></pre></td></tr></table></div></figure>


<p>OJO!! Asegúrate de que las APK no tengan un espacio en su nombre; muchísimo
menos un caracter raro. Si todo salió bien debes ver algo como &ldquo;Generating
metada&rdquo;.</p>

<p>Con eso terminaste el servidor&hellip; Ve a fdroid y ponle la URL del virtualhost
como repo, luego update y listo&hellip;</p>

<p>¿Cómo se hace? Facilito. Párate en la primer pantalla, aprieta el botón de menú
del dispositivo y toca donde dice &ldquo;Gestionar Repositorios&rdquo; o en inglés, &ldquo;Manage
Repos&rdquo;</p>

<p>Desactiva los respos inalcanzables y añade tu repo local. Luego actualiza y
listo, verás las aplicaciones disponibles.</p>

<p>Ya solo te quedaría instalar un rsync que desemboque en el repo y con
<a href="https://acrosync.com/">acrosync</a> subes la cache de aptotide para el repo, así
como lo estoy haciendo yo ahora.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[prawn, pdf con ruby]]></title>
    <link href="http://uranio-235.github.io/blog/2015/10/08/prawn-pdf-con-ruby/"/>
    <updated>2015-10-08T21:45:55-04:00</updated>
    <id>http://uranio-235.github.io/blog/2015/10/08/prawn-pdf-con-ruby</id>
    <content type="html"><![CDATA[<p>De siempre, los usuarios que fueron forzados a abandonar
<a href="https://es.wikipedia.org/wiki/Microsoft_Access">MSAcces</a> por un motivo u otro;
sienten un incontenible necesidad por los &ldquo;informes&rdquo;.</p>

<p>A la hora de imprimir, muchos usaurios no entienden que un HTML se imprima.
Incluso, habiéndoles hecho un javascript que muestra el diálogo de impresión,
simplemente lo cierra y me preguntan &ldquo;¿y ahora que hago con esto?&rdquo;</p>

<p>En recientes diálogos con un bibliotecario (que hereda la clase Usuario) me dijo
que la gente entiende más de imprimir PDF.</p>

<p>Hacer un PDF me pareció una tare bastante compleja; y lo es, pero
<a href="http://prawn.majesticseacreature.com">Prawn</a> lo hace de una manera casi
increíble. Para no aburrirte con el cuento, te mostraré como montarlo arriba del
tren.</p>

<p><strong>EjemploController</strong> que tu conoce:</p>

<figure class='code'><figcaption><span>&#8220;ejemplo_controller.rb&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># el controlador bin ban bin ban</span>
</span><span class='line'><span class="k">class</span> <span class="nc">EjemploController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">def</span> <span class="nf">accion</span> <span class="c1"># la acción, como se llame</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1"># a según el sapo, la pedrá</span>
</span><span class='line'>      <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'>         <span class="c1"># tírame el pdf</span>
</span><span class='line'>         <span class="nb">format</span><span class="o">.</span><span class="n">pdf</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1"># tráeme al animal</span>
</span><span class='line'>            <span class="nb">require</span> <span class="s1">&#39;prawn&#39;</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1"># créame un nuevo documento pdf</span>
</span><span class='line'>            <span class="vi">@pdf</span><span class="o">=</span><span class="no">Prawn</span><span class="o">::</span><span class="no">Document</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1"># tírame el banner, el H1 como quien dice, tamaño de fuente 25px en negrita</span>
</span><span class='line'>            <span class="vi">@pdf</span><span class="o">.</span><span class="n">formatted_text</span> <span class="o">[</span> <span class="p">{</span><span class="ss">text</span><span class="p">:</span> <span class="s1">&#39;El título del documentos&#39;</span><span class="p">,</span><span class="ss">size</span><span class="p">:</span> <span class="mi">25</span><span class="p">,</span><span class="ss">styles</span><span class="p">:</span> <span class="o">[</span><span class="ss">:bold</span><span class="o">]</span><span class="p">}</span> <span class="o">]</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1"># hazle una rallita horizontal debano al header</span>
</span><span class='line'>            <span class="vi">@pdf</span><span class="o">.</span><span class="n">stroke_horizontal_line</span> <span class="mi">0</span><span class="p">,</span><span class="mi">235</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1"># mueve el cursor pa abajo</span>
</span><span class='line'>            <span class="vi">@pdf</span><span class="o">.</span><span class="n">move_down</span> <span class="mi">20</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1"># la variable cuerpo contiene un texto laaaaaaargooo en HTML</span>
</span><span class='line'>            <span class="c1"># un HTML muy rudimentario, Prawn lo interpresta, por ejemplo</span>
</span><span class='line'>            <span class="c1"># las cláusulas &lt;strong&gt;</span>
</span><span class='line'>            <span class="vi">@pdf</span><span class="o">.</span><span class="n">text</span> <span class="vi">@cuerpo</span><span class="p">,</span> <span class="ss">inline_format</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1"># por jemeplo, itera en el modelo User y escribe sus nombres</span>
</span><span class='line'>            <span class="k">for</span> <span class="n">user</span> <span class="k">in</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>               <span class="vi">@pdf</span><span class="o">.</span><span class="n">text</span> <span class="s2">&quot;Nombre: </span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">nombre</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="ss">inline_format</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>               <span class="vi">@pdf</span><span class="o">.</span><span class="n">move_down</span> <span class="mi">10</span>
</span><span class='line'>               <span class="vi">@pdf</span><span class="o">.</span><span class="n">text</span> <span class="s2">&quot;Edad: </span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">edad</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="ss">inline_format</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>               <span class="vi">@pdf</span><span class="o">.</span><span class="n">move_down</span> <span class="mi">30</span>
</span><span class='line'>            <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>            <span class="c1"># tírala!!!</span>
</span><span class='line'>            <span class="n">send_data</span> <span class="vi">@pdf</span><span class="o">.</span><span class="n">render</span><span class="p">,</span> <span class="ss">filename</span><span class="p">:</span> <span class="s2">&quot;solicitud.pdf&quot;</span>
</span><span class='line'>
</span><span class='line'>         <span class="k">end</span> <span class="c1"># format</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">end</span> <span class="c1"># respond_to</span>
</span><span class='line'>
</span><span class='line'>   <span class="k">end</span> <span class="c1"># def</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span> <span class="c1"># class</span>
</span></code></pre></td></tr></table></div></figure>


<p>Vamos a dividir en sílabas:</p>

<h4>Línea 7</h4>

<p>Rails, la acción responde a múltiples mime-types</p>

<h4>Línea 10</h4>

<p>Rails, application/pdf responde a la extensión PDF <em>format.pdf do</em></p>

<h4>Línea 13</h4>

<p>Carga la librería, sí, ya se que en Rails debes hacer eso en un initializer, de
cualquier manera, aún, luego de haberlo agregado a tu Gemfile, no te olvides de
requerirla, ya sea en un initializer o en el controlador.</p>

<h4>Línea 16</h4>

<p>Crea un nuevo PDF y almacénalo en la variable de instancia <strong>@pdf</strong></p>

<h4>Línea 19</h4>

<p>El método <strong>formatted_text</strong>, recibe como argumento un array de hashes</p>

<p>Cada array en un bloque de texto y contiene un hash. La clave :text contiene el
texto a renderizar, :size el tamaño y :style el estilo de fuente.</p>

<h4>Línea 22</h4>

<p>Trazar línea horizontal, el método <strong>stroke_horizontal_line</strong> recibe como
argumento, de donde, a donde debe trazar la línea.</p>

<h4>Pasemos a la línea 41</h4>

<p>El método <strong>render</strong> devuelve el PDF. Si lo sacas con <strong>puts</strong> verás el PDF
crudo. Podrías también tirarlo pa un fichero así:</p>

<figure class='code'><figcaption><span>&#8220;fulanito.pdf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>   <span class="no">IO</span><span class="o">.</span><span class="n">write</span> <span class="s1">&#39;fulanito.pdf&#39;</span><span class="p">,</span><span class="vi">@pdf</span><span class="o">.</span><span class="n">render</span>
</span></code></pre></td></tr></table></div></figure>


<p>A los usuarios le encantan los PDF, hazlos feliz ;)</p>

<p>   <blockquote><p>Existen dos tipos de personas,<br/>   las que hacen lo que le dicen; y,<br/>   las que dicen lo que hay que hacer.</p><footer><strong>Lázaro Armando</strong></footer></blockquote></p>
]]></content>
  </entry>
  
</feed>
