<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[El SysAdmin del 3er Mundo]]></title>
  <link href="http://uranio-235.github.io/atom.xml" rel="self"/>
  <link href="http://uranio-235.github.io/"/>
  <updated>2017-01-10T17:04:31-05:00</updated>
  <id>http://uranio-235.github.io/</id>
  <author>
    <name><![CDATA[låzaro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[tendencias tecnológicas]]></title>
    <link href="http://uranio-235.github.io/blog/2017/01/09/tendencias-tecnologicas/"/>
    <updated>2017-01-09T21:04:02-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/01/09/tendencias-tecnologicas</id>
    <content type="html"><![CDATA[<p>Por suerte, la era de Zentyal está a punto de terminar.</p>

<p>Ahora tenemos tocadores de pfSense, que se creen usuarios de FreeBSD.</p>

<p>Siempre me ha maravillado el criterio de selección tecnológica de la mayoría (NO
todos) los cubanos</p>

<h4>puro efecto bandwagon</h4>

<p>Funciona como especie de moda, donde el software más popular triunfa,
simplemente por su popularidad, no por su adecuación, o idoneidad.</p>

<p>Por ejemplo, nginx se puso de moda, porque el jovenclub lo usa. El jovenclub es
famoso por sus disparates tecnológicos, pero no importa. ¡Usemos nginx! Antes yo
usaba nginx, como proxy inverso, balanceo de carga y servidor web de contenido
estático. Entonces yo era &ldquo;un extravagante&rdquo;. Ahora todo el mundo usa nginx para
TODO. Tipos que AYER tocaron la puntica de nginx, te dicen: &ldquo;¿aún usas apache?&rdquo;
y te miran como si tú fueras un bicho raro. Curiosamente, la misma mirada que
ponían cuando les decías que usabas nginx (además de apache).</p>

<p>Muchos dicen que &ldquo;systemd es una mierda&rdquo;, pero al preguntar &ldquo;por qué&rdquo;, son pocos
los que dan argumentos técnicos que vallan más allá de simple resistencia al
cambio. Parece no haber un término medio. Todo es blanco y negro. Nadie dice por
ejemplo que systemd es bueno para máquinas de escritorios pero no tan bueno para
servidores. NOOoo&hellip;</p>

<p>Otro que bien baila es Proxmox. La herramienta de virtualización que ha caído en
manos de los mas perezosos como dedo en el anillo. Al parecer soy el único
cubano que usa Xen. Actualmente me dicen: &ldquo;ah! ¿no usas proxmox?&rdquo;. Pero cuando
pregunto: ¿qué tiene proxmox superior a xen? Estoo, es queeee, veráaas,
bueeenooo&hellip;. Nada, que está moda. La ecuación es simple:</p>

<h4>Virtualización = Proxmox</h4>

<p>click-click-click-click-click ¡<strong>ZAS</strong>! Todo está listo!!</p>

<p>Dejaron de usar windows Server (click, click listo!)</p>

<p>Para usar:</p>

<p>Proxmox+Zimbra+pfSense (click, click ¡LISTO! ¡¡¡y además FUNCIONA!!)</p>

<p>¿Cambio de paradigma? ¿Filosofía UNIX? ¿Estilo de trabajo? ¿Teorema de KISS?
¿Software Libre? <em>-pfff, que chiste. Ese tipo está loco, anda con la pila de
consolas que parecen salida de la matrix. Nerd!</em></p>

<p>No saben que demonios es un cortafuegos, no son capaces de elaborar una solución
a la medida de su problema y ni siquiera entienden el software que usan pero
eso son nimiedades.</p>

<p>Cuando las necesidades tan pecularies de cubita la bella dicen &ldquo;aquí estoy&rdquo;,
entonces no saben como van a modificar el comportamiento del software para
adecuarse a nuestras extravagantes necesidades. Por que hay cientos de menus con
cientos de click y checkmarks, pero ninguna hace lo que le exigen al sysadmin
cubano.</p>

<p>El servidor de correos, es su mayor dolor de cabeza, pero hay Zimbra. A veces
necesitan un servidor SIMPLE o un servidor COMPLEJO, nada que ver con Zimbra y
bueno, prueba a ver si iRedMail te lo resuelve.</p>

<p>Ven herramientas como nagios o smokeping, se quedan con la boca abierta, pero
¡joder! es muy complicado, me paso. Al menos,  hasta que alguien me de una
configuración que funcione y yo cambiarle los valores para que se adecue a mi
entorno.</p>

<p>Reza porque todo funcione. Ya que es tanta la ignorancia, que si hay un
problema, ni siquiera saben como van a pedir ayuda, porque ni siquiera entienden
con que están tratando.</p>

<p>Siempre puedes decirle al jefe &ldquo;no se puede&rdquo;. Después de todo, eres un
<strong>tolerable asalariado</strong> y no te pasará nada por incumplir. Le puedes echar la
culpa <em>al país que es una mierda por el atraso tecnológico</em> y bla bla bla; todas
esas excusas que usan los mediocres de gama alta.</p>

<h4>pero tienen más horas de facebook que de consola</h4>

<p>Los más triste del caso, es que luego quieren venir a discutir de tecnología y
uno no sabe como va a llevar la conversación para no humillarlos.</p>

<h4>punto y aparte</h4>

<p>Además, están los tipos que <strong>Sí SABEN</strong>, pero que usan todo eso porque &ldquo;no
tienen tiempo&rdquo;. Trabajan sentados, el día entero apretando teclas en aire
acondicionado y &ldquo;no tienen tiempo&rdquo;.</p>

<p>Pierden su tiempo en jugar con toda esta parafernalia modista, para luego darse
cuenta que esos sistemas, están incompletos. Les falta algo que ellos ya han
hecho mejor y es cuando se dan cuenta, que están andando con juguetes.</p>

<h4>para los extremistas</h4>

<p>No digo que Zimbra/pfSense/Proxmox sean malos, digo que el método perezoso, es
malo.</p>

<p>No puedes comparar la picoloro con la llave inglesa.</p>

<p>Tampoco puedes pensar que solo necesitas una de las dos para hacerlo todo. Ambas
son útiles, en su adecuado ambiente y para la tarea que fueron diseñadas.</p>

<p>Antes de emitir un criterio tecnológico, pruebo el software, lo instalo, lo
manoceo, trato de romperlo, de ver como funciona, que tiene por detrás;
finalmente, que haría yo si quisiera/pudiera mejorarlo. Entonces me hago un
criterio.</p>

<p>La gente que me conoces, sabe que aveces digo: &ldquo;eso es una mierda&rdquo;. Otros, que
me conocen mejor y que hace lo mismo que yo; suelen oírme cuando digo: -eso es
una mierda y te contaré como llegué a esa conclusión, ya que seguro que a ti te
ha pasado parecido.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[flasheando modem al S4]]></title>
    <link href="http://uranio-235.github.io/blog/2017/01/09/flasheando-modem-al-s4/"/>
    <updated>2017-01-09T19:00:58-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/01/09/flasheando-modem-al-s4</id>
    <content type="html"><![CDATA[<p>Es un mojón de los Samsung, tener el módem (banda base) como una partición y
(por ende un firmware) aparte del sistema. Por este motivo, cuando flasheas
cyanogen (léase &ldquo;cualquier ROM&rdquo;) una y otra vez; o cuando el teléfono se apaga
abruptamente&hellip; Diiiicen que se corrompe el módem.</p>

<p>Entonces, de buenas a primeras, el teléfono te dice &ldquo;tarjeta SIM expulsada,
Reinicie&rdquo;. Aveces al reiniciar no se soluciona el problema. Yo he estado hasta 3
días sin teléfono. Quitarle la batería un rato y volverla a poner, suele ser una
solución, pero aveces, hasta 7 veces al día; he tenido que lidiar con el
errorsito de los cojones.</p>

<p><img class="right" src="http://uranio-235.github.io/images/acercade_baseband.png" width="200" height="300" title="" ></p>

<p>La única solución paliativa que he visto, es, de vez en vez, al menos una cada
dos mes; flahsear el módem.</p>

<p>El cómo dar con el módem te lo dejo de tarea. Lo siento, no soy la base de datos
de bandas bases de samsung. La mía la <strong>busqué en google</strong> escribiendo el texto:</p>

<p>&ldquo;modem SGH-M919&rdquo;</p>

<p>Oséase, pidiendo el módem para mi modelo del teléfono, que al parecer, la
<strong>M919UVUFNH7</strong>, es la última disponible para mi canchanfleta.</p>

<p>El proceso de flasheo, la primera vez, requiere que nos hagamos con el
fichero PIT del teléfono.</p>

<p>Reinicia el teléfono en modo descarga. Si no sabes cómo hacerlo, googlea, cada
samsung tiene su forma. El mío (S4 T-Mobile) es Power+VolDown+Home. Luego, en el
modo descarga; una vez que (presiones VolUp) para inicializar la conexión,
pasamos a Heimdall.</p>

<p>Nota para los imbéciles: Conecte el teléfono a la computadora mediante un cable
USB <strong>en buen estado</strong>.</p>

<p><img class="right" src="http://uranio-235.github.io/images/pitfile.png" width="600" height="700" title="" ></p>

<p>En Heimdall, vamos a la pestaña <strong>Utilities</strong>. Presiona botón
<em>Detect</em><sup>1</sup>, cuando te coja el teléfono, presiona <em>Save As</em><sup>2</sup>
y te dará un nombre de fichero para salvar, por ejemplo, <strong>fulanito.pit</strong>.
Finalmente presiona <em>Download</em><sup>3</sup> y te creará el fichero.</p>

<p>Decirte quiero que este ficherito es muy famoso, ya que es algo así como tu
tabla de particiones.</p>

<p>Una vez que tienes el fichero en tu poder, Heimdall, será capaz de saber <em>a
ciegas</em> donde están las particiones de tu teléfono sin tener que preguntárselo
una y otra vez, así que guardalo en un directorio donde pongas todas las
gangarreas de tu teléfono. Por cierto, terminamos con el teléfono; aunque diga
&ldquo;do not turn off&rdquo; cágate en la noticia y reinicia (quita la batería).</p>

<p>Ahora viene tiempo de google, muuuuucho google, para dar con tu módem.</p>

<p>Digamos que finalmente diste con el módem de tu samsung. Seguro tiene un nombre
muy genérico, casi siempre se llaman <strong>modem.bin</strong>. Procede con el mismo
preludio del ritual (modo descarga y abre heimdall)</p>

<p><img class="left" src="http://uranio-235.github.io/images/flasheo_modem.png" width="600" height="700" title="" ></p>

<p>Ahí ve para la pestaña que dice <strong>Flash</strong>. Click en <em>Browse</em><sup>1</sup> y
localiza tu pitfile. Click en <em>Add</em><sup>2</sup> y luego en el <em>select</em> del campo
<em>partition name</em><sup>3</sup> selecciona la partición <strong>MDM</strong>. Finalmente, le
buscamos el fichero modem.bin haciendo click en Browse<sup>4</sup>.</p>

<p>¿No tengo que decirte que pulses <strong>Start</strong>, verdad?</p>

<p>Si todo salió bien, se reiniciará y tendrás tu módem recién flasheado. Pero no
cantes victoria. Si tu modem se deterioró, fue que ALGO lo deterioró y ese algo,
lo joderá de nuevo, así que, mantén las herramientas a manos; las necesitarás
pronto.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails-assets]]></title>
    <link href="http://uranio-235.github.io/blog/2017/01/02/rails-assets/"/>
    <updated>2017-01-02T18:55:02-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/01/02/rails-assets</id>
    <content type="html"><![CDATA[<p>Gemas como twitter-bootstrap-rails, hacen que el trabajo con CSS complejas
supuestamente se haga al click. Pero cuando deseas ir un poco más allá, por
ejemplo, si quieres DataTables, notarás que tienes dos opciones, la primera,
usar una gema desfasada (si hay, que casi siempre la hay, aunque buena para
nada).</p>

<p>Sin embargo, parece que algún cerebrito, hizo un sitio en el cual la fuente
oficial de las assets (quizás a través de npm) se convierten de manera
automatizada en una gema de rails.</p>

<p>De esta manera, al poner en el Gemfile de tu aplicación esto:</p>

<figure class='code'><figcaption><span>&#8220;Gemfile&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span>  <span class="s1">&#39;https://rails-assets.org&#39;</span> <span class="k">do</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-bootstrap&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-DataTables&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-jquery-ui&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rails-assets-iCheck&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instalarás dichas js/css en tu aplicación.</p>

<p>En el <a href="https://rails-assets.org">sito web de rails-assets</a> explica con unos
diff, que debes poner en el application.js y aaplication.css para incluir cada
una de las assets. Casi siempre es algo genérico al nombre, lo puedes intuir.</p>

<p>De todas maneras, el fracasado proyecto de crear un jquery unobstructive;
condujo a que jquery fuera expulsada del core de rails. Así que al parecer la
tendencia de rails 5 en adelante, será usar las js aparte.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xgproyect]]></title>
    <link href="http://uranio-235.github.io/blog/2016/12/29/xgproyect/"/>
    <updated>2016-12-29T21:48:32-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/12/29/xgproyect</id>
    <content type="html"><![CDATA[<p>Se supone que te cuente la historia de Xnova, OAgame y XGProyect pero de verdad
que NO estoy pa eso; ya me la disparé en la wikipedia más dos alemanes que mi
hicieron su propia versión de la historia. Pa hacerte el cuento corto, es un
juego de exploración y conquista del universo. Suena emocionante, pero todo
sucede en páginas web.  Cosas como &ldquo;tus naves destruyeron la flota enemiga&rdquo; el
juego te las cuenta, tú no las vez.</p>

<p>La tercera vez que me preguntaron en el calixto si &ldquo;tenía montado un xnova&rdquo;
decidí tomar cartas del asunto. Después de mucho rodar por google, no di con el
código fuente de xnova. El colega Leslie (alias &ldquo;Curielete&rdquo;) me comenta que
ahora lo que se usa es XGProyect.</p>

<p>La versión más reciente, es la <a href="https://github.com/XGProyect/XG-Proyect-v3.x.x/releases/download/v3.0.3/XGP3.0.3.zip">3.0.3, bájatela aquí</a></p>

<p>En mi caso, dispuse de un Virtualhost en el servidor web, para la aplicación. El
document root de este virtualhost, apuntará a <strong>/var/www/xgp</strong></p>

<figure class='code'><figcaption><span>&#8220;descargando&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget -c https://github.com/XGProyect/XG-Proyect-v3.x.x/releases/download/v3.0.3/XGP3.0.3.zip
</span><span class='line'>unzip XGP3.0.3.zip
</span><span class='line'>mv xgp3.0.3/upload /var/www/xgp
</span></code></pre></td></tr></table></div></figure>


<p>Setea los permisos como prefieras, pero al directorio de configuración, deberás
darle permiso de escritura HASTA que culmine el proceso de instalación.</p>

<figure class='code'><figcaption><span>&#8220;poniendo permisos temporales&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod -R <span class="m">0777</span> application/config/
</span></code></pre></td></tr></table></div></figure>


<h4>OJO</h4>

<p>Requiere mysql, así que para este ejemplo, crearemos una base de datos llamada
<strong>&ldquo;x&rdquo;</strong></p>

<p>Al abrir un navegador y dirigirnos al sitio, te redireccionará al instalador de
manera automática. Pedirá irremediablemente los parámetros. Luego de establecer
la conexión con la base de datos, creará el fichero de configuración. Al hacer
click en continuar, creará la complejísima base de datos que contendrá el
universo del juego.</p>

<p><img class="center" src="http://uranio-235.github.io/images/xg_1.png" width="500" height="600" title="" ></p>

<p>Si te da un error 500, es porque tu versión de php o de mysql, no le juega. Para
este ejemplo, se usó debian 8 (el container de docker para ser más preciso)</p>

<p>Más específicamente estas:</p>

<figure class='code'><figcaption><span>&#8220;versiones&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@40e0cc02bcd7:/# php -v
</span><span class='line'>PHP 5.6.24-0+deb8u1 <span class="o">(</span>cli<span class="o">)</span> <span class="o">(</span>built: Jul <span class="m">26</span> <span class="m">2016</span> 08:17:07<span class="o">)</span>
</span><span class='line'>Copyright <span class="o">(</span>c<span class="o">)</span> 1997-2016 The PHP Group
</span><span class='line'>Zend Engine v2.6.0, Copyright <span class="o">(</span>c<span class="o">)</span> 1998-2016 Zend Technologies
</span><span class='line'>    with Zend OPcache v7.0.6-dev, Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2016, by Zend Technologies
</span><span class='line'>
</span><span class='line'>root@40e0cc02bcd7:/# mysqld -V
</span><span class='line'>mysqld  Ver 5.5.52-0+deb8u1 <span class="k">for</span> debian-linux-gnu on x86_64 <span class="o">((</span>Debian<span class="o">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Con el php de archlinux, no me pinchó, todo daba error 500</p>

<p>Finalmente, nos pedirá crear el primer usuario que es además, el administrador
del juego. Deja que veas el panel de admin, tiene más botones y menú, que la
cabina de cualquier nave espacial.</p>

<p>Una vez terminado ese proceso, nos pide borrar el directorio &ldquo;install&rdquo;.
Renombrarlo trae horribles consecuencias, así que bórralo o cámbialo de lugar.</p>

<p>Por último, le devolvemos sus permisos al directorio de configuración.</p>

<figure class='code'><figcaption><span>&#8220;poniendo permisos temporales&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod -R <span class="m">0444</span> application/config/
</span></code></pre></td></tr></table></div></figure>


<p>De regreso a la ventana del juego, tendrás la landing-page y el botón entrar.</p>

<p><img class="center" src="http://uranio-235.github.io/images/xg_2.png" width="500" height="600" title="" ></p>

<p>Ahí te logueas y localizas el menú de administración. Puedes llegar por
<a href="http://tuservidor/admin.php">http://tuservidor/admin.php</a> Por ahí puede para empezar, hacer la tarea más
elemental: Crear usuarios.</p>

<p><img class="center" src="http://uranio-235.github.io/images/xg_3.png" width="600" height="700" title="" ></p>

<p>Entra cuanto antes al panel de administración y verás que te pida una
actualización. Al pulsar el botón, te saldrán unas sentencias SQL. Quizás las
ejecute, quizás no lo consiga. Por si acaso, tu las ejecutas en una consola SQL.
Si tienes ese error (actualización disponible) no te dejará hacer nada hasta que
no lo resuelvas.</p>

<p>Luego llégate a &ldquo;Errores DB&rdquo; y subsánalos. Por suerte es tan simple como hacer
click en &ldquo;Eliminar Todos&rdquo;. También en el menú &ldquo;Características del Juego&rdquo;, te
recomiendo desactivar &ldquo;Mercader&rdquo; y &ldquo;Oficiales&rdquo;, enseguida te darás cuenta por
qué lo digo.</p>

<p><img class="right" src="http://uranio-235.github.io/images/xg_4.png" width="600" height="700" title="" ></p>

<p>Los usuarios se hacen en el menú &ldquo;Creador&rdquo; (no en &ldquo;Usuarios&rdquo;)</p>

<p>Otra cosa, el panel de admin carga lento, es bastante lento pero eso es normal.</p>

<p>Realmente el juego tiene su encanto. Abres la página cada una o dos horas, hace
una que otra bobería y dejas las tarea en cola. Me resulta más entretenido que
facebook. En el Link &ldquo;notas&rdquo; vas tomando nota de lo que tienes por hacer, cuando
te vuelvas a loguear el lunes, solo tienes que mirarlas. Consejo, haste una
&ldquo;fabrica de robots&rdquo; cuanto antes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cambiar mac a un nano]]></title>
    <link href="http://uranio-235.github.io/blog/2016/12/27/cambiar-mac-a-un-nano/"/>
    <updated>2016-12-27T09:39:44-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/12/27/cambiar-mac-a-un-nano</id>
    <content type="html"><![CDATA[<p>Un socio me preguntó hace poquito si yo podía cambiarle la MAC a un nano. Me
pareció muy estrafalaria la necesidad de él, pero según me contó, en la red
criolla que está suscrito, suelen banear los nanos cuando los usuarios se portan
mal.</p>

<p>Tras una búsqueda en internet vi unos post en un forum pero ninguno me funcionó.
La idea es, correr un fichero al iniciar el sistema, que corra ifconfig y le
cambie la MAC a las interfaces.</p>

<p>La problemática radica, que a la interfaz &ldquo;ath0&rdquo;, no se le puede cambiar la MAC,
ya que aún estando down, te dice dispositivo ocupado. Por esa razón, parecía no
pinchar la solución de los post. Sin embargo, si bajas las 3 interfaces
involucradas en la conexión, luego cambias dichas mac, <strong>sí pincha</strong>.</p>

<p>Para ello crearemos el fichero <strong>/etc/persistent/rc.poststart</strong></p>

<figure class='code'><figcaption><span>&#8220;/etc/persistent/rc.poststart&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>
</span><span class='line'>ifconfig br0 down
</span><span class='line'>ifconfig wifi0 down
</span><span class='line'>ifconfig ath0 down
</span><span class='line'>
</span><span class='line'>ifconfig wifi0 hw ether 5e:53:84:bc:a3:54
</span><span class='line'>ifconfig ath0 hw ether 5e:53:84:bc:a3:54
</span><span class='line'>
</span><span class='line'>ifconfig ath0 up
</span><span class='line'>ifconfig wifi0 up
</span><span class='line'>ifconfig br0 up
</span></code></pre></td></tr></table></div></figure>


<p>A ese fichero le ponemos el ejecutable, si no, no pinchará.</p>

<figure class='code'><figcaption><span>&#8220;ejecutable&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>XW.v5.6.2# chmod a+rx /etc/persistent/rc.poststart
</span></code></pre></td></tr></table></div></figure>


<p>Finalmente, le decimos al firmware que modifique los cambios y que reinicie.</p>

<figure class='code'><figcaption><span>&#8220;salva y reinicia&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>XW.v5.6.2# cfgmtd -w -p /etc/
</span><span class='line'>XW.v5.6.2# reboot
</span></code></pre></td></tr></table></div></figure>


<p>Todavía hay quien cree que las MAC son una medida segura para crear reglas de
control de acceso&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[phpmyadmin múltiples servidores]]></title>
    <link href="http://uranio-235.github.io/blog/2016/12/19/phpmyadmin-multiples-servidores/"/>
    <updated>2016-12-19T14:50:26-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/12/19/phpmyadmin-multiples-servidores</id>
    <content type="html"><![CDATA[<p>Cuando tienes que manejar múltiples servidores SQL, no da la talla tener un
phpmyadmin por cada servidor. Opté por tener un phpmyadmin instalado en mi
laptop.</p>

<p>Una manera muy sencilla de hacer la pincha, es mapear con SSH el puerto de mysql
y conectar a todo el mundo como si fuera localhost.</p>

<figure class='code'><figcaption><span>&#8220;ssh y mysql&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ssh root@192.168.0.9 -L 3306:127.0.0.1:3306 -N
</span></code></pre></td></tr></table></div></figure>


<p>Pero en algunos casos, no hay SSH, el servidor no escucha por TCP, etc&hellip; En tal
caso, podrías permitir que el root se administre remotamente.</p>

<p>Para lograrlo hay que decirle a mysql que escuche por la dirección ip además de
por el socket local. En infraestructuras grandes, por lo general, ya está hecho.
Localiza en <strong>/etc/mysql/my.cnf</strong> el parámetro llamado <strong>bind-address</strong></p>

<figure class='code'><figcaption><span>&#8220;/etc/mysql/my.cnf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Instead of skip-networking the default is now to listen only on</span>
</span><span class='line'><span class="c"># localhost which is more compatible and is not less secure.</span>
</span><span class='line'><span class="nb">bind</span>-address      <span class="o">=</span> 0.0.0.0
</span></code></pre></td></tr></table></div></figure>


<p>y reinicia el mysql, claro está&hellip;</p>

<p>Ahora hacemos una consulta SQL, en la cual le daremos al usuario root, el
permiso para conectarse de una ip dada. Por ejemplo, la computadora del sysadmin
está en 192.168.0.222</p>

<figure class='code'><figcaption><span>&#8220;grant root&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">GRANT</span> <span class="k">ALL</span> <span class="k">ON</span> <span class="o">*</span><span class="p">.</span><span class="o">*</span> <span class="k">to</span> <span class="n">root</span><span class="o">@</span><span class="s1">&#39;192.168.0.222&#39;</span> <span class="n">IDENTIFIED</span> <span class="k">BY</span> <span class="s1">&#39;tupassword&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora viene el truco mágico en la configuración de phpmyadmin. El fichero de
configuración de phpmyadmin, en el caso de arch, está en
/etc/webapps/phpmyadmin/config.inc.php en otras distros, no sé, pero siempre se
llama <strong>config.inc.php</strong></p>

<p>En ese fichero, localiza la cadena de texto &ldquo;First Server&rdquo;, debes ver algo como
esto pero con muchos comentarios:</p>

<figure class='code'><figcaption><span>&#8220;config.inc.php&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$i</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;auth_type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;cookie&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;host&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;connect_type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;tcp&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;compress&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;AllowNoPassword&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Solo tienes que añadirle otra <strong>$i++;</strong> y poner los parámetros en el array $cfg</p>

<figure class='code'><figcaption><span>&#8220;ejemplo de múltiples servidores&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nv">$i</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;auth_type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;cookie&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;host&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;connect_type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;tcp&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;compress&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;AllowNoPassword&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$i</span><span class="o">++</span><span class="p">;</span> <span class="c1">// otro servidor</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;verbose&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;otro servidor&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;host&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;192.168.1.9&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;connect_type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;tcp&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;compress&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;AllowNoPassword&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$i</span><span class="o">++</span><span class="p">;</span> <span class="c1">// el leviatand de los mares</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;verbose&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;otro servidor mas&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;host&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;192.168.2.9&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;connect_type&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;tcp&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;compress&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'><span class="nv">$cfg</span><span class="p">[</span><span class="s1">&#39;Servers&#39;</span><span class="p">][</span><span class="nv">$i</span><span class="p">][</span><span class="s1">&#39;AllowNoPassword&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="k">false</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cuantos servidores quieras añadirle&hellip; Cuando vallas a loguearte en el
phpmyadmin verás debajo de la caja de login, un select, con el servidor que
quieres acceder.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iptables y ftp]]></title>
    <link href="http://uranio-235.github.io/blog/2016/12/19/iptables-y-ftp/"/>
    <updated>2016-12-19T11:34:13-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/12/19/iptables-y-ftp</id>
    <content type="html"><![CDATA[<p>Instalé un proftpd y le puse un cortafuegos a dicho servidor. Al instante,
nagios reportó que el FTP pinchaba, así que di por terminada la tarea. Sin
embargo, a las dos horas un usuario me pregunta si &ldquo;el ftp está caído&rdquo;.</p>

<p>Resulta que los puertos pasivos, se comportan de una manera &ldquo;inesperada&rdquo;. Una
solución común es abrir el rango de puertos que se configuran como pasivos, pero
eso no me cuadra.</p>

<p>Por suerte, linux cuenta con un módulo especial llamado <strong>ip_conntrack_ftp</strong>,
especial para el tema.</p>

<p>Si quieres ver más detalles y otras soluciones, llégate aquí:</p>

<p><a href="http://unix.stackexchange.com/questions/93554/iptables-to-allow-incoming-ftp">http://unix.stackexchange.com/questions/93554/iptables-to-allow-incoming-ftp</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails en alpine]]></title>
    <link href="http://uranio-235.github.io/blog/2016/12/09/rails-en-alpine/"/>
    <updated>2016-12-09T20:14:28-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/12/09/rails-en-alpine</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://uranio-235.github.io/images/shinkasen.jpg" width="400" height="500" title="" ></p>

<p>Finalmente el boom de docker llegó a Cuba. En mi caso personal, hace rato lo uso
para desplegar aplicaciones de Ruby on Rails y siempre me pareció que debian era
la mejor base para hacer una imagen. Si bien, hay containers de rails, eso de
usar en producción, con una distro hecha por un cualquiera, como que me da cosa.
Hacer una a partir de la oficial, es más sencillo que verificar la integridad de
una ya hecha.</p>

<p>AlpineLinux para docker es un batazo, eso es in-negable. Pero instalar rails en
alpine, resultó ser más complicado de lo que yo pensaba.</p>

<figure class='code'><figcaption><span>&#8220;docker y alpine&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>docker pull alpine
</span><span class='line'>docker run -ti alpine /bin/sh
</span></code></pre></td></tr></table></div></figure>


<p>Ante todo necesitamos instalar las librerías requeridas para compilar, sobre
todo las dependencias de nokogiri. Instalaremos los paquetes: build-base,
nodejs, tzdata, libxml2-dev,  libxslt-dev, sqlite-dev y claro, ruby</p>

<p>En este caso, usaremos sqlite como ejemplo, pero a ti quizás te cuadre más con
<strong>mariadb-dev</strong> (mysql) o <strong>postgresql-dev</strong></p>

<figure class='code'><figcaption><span>&#8220;apk add&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>apk update
</span><span class='line'>apk add build-base nodejs tzdata libxml2-dev  libxslt-dev
</span><span class='line'>apk add sqlite-dev mariadb-dev postgresql-dev
</span><span class='line'>apk add ruby ruby-dev ca-certificates libffi libffi-dev
</span></code></pre></td></tr></table></div></figure>


<p>Como nokogiri es un caso tan peculiar, le diremos que compile usando las
librerías del sistema, para ellos lo instalaremos aparte. Alpine <strong>no</strong> usa
glibc, usa musl-libc y nokogiri NO compila, por tanto, hay que usar las
librerías del sistema; en vez de las que provee nokogiri.</p>

<figure class='code'><figcaption><span>&#8220;nokogiri&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem inst --no-document nokogiri -- --use-system-libraries
</span></code></pre></td></tr></table></div></figure>


<p>Con eso ya tenemos los cimientos echados. Nuestra imagen habrá crecido 200
megas. Ahora vamos instalar rails.</p>

<figure class='code'><figcaption><span>&#8220;gem&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem inst --no-document rails io-console
</span></code></pre></td></tr></table></div></figure>


<p>El paso de instalar rails como gema del sistema es cuestionable para una pila de
gente; pero ten en cuenta que es la manera de saber si rails funciona, recuerda
que esto es un ejemplo. La primera vez me topé con que debía instalar
<strong>io-console</strong>, ya que a pesar de ser dependencia, nadie la requería. Bueno a
ver&hellip;</p>

<figure class='code'><figcaption><span>&#8220;rails&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/ <span class="c"># rails -v</span>
</span><span class='line'>Rails 5.0.0.1
</span></code></pre></td></tr></table></div></figure>


<p>Tengo una imagen llamada &ldquo;alpine_ruby&rdquo; en la que tengo todo lo necesario para
instalar y No tengo la gema de rails instalada. Entonces, con cada versión de
rails, por ejemplo, derivar de &ldquo;alpine_ruby&rdquo; la imagen alpine_rails50 , así
cuando salga el rails 5.1 le llamaré alpine_rails51</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[squid3 bloquear user-agent]]></title>
    <link href="http://uranio-235.github.io/blog/2016/11/24/squid3-bloquear-user-agent/"/>
    <updated>2016-11-24T14:36:13-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/11/24/squid3-bloquear-user-agent</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://uranio-235.github.io/images/noiexplore.png" width="400" height="500" title="" ></p>

<p>Recién, he tenido algunos problemas con descargadores multi-hilos que se chupan
el ancho de banda y se cagan en los delay_pools. Buscando como bloquear dichos
descargadores, el colega Agustín Ybarra me recomienda bloquear los user_agent.</p>

<p>Pero pensándolo bien, resolví unos cuantos problemas. Pues por ejemplo, google
play service de los teléfonos android, consume muchísimo y resuelve poco, de
forma que el que navega en un delay_pool, ve afectado su ancho de banda por
cosas que ignora.</p>

<p>Solución, bloquear los User-Agent. La idea suena bien, pero primero hay que
loguear los user agent. Para ellos usaremos un custom_log de squid, loguearemos
los usuarios y los user-agent. A mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;squid.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># loguea los user-agent</span>
</span><span class='line'>logformat useragent  %un <span class="s2">&quot;%{User-Agent}&gt;h&quot;</span>
</span><span class='line'>access_log daemon:/var/log/squid3/user_agent.log useragent
</span></code></pre></td></tr></table></div></figure>


<p>Ahora tenemos el fichero <em>user_agent.log</em>, logueando usuario y user_agent; claro
está, podría loguear, usuario, user-agent y url, pero la linea queda muy larga.</p>

<p>Una vez que hallas encontrado el user-agent que te moleste, crea una ACL
<strong>arriba</strong> de la ACL que autorize la navegación.</p>

<figure class='code'><figcaption><span>&#8220;squid.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># por ejemplo, blqueamos zapya y se fana</span>
</span><span class='line'>acl zapya browser ^com<span class="se">\.</span>dewmobile
</span><span class='line'>http_access deny zapya
</span><span class='line'>http_reply_access deny zapya
</span></code></pre></td></tr></table></div></figure>


<p>Seguiré aquí, como <a href="https://es.wikipedia.org/wiki/The_Catcher_in_the_Rye">el pescador del centeno</a>, esperando a que vuelva a usar su descargadorcito multi-hilo de mierda&hellip; aunque seguro puede cambiarle el user-agent.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redimensionar lvm]]></title>
    <link href="http://uranio-235.github.io/blog/2016/11/22/redimensionar-lvm/"/>
    <updated>2016-11-22T21:00:22-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/11/22/redimensionar-lvm</id>
    <content type="html"><![CDATA[<p>Este post es a método de memorando, ya que SIEMPRE se me olvida como hacerlo.</p>

<p>En materia de virtualización, el sistema de plantillas nunca me ha gustado,
<strong>porque NO SÉ quién instala esos sistemas operativos ni como.</strong></p>

<p><strong>Yo prefiero</strong> por ejemplo, instalar un debian, acomodarle todo a mi manera y
usar esa instalación para generar nuevas máquinas, con todo ya listo. Por
ejemplo, un prototipo de firewall, las configuraciones de interfaz puesta con
dhcp, pero una configuración estática bien comentada, etc..</p>

<p>Mantengo esa máquina detenida y la arranco de vez en cuando para actualizar.
Cuando voy a hacer una nueva, <strong>simplemente clono esa máquina</strong>.</p>

<p>Prefiero llamarlo <strong>matriz</strong> que <em>plantilla</em>. El resto del tiempo, dicha máquina
permanece detenida (apagada) evitando así desgaste, envejecimiento, generación
de logs, etc&hellip;</p>

<p>Eso en la práctica, es lo mismo que una plantilla (para los criticones y amantes
de la moda).</p>

<p>Un inconveniente que afronté al principio con esto, fue &ldquo;el tamaño asignado al
disco duro&rdquo;. Por ejemplo, el servidor de correo que me lleva 500 gigas, mientras
que en el sistema de monitoreo (nagios) solo se lleva 5 gigas.</p>

<p>La matriz tiene un disco de 5 gigas donde se instaló todo. Sobra espacio, ya que
borrando /usr/share/doc/ y la cache de apt, se quedo en menos de un giga. El
problema (con Xen) viene a la hora de agrandar el disco.</p>

<p>No se como proxmox maneja esa situación y sinceramente, <strong>no me interesa</strong>, ya
que:</p>

<p><strong>LVM resuelve el problema!</strong></p>

<p>Si no tienes la costumbre de instalar sobre LVM, deberías hacértela&hellip; Es muy
versátil.</p>

<p>BTRfs es otra buena opción, pero su rendimiento decae mucho con el tiempo (<strong>mi
experiencia</strong>).</p>

<p>Añadir un disco al volumen lógico y aumentar su tamaño <strong>resuelve el problema</strong>.</p>

<p>Claro, el sistema de archivos que instalaste, debe soportar tal operación, pero
por suerte, ext4 lo hace perfectamente y sin tener que desmontar el sistema de
archivos.</p>

<p>El problema es que <strong>NUNCA ME ACUERDO</strong> de los comandos para redimensionar el
volumen lógico.</p>

<figure class='code'><figcaption><span>&#8220;la nota&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pvcreate /dev/xvdb
</span><span class='line'>vgextend lvm /dev/xvdb
</span><span class='line'>lvm lvextend -l +100%FREE /dev/lvm/lv1
</span><span class='line'>resize2fs -p /dev/lvm/lv1
</span></code></pre></td></tr></table></div></figure>


<p>Note que mi grupo de volúmenes se llama <strong>lvm</strong> y que el volumen lógico se llama
<strong>lv1</strong> (no soy muy creativo con nombres para lvm). O sea, el disco quedaría
así:</p>

<h4>/dev/mapper/lvm-lv1</h4>

<p><strong>Nota para los retardados:</strong> <em>El dispositivo /dev/xvdb es OTRO disco que se le
añadió a la máquina para aumentar su espacio. Tenía /dev/xvda con 5 gigas y se
le añádió otro disco, el llamado /dev/xvdb, con más espacio. Oséase colocaste
otro disco en la máquina virtual o simplemente conectaste otro disco duro en el
canal sata de una máquina física</em></p>

<p>Entonces, linea por linea, en cámara lenta:</p>

<p>1- Convierte el disco /dev/xvdb en un volumen físico (mete el disco pal saco de
LVM) En mi caso, el  grupo de volúmenes se llama <strong>lvm</strong>, así que:</p>

<p>2- Extenderemos el grupo llamado <strong>lvm</strong> añadiendo el volumen físico
<strong>/dev/xvdb</strong> al volumen lógico <strong>lv1</strong>.</p>

<p>3- La parte que siempre se me olvida (el parámetro está raro con cojone)
Redimensionar el volumen lógico <strong>lv1</strong> a su máxima capacidad.</p>

<p>4- Por último, redimensionar el ext4 en <strong>/dev/lvm/lv1</strong> a su máxima capacidad.</p>

<p>Y listo! Ya tienes tu disco del tamaño que te de la gana ;-)</p>

<p>Puedes correr <strong>lvmdiskscan -l</strong> para cerciorarte de que todo esté como esperas,
no sea que hallas metido la delicada.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sysinfo en el motd]]></title>
    <link href="http://uranio-235.github.io/blog/2016/11/20/sysinfo-en-el-motd/"/>
    <updated>2016-11-20T17:13:27-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/11/20/sysinfo-en-el-motd</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://uranio-235.github.io/images/sysinfo.png" width="400" height="500" title="" ></p>

<p>Desde que lo vi en unbuntu server, había querido hacer que mi servidores
mostraran un overview en el <a href="https://en.wikipedia.org/wiki/Motd_(Unix">MOTD</a>)</p>

<p>Al menos debian, tiene una manera de cambiar el MOTD dinamicamente. Para sazonar
bien el MOTD, vamos a usar figlet, una aplicación que genera letras en ascii-art a
partir de una palabra dada.</p>

<figure class='code'><figcaption><span>&#8220;instalando todo&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>aptitude install figlet
</span></code></pre></td></tr></table></div></figure>


<p>El directorio <strong>/etc/update-motd.d/</strong> ejecutará en orden alfabético (o numérico
en nuestro caso) aquellos script cuya salida estandard, compondrán nuestro MOTD.</p>

<figure class='code'><figcaption><span>&#8220;aprovisionando el update-motd.d&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir /etc/update-motd.d/
</span><span class='line'><span class="nb">cd</span> /etc/update-motd.d/
</span><span class='line'>touch 00-header <span class="o">&amp;&amp;</span> touch 01-sysinfo <span class="o">&amp;&amp;</span> touch 02-footer
</span><span class='line'>chmod +x /etc/update-motd.d/*
</span></code></pre></td></tr></table></div></figure>


<p>Finalmente, nos echamos el MOTD de debian por defecto; que no deja de
restregarnos en cara la falta de garantía.</p>

<p>Además, el fichero <strong>/var/run/motd</strong> contendrá nuestro motd resultante, así que
lo lincamos con el que borramos.</p>

<figure class='code'><figcaption><span>&#8220;aprovisionando el update-motd.d&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rm /etc/motd
</span><span class='line'>ln -s /var/run/motd /etc/motd
</span></code></pre></td></tr></table></div></figure>


<p>Por una cuestión de organización, usaremos 3 ficheros:</p>

<p><strong>00-header</strong> con lo que queremos poner primero. En este caso, el nombre y
version de la distribución, además de un mensajito de bienvenida.</p>

<figure class='code'><figcaption><span>&#8220;00-header&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="o">[</span> -r /etc/lsb-release <span class="o">]</span> <span class="o">&amp;&amp;</span> . /etc/lsb-release
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -z <span class="s2">&quot;$DISTRIB_DESCRIPTION&quot;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">[</span> -x /usr/bin/lsb_release <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>        <span class="nv">DISTRIB_DESCRIPTION</span><span class="o">=</span><span class="k">$(</span>lsb_release -s -d<span class="k">)</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>figlet <span class="k">$(</span>hostname<span class="k">)</span>
</span><span class='line'><span class="nb">printf</span> <span class="s2">&quot;\n&quot;</span>
</span><span class='line'><span class="nb">printf</span> <span class="s2">&quot;Welcome to %s (%s).\n&quot;</span> <span class="s2">&quot;$DISTRIB_DESCRIPTION&quot;</span> <span class="s2">&quot;$(uname -r)&quot;</span>
</span><span class='line'><span class="nb">printf</span> <span class="s2">&quot;\n&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yo instalo los sistemas en inglés, así que para mantener todo parejo, escribimos
<em>güelcome</em> y lo hacemos con <strong>printf</strong> para procesar mejor los &ldquo;\n&rdquo; y que pinche
sin importar la shell que se esté usando.</p>

<p>El segundo fichero será <strong>01-sysinfo</strong> y contendrá la parte linda, de la memoria
RAM en uso, el CPU, la carga y la dirección ip de la primera interfaz.</p>

<figure class='code'><figcaption><span>&#8220;01-sysinfo&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="nv">date</span><span class="o">=</span><span class="sb">`</span>date<span class="sb">`</span>
</span><span class='line'><span class="nv">load</span><span class="o">=</span><span class="sb">`</span>cat /proc/loadavg <span class="p">|</span> awk <span class="s1">&#39;{print $1}&#39;</span><span class="sb">`</span>
</span><span class='line'><span class="nv">root_usage</span><span class="o">=</span><span class="sb">`</span>df -h / <span class="p">|</span> awk <span class="s1">&#39;/\// {print $(NF-1)}&#39;</span><span class="sb">`</span>
</span><span class='line'><span class="nv">memory_usage</span><span class="o">=</span><span class="sb">`</span>free -m <span class="p">|</span> awk <span class="s1">&#39;/Mem:/ { total=$2 } /buffers\/cache/ { used=$3 } END { printf(&quot;%3.1f%%&quot;, used/total*100)}&#39;</span><span class="sb">`</span>
</span><span class='line'><span class="nv">swap_usage</span><span class="o">=</span><span class="sb">`</span>free -m <span class="p">|</span> awk <span class="s1">&#39;/Swap/ { printf(&quot;%3.1f%%&quot;, &quot;exit !$2;$3/$2*100&quot;) }&#39;</span><span class="sb">`</span>
</span><span class='line'><span class="nv">users</span><span class="o">=</span><span class="sb">`</span>users <span class="p">|</span> wc -w<span class="sb">`</span>
</span><span class='line'><span class="nb">time</span><span class="o">=</span><span class="sb">`</span>uptime <span class="p">|</span> grep -ohe <span class="s1">&#39;up .*&#39;</span> <span class="p">|</span> sed <span class="s1">&#39;s/,/\ hours/g&#39;</span> <span class="p">|</span> awk <span class="s1">&#39;{ printf $2&quot; &quot;$3 }&#39;</span><span class="sb">`</span>
</span><span class='line'><span class="nv">processes</span><span class="o">=</span><span class="sb">`</span>ps aux <span class="p">|</span> wc -l<span class="sb">`</span>
</span><span class='line'><span class="nv">ip</span><span class="o">=</span><span class="sb">`</span>ip a  s dev eth0<span class="p">|</span>grep inet<span class="p">|</span>awk <span class="s1">&#39;{print $2}&#39;</span><span class="p">|</span>cut -d <span class="s1">&#39;/&#39;</span> -f 1<span class="sb">`</span>
</span><span class='line'>
</span><span class='line'><span class="nb">printf</span> <span class="s2">&quot;System information as of: $date\n&quot;</span>
</span><span class='line'><span class="nb">printf</span> <span class="s2">&quot;System load:\t%s\tIP Address:\t%s\n&quot;</span> <span class="nv">$load</span> <span class="nv">$ip</span>
</span><span class='line'><span class="nb">printf</span> <span class="s2">&quot;Memory usage:\t%s\tSystem uptime:\t%s\n&quot;</span> <span class="nv">$memory_usage</span> <span class="s2">&quot;$time&quot;</span>
</span><span class='line'><span class="nb">printf</span> <span class="s2">&quot;Usage on /:\t%s\tSwap usage:\t%s\n&quot;</span> <span class="nv">$root_usage</span> <span class="nv">$swap_usage</span>
</span><span class='line'><span class="nb">printf</span> <span class="s2">&quot;Local Users:\t%s\tProcesses:\t%s\n\n&quot;</span> <span class="nv">$users</span> <span class="nv">$processes</span>
</span></code></pre></td></tr></table></div></figure>


<p>Por último <strong>02-footer</strong> será la parte de abajo. Contendrá cualquier cosa que
quieras poner en el fichero <strong>/etc/motd.tail</strong> por ejemplo, una anotación que
quieras hacer específica para ese servidor. Se mostrará si existe el fichero.</p>

<figure class='code'><figcaption><span>&#8220;02-footer&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="o">[</span> -f /etc/motd.tail <span class="o">]</span> <span class="o">&amp;&amp;</span> cat /etc/motd.tail <span class="o">||</span> <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[openvpn user+pass]]></title>
    <link href="http://uranio-235.github.io/blog/2016/11/14/openvpn-user-plus-pass/"/>
    <updated>2016-11-14T21:41:05-05:00</updated>
    <id>http://uranio-235.github.io/blog/2016/11/14/openvpn-user-plus-pass</id>
    <content type="html"><![CDATA[<p>Si bien, openvpn con una llave estática es algo bastante sencillo de configurar;
tiene un grave problema: Que solo un cliente puede conectarse a la vez. En un
escenario donde por ejemplo, queremos crear una vpn para múltiples servidores
que deben conectarse, usar un clave estática se vuelve un problema. Una
topología de anillo podría ayudarnos resolverlo, pero cada servidor debería ser
cliente y servidor a la vez. Una VPN autenticada por usuario y contraseña
resuelve el problema de la manera más simplificada posible.</p>

<p>Creamos la infraestructura de certificados:</p>

<figure class='code'><figcaption><span>&#8220;aprovisionando easy-rsa&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema ~<span class="o">]</span><span class="nv">$ </span>mkdir Downloads/vpn
</span><span class='line'><span class="o">[</span>lazaro@artema ~<span class="o">]</span><span class="nv">$ </span><span class="nb">cd </span>Downloads/vpn
</span><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span>cp -r /etc/easy-rsa/* ./
</span></code></pre></td></tr></table></div></figure>


<p>Si quieres, si te da la mariconería, edita los parámetros del fichero que acabas
de copiar, pa que pongas los parámetros bonitillos, si no, espera a que openssl
los pregunte; a lo mejor ni los pregunta.</p>

<figure class='code'><figcaption><span>&#8220;aprovisionamiento de certificados&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span>easyrsa init-pki
</span><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span>easyrsa build-ca nopass
</span></code></pre></td></tr></table></div></figure>


<p>Note que la cadena de texto <strong>tuservidor</strong> debe ser remplazada por el nombre de
tu actor asiático preferido o, por algún nombre de tu agrado para el servidor.</p>

<figure class='code'><figcaption><span>&#8220;creando el certificado del servidor&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span>easyrsa build-server-full tuservidor nopass
</span></code></pre></td></tr></table></div></figure>


<p>Ahora el <a href="https://es.wikipedia.org/wiki/Diffie-Hellman">Diffie Hellman</a>, MUY
importante. Ponte cómodo que va pa largo:</p>

<figure class='code'><figcaption><span>&#8220;creando el diffie hellman&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span>easyrsa gen-dh
</span></code></pre></td></tr></table></div></figure>


<p>Tiramos todo eso para /etc/openvpn en un directorio que designaremos con el
nombre de &ldquo;servidor&rdquo; (por una cuestión de orden).</p>

<figure class='code'><figcaption><span>&#8220;/etc/openvpn/&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span>mkdir /etc/openvpn/servidor
</span><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span>cp pki/ca.crt /etc/openvpn/servidor
</span><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span>cp pki/dh.pem /etc/openvpn/servidor
</span><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span>cp -r pki/private/*.* /etc/openvpn/servidor/
</span><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span>cp -r pki/issued/tuservidor.* /etc/openvpn/servidor/
</span></code></pre></td></tr></table></div></figure>


<p>Ya tenemos todo listo pa armar el muñeco. Ahora vamos a crear la configuración
del servidor. A mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;servidor.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema vpn<span class="o">]</span><span class="nv">$ </span><span class="nb">cd</span> /etc/openvpn/
</span><span class='line'><span class="o">[</span>lazaro@artema openvpn<span class="o">]</span><span class="nv">$ </span>cat servidor.conf
</span><span class='line'><span class="c"># como y por donde escuhan</span>
</span><span class='line'>port 1194
</span><span class='line'>proto udp
</span><span class='line'>dev tun
</span><span class='line'>
</span><span class='line'><span class="c"># los certificados</span>
</span><span class='line'>ca /etc/openvpn/servidor/ca.crt
</span><span class='line'>cert  /etc/openvpn/servidor/tuservidor.crt
</span><span class='line'>key /etc/openvpn/servidor/tuservidor.key
</span><span class='line'>
</span><span class='line'><span class="c"># el diffie hellman</span>
</span><span class='line'>dh /etc/openvpn/servidor/dh.pem
</span><span class='line'>
</span><span class='line'><span class="c"># la red que vamos a operar</span>
</span><span class='line'>server 10.8.0.0 255.255.255.0
</span><span class='line'>
</span><span class='line'><span class="c"># manda un ping cada 10 segundos</span>
</span><span class='line'><span class="c"># y tumba el tunel si a los 120 no hay respuesta</span>
</span><span class='line'>keepalive <span class="m">10</span> 120
</span><span class='line'>
</span><span class='line'><span class="c"># usa la compresión lzo</span>
</span><span class='line'>comp-lzo
</span><span class='line'>
</span><span class='line'><span class="c"># opera con los siguientes privilegios</span>
</span><span class='line'><span class="c">#user nobody</span>
</span><span class='line'><span class="c">#group nogroup</span>
</span><span class='line'>
</span><span class='line'><span class="c"># esto es para reforzarlo</span>
</span><span class='line'>persist-key
</span><span class='line'>persist-tun
</span><span class='line'>
</span><span class='line'><span class="c"># que tan elocuente será</span>
</span><span class='line'>verb 3
</span><span class='line'>
</span><span class='line'><span class="c"># mándale estos parámetros al cliente</span>
</span><span class='line'>push <span class="s2">&quot;redirect-gateway def1&quot;</span>
</span><span class='line'>push <span class="s2">&quot;dhcp-option DNS 8.8.8.8&quot;</span>
</span><span class='line'>push <span class="s2">&quot;dhcp-option DNS 8.8.4.4&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># y he aquí el truco de la autenticación</span>
</span><span class='line'>plugin /usr/lib/openvpn/plugins/openvpn-plugin-auth-pam.so login
</span><span class='line'>client-cert-not-required
</span><span class='line'>username-as-common-name
</span></code></pre></td></tr></table></div></figure>


<p>Con eso tenemos el servidor pinchando. Ahora vamos a hacer un fichero <strong>.ovpn</strong>
genérico, para dar a entender como sería la configuración de nuestro cliente.</p>

<p><strong>OJO</strong> El certificado que se le dará al cliente será el <strong>ca.crt</strong></p>

<p>A mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;cliente.ovpn&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema openvpn<span class="o">]</span><span class="nv">$ </span>cat tuservidor.ovpn
</span><span class='line'>client
</span><span class='line'>dev tun
</span><span class='line'>proto udp
</span><span class='line'>remote 192.168.0.1 1194
</span><span class='line'>remote-cert-tls server
</span><span class='line'>auth-user-pass ~/autenticacion.conf
</span><span class='line'>comp-lzo
</span><span class='line'>&lt;ca&gt;
</span><span class='line'>-----BEGIN CERTIFICATE-----
</span><span class='line'>Lorem ipsum ad his scripta blandit partiendo, eum fastidii
</span><span class='line'>accumsan euripidis in, eum liber hendrerit an. Qui ut wisi
</span><span class='line'>vocibus suscipiantur, quo dicit ridens inciderint id. Quo mundi
</span><span class='line'>lobortis reformidans eu, legimus senserit definiebas an eos. Eu
</span><span class='line'>sit tincidunt incorrupte definitionem, vis mutat affert
</span><span class='line'>percipit cu, eirmod consectetuer signiferumque eu per. In usu
</span><span class='line'>latine equidem dolores. Quo no falli viris intellegam, ut fugit
</span><span class='line'>veritus placerat per.  Ius id vidit volumus mandamus, vide
</span><span class='line'>veritus democritum te nec, ei eos debet libris consulatu. No
</span><span class='line'>mei ferri graeco dicunt, ad cum veri accommodare. Sed at malis
</span><span class='line'>omnesque delicata, usu et iusto zzril meliore. Dicunt maiorum
</span><span class='line'>eloquentiam cum cu, sit summo dolor essent te. Ne quodsi
</span><span class='line'>nusquam legendos has, ea dicit voluptua eloquentiam pro, ad sit
</span><span class='line'>quas qualisque. Eos vocibus deserunt quaestio ei.
</span><span class='line'>-----END CERTIFICATE-----
</span><span class='line'>&lt;/ca&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Cada cliente de OpenVPN tiene su librito&hellip; Pero ese .ovpn genérico, debe ser
capaz de ser importado sin problema.</p>

<p>Por una cuestión de orden y seguridad, yo borro la base con la que se creó todo:</p>

<figure class='code'><figcaption><span>&#8220;clear area&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema ~<span class="o">]</span><span class="nv">$ </span>rm -rf Downloads/vpn
</span></code></pre></td></tr></table></div></figure>


<p>Por cierto, cada configuración que pongas en <strong>/etc/openvpn</strong> cuya extensión
sea <strong>.conf</strong> se puede echar a andar con systemd.</p>

<figure class='code'><figcaption><span>&#8220;systemctl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span><span class="c"># systemctl status openvpn@servidor</span>
</span><span class='line'>● openvpn@servidor.service - OpenVPN connection to servidor
</span><span class='line'>   Loaded: loaded <span class="o">(</span>/usr/lib/systemd/system/openvpn@.service<span class="p">;</span> disabled<span class="p">;</span> vendor preset: disabled<span class="o">)</span>
</span><span class='line'>   Active: inactive <span class="o">(</span>dead<span class="o">)</span>
</span><span class='line'>     Docs: man:openvpn<span class="o">(</span>8<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[recolección DomainPOP]]></title>
    <link href="http://uranio-235.github.io/blog/2016/10/22/el-domain-pop/"/>
    <updated>2016-10-22T22:44:36-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/10/22/el-domain-pop</id>
    <content type="html"><![CDATA[<p>Esta entrada ha sido copiada de mi antiguo blog <a href="http://otherlinuxblog.blogspot.com">puheroska</a>.
Vale aclarar que la escribí en el 2012&hellip;</p>

<p>Se sabe poco sobre los orígenes de ese aborto de la naturaleza que es conocido
por algunos como &ldquo;recolección aPOP&rdquo; o por otros como &ldquo;DomainPOP&rdquo;.</p>

<p><img class="right" src="http://uranio-235.github.io/images/apartado_postal.jpg" width="200" height="300" title="" ></p>

<p>Haciendo referencia al hecho de bajar todo el correo para un dominio de un pop
remoto. Muchos seguron lo identifican con un popular, potente y hermoso servidor
de correo, para windows llamado MDeamon (pronunciado por algunos como
&ldquo;emodimons&rdquo; y por otro como &ldquo;emdaimons&rdquo;). Muy conocido por su simple pero
elegante cliente web, el World Client. Entre sus <em>features</em>, podemos ver el
almacenamiento de TODO el correo de un dominio en un mismo buzón. Esto, sumado a
que en cuba todo el software es gratis :D lo convirtió en la herramienta
definitiva para las redes conmutadas.</p>

<p>Por otra parte, no todo se le impugna windows. Cuando aún el morro era de palo y
los cañones tiraban taquitos; ya citmatel usaba un CuciPOP (vean que clase de
nombre &ldquo;Cubic Circles = CuCiPOP&rdquo;) para depositar el correo de sus clientes por
lineas conmutadas; una clara implementación de aPOP. Esto resolvió ser la manera
mas burda pero eficiente para resolver el problema del correo en lineas
conmutadas.</p>

<p>Lo único que perturba este barato panorama, es el hecho de que si el correo
no tiene un To: bien claro, se jode todo y te ves obligado a usar MDeamon, que
en ese aspecto se saca todos los premios. Por su puesto, él es una de
la principales implementaciones de este modelo.</p>

<p>A menudo nos encontramos con que al bajar el correo con fetchmail, uno o varios
correos no van a su destino, y, por el contrario, van al postmaster sin tener
coincidencias de usuarios locales.</p>

<p>Hay quien esta acostumbrado a que el postmaster este LLENO de correos y eso
le parece normal, cuando el buen funcionamiento de un servidor, se mide por el
postmaster vacío.</p>

<p>Si un correo tiene un To: o un Cc: fetchmail lo parsea (del infintivo &ldquo;parsear&rdquo;)
y localiza una dirección de nuestro dominio basándose en que tiene el dominio en
la configuración. Como le dijimos &lsquo;is * here&rsquo; buscará cual nombre que este
delante de lo que se parezca a nuestro dominio y lo entregara.</p>

<p>Pero: Qué pasa si el To: o el Cc: NO tienen una dirección de nuestro dominio?</p>

<p>Supongamos que el correo viene Bcc: (blink carbon copy)</p>

<p>Como por ejemplo, los correos de listas de distribuciones, etc&hellip; En ese caso
los destinos se especifican en la orden RCPTO durante la sesión SMTP. Algunos
servidores incluyen encabezados como: &ldquo;Delivery-To&rdquo;,&ldquo;Envelope-To&rdquo; o
&ldquo;X-Orignial-To&rdquo; En mi opinión todos están de más, porque el Received: tiene esta
información; pero bueno, podríamos decirle a fetchmail que ademas de esos,
parsee encabezados Received: Eso parecería una solución, el único problema es
que no pincha :-P</p>

<h4>Hasta aquí la entrada de puheroska.</h4>

<p>En aquel momento consideraba eso &ldquo;un problema sin solución&rdquo;</p>

<p>Cuando llegué a salud, me encontré nuevamente con los DomainPOP, pero <strong>por
suerte</strong>, los exim de infomed hacen bien esa pincha y dejan plasmado el
destinatario en un encabezado &ldquo;Envelope-To&rdquo;</p>

<p>He aquí el fetchmailrc que tengo en el calixto:</p>

<figure class='code'><figcaption><span>&#8220;/etc/fetchmailrc&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Fichero de configuración de fethcmail, adecuado para los MultiPOP de infomed</span>
</span><span class='line'>
</span><span class='line'><span class="nb">set </span>daemon 60
</span><span class='line'><span class="nb">set </span>postmaster <span class="s2">&quot;root&quot;</span>
</span><span class='line'><span class="nb">set </span>no bouncemail
</span><span class='line'><span class="nb">set </span>no spambounce
</span><span class='line'><span class="nb">set </span>logfile .fetchmail.log
</span><span class='line'><span class="nb">set </span>no syslog
</span><span class='line'>
</span><span class='line'>defaults
</span><span class='line'>    timeout 10
</span><span class='line'>    no keep
</span><span class='line'>    fetchall
</span><span class='line'>    expunge 5
</span><span class='line'>    dropstatus
</span><span class='line'>
</span><span class='line'>poll multipop.sld.cu port <span class="m">110</span> protocol pop3 localdomains tudominio.sld.cu
</span><span class='line'>    envelope <span class="m">1</span> <span class="s2">&quot;Envelope-to:&quot;</span>
</span><span class='line'>    no dns
</span><span class='line'>    username tuusuario
</span><span class='line'>    password tupassword
</span><span class='line'>    to * here
</span><span class='line'>    limitflush
</span><span class='line'>    smtphost localhost
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[domainpop con postfix]]></title>
    <link href="http://uranio-235.github.io/blog/2016/10/22/domainpop-con-postfix/"/>
    <updated>2016-10-22T17:35:46-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/10/22/domainpop-con-postfix</id>
    <content type="html"><![CDATA[<p>Otra importante entrada que decidí migrar de <a href="http://otherlinuxblog.blogspot.com">puheroska</a></p>

<p>Es tan sencillo como crear un dominio virtual y asignarle usuarios reales. Para
no volverte loco pon el nombre del usaurio igual que el del dominoio.</p>

<p>Por ejemplo, crea dos usuarios, uno llamado <em>subdom</em> y un segndo llamado <em>otro</em>.
Luego crea el fichero /etc/postfix/virtual y ponle esto:</p>

<figure class='code'><figcaption><span>&#8220;/etc/postfix/virtual&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>@subdom.tudomionio.cu   subdom
</span><span class='line'>@otro.tudominio.cu      otro
</span></code></pre></td></tr></table></div></figure>


<p><strong>postmap</strong> que tú conoces y <strong>postfix reload</strong></p>

<figure class='code'><figcaption><span>&#8220;postmap&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>postmap /etc/postfix/virtual
</span><span class='line'>postfix reload
</span></code></pre></td></tr></table></div></figure>


<p>Ya hemos declarado que <em>subdom</em> y <em>otro</em>, serán usuarios y que todo lo que se envíe
a los dominios virtuales @otro.tudominio.cu será almacenado en /var/mail/otro</p>

<p>Finalmente en el /etc/main.cf pones:</p>

<figure class='code'><figcaption><span>&#8220;/etc/postfix/main.cf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">virtual_alias_domains</span> <span class="o">=</span> subdom.tudominio.cu otro.tudominio.cu
</span><span class='line'><span class="nv">virtual_alias_maps</span> <span class="o">=</span> <span class="nb">hash</span>:/etc/postfix/virtual
</span></code></pre></td></tr></table></div></figure>


<p>OJO no olvides que en <strong>mydestination</strong> y debes incluir ambos dominios virtuales.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[túnel 6in4]]></title>
    <link href="http://uranio-235.github.io/blog/2016/10/22/tunel-6in4/"/>
    <updated>2016-10-22T03:18:11-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/10/22/tunel-6in4</id>
    <content type="html"><![CDATA[<p>Típico: Quiero darle cumplimiento a la resolución 185/2016, pero mi proveedor
no me ha dado una ipv6</p>

<p>¿Tienes una ipv4 pública? Felicidades, puedes jugar con ipv6</p>

<p>Existe una tecnología transisional poco recomendada que se conoce como <a href="https://es.wikipedia.org/wiki/6to4?">6in4</a>,
consiste en levantar un túnel especial que te permite hacerte con un rango ipv6
pa jugar y comer mierda, porque no es ipv6 puro. Supuestamente internet debe
tener servididores que hagan relay hacia ipv6 real pero hoy en día son cada vez
menos.</p>

<p>y ahora un mensaje:</p>

<p>Si bien <em>Hurricane Electric</em> provee <a href="http://tunnelbroker.net/">túneles</a>, siendo
esto una solución PERFECTA; hay que tener en cuenta que: No se con que cuchara
etecsa se coma eso.</p>

<p>Pero volviendo al tema:</p>

<p>Las grandes redes dual-stack como google y facebook, tiene sus 6in4 bien
afinaditos, así que a través de un 6in4 puedes perfectamente llegar a ellos.
En otros tiempo, esta solución me pinchó finísimo pero recientemente no la he
probado.</p>

<p>Digamos que tu ip pública es <strong>220.110.12.190</strong> Calculamos la ipv6 que te toca:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema ~<span class="o">]</span><span class="nv">$ </span>   ipv6calc --quiet --action conv6to4 220.110.12.190
</span><span class='line'>2002:dc6e:cbe::
</span></code></pre></td></tr></table></div></figure>


<p>Digamos que devolvió el prefijo <strong>2002:dc6e:cbe::</strong> Ese será nuestro prefijo, para
meter cuantas direcciones querramos.</p>

<figure class='code'><figcaption><span>&#8220;creando el túnel&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ip tunnel add tun6to4 mode sit ttl <span class="m">255</span> remote any <span class="nb">local </span>10.0.0.1
</span><span class='line'>ip link <span class="nb">set </span>tun6to4 up
</span><span class='line'>ip -6 addr add 2002:dc6e:cbe::1/16 dev tun6to4
</span></code></pre></td></tr></table></div></figure>


<p>Una vez levantada la interfaze, levantamos una puerta de enlace que saque todas
las direcciones ipv6 del túnel que traduce las ipv4:</p>

<figure class='code'><figcaption><span>&#8220;ruta&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ip -6 route add 2000::/3 via ::192.88.99.1 dev tun6to4 metric 1
</span></code></pre></td></tr></table></div></figure>


<p>Nota que la dirección ::192.88.99.1 es así de palo, es una ruta especial que da
lugar al túnel 6in4.</p>

<p>Ahora, asignamos la primera dirección ipv6 a la interfaz pública (eth0):</p>

<figure class='code'><figcaption><span>&#8220;ip a&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ip -6 addr add 2002:dc6e:cbe::cafe/64 dev eth0
</span></code></pre></td></tr></table></div></figure>


<p>A la interfaz de la LAN (eth1) le asignamos una ip también, pero le decimos que
::cafe es la puerta de enlace predeterminada. En su momento, el servidor con
debian me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/network/interfaces&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># la asignamos a la publica una ipv6</span>
</span><span class='line'>iface eth0 inet6 static
</span><span class='line'>        address 2002:a00:1::cafe
</span><span class='line'>        netmask 64
</span><span class='line'>
</span><span class='line'><span class="c"># y la interfaz de la LAN se asignamos otra</span>
</span><span class='line'><span class="c"># pero ::cafe será la puerta de enlace</span>
</span><span class='line'>iface eth1 inet6 static
</span><span class='line'>        address 2002:a00:1:21c:c0ff:feb2:91c2
</span><span class='line'>        netmask 64
</span><span class='line'>        gateway 2002:a00:1::cafe
</span></code></pre></td></tr></table></div></figure>


<p>En la entrada anterior vimos como usar el forward y como habilitarlo.
Recuerdas?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cortafuegos ipv6 sencillo]]></title>
    <link href="http://uranio-235.github.io/blog/2016/10/22/cortafuegos-ipv6-sencillo/"/>
    <updated>2016-10-22T02:56:00-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/10/22/cortafuegos-ipv6-sencillo</id>
    <content type="html"><![CDATA[<p>En entradas anteriores mencionábamos la necesidad urgente de un cortafuegos para
ipv6. Aquí les va uno hipotético y sencillo:</p>

<p>Sean:</p>

<ul>
<li>la red 2001:db8:: /64</li>
<li>eth0 interfaz de cara al enlace</li>
<li>eth1 interfaz de cara a la LAN</li>
<li>2001:db8::1 servidor DNS</li>
<li>2001:db8::2 servidor de correo</li>
</ul>


<figure class='code'><figcaption><span>&#8220;firewall ipv6&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># al piedra angular</span>
</span><span class='line'>ip6tables -A INPUT   -m state --state RELATED,ESTABLISHED -j ACCEPT
</span><span class='line'>ip6tables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
</span><span class='line'>
</span><span class='line'><span class="c"># nuestro ruter no tiene ningún servicio corriendo</span>
</span><span class='line'><span class="c"># así que no permitimos nada pa adentro</span>
</span><span class='line'>ip6tables -A INPUT -j DROP
</span><span class='line'>
</span><span class='line'><span class="c"># el forward desde internet hacia la LAN va descartado</span>
</span><span class='line'>ip6tables -A FORWARD -i eth0 -o eth1 -j DROP
</span><span class='line'>
</span><span class='line'><span class="c"># permitimos que las máquinas en la LAN vean los sitios web de internet</span>
</span><span class='line'>ip6tables -A FORWARD -i eth1 -o eth0 -p tcp --dport <span class="m">80</span>  -j ACCEPT
</span><span class='line'>ip6tables -A FORWARD -i eth1 -o eth0 -p tcp --dport <span class="m">443</span> -j ACCEPT
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># al servidor DNS le permitimos que encueste a otros servidores dns</span>
</span><span class='line'><span class="c"># nuestro servidor dns es un servidor de cache, para la LAN. Dice:</span>
</span><span class='line'><span class="c"># lo que venga por la lan, a salir por el enlace, proveniente del servidor DNS</span>
</span><span class='line'><span class="c"># y además, cuto puerto de destino sea el 53, permítelo</span>
</span><span class='line'>ip6tables -A FORWARD -i eth1 -o eth0 -p udp --dport <span class="m">53</span> -s 2001:db8::01 -j ACCEPT
</span><span class='line'>ip6tables -A FORWARD -i eth1 -o eth0 -p tcp --dport <span class="m">53</span> -s 2001:db8::01 -j ACCEPT
</span><span class='line'>
</span><span class='line'><span class="c"># permitimos que el servidor de correo sea visible desde afuera</span>
</span><span class='line'><span class="c"># lo que venga, de afuera, pa adentro, protocolo tcp del puerto tal</span>
</span><span class='line'><span class="c"># y como destino sea la ip del servidor de correo, permítelo</span>
</span><span class='line'>ip6tables -A FORWARD -i eth0 -o eth1 -p tcp --dport <span class="m">25</span>  -d 2001:db8::2 -j ACCEPT
</span><span class='line'>ip6tables -A FORWARD -i eth0 -o eth1 -p tcp --dport <span class="m">80</span>  -d 2001:db8::2 -j ACCEPT
</span><span class='line'>ip6tables -A FORWARD -i eth0 -o eth1 -p tcp --dport <span class="m">110</span> -d 2001:db8::2 -j ACCEPT
</span><span class='line'>
</span><span class='line'><span class="c"># el resto del tráfico proveniente de la LAN hacia internet, le hacemos reject</span>
</span><span class='line'><span class="c"># esto evita que los teléfonos no se queden locos intentando buscar salida</span>
</span><span class='line'>ip6tables -A FORWARD -i eth1 -o eth0 -j REJECT
</span><span class='line'>
</span><span class='line'><span class="c"># el resto del tráfico que venga de internet, le hacemos DROP</span>
</span><span class='line'>ip6tables -A FORWARD -i eth0 -o eth1 -j DROP
</span><span class='line'>
</span><span class='line'><span class="c"># habilita el forward</span>
</span><span class='line'>sysctl net.ipv6.conf.all.forwarding<span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[las reglas del juego ipv6]]></title>
    <link href="http://uranio-235.github.io/blog/2016/10/22/poniendo-direcciones-ipv6/"/>
    <updated>2016-10-22T01:17:30-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/10/22/poniendo-direcciones-ipv6</id>
    <content type="html"><![CDATA[<p>   <blockquote><p>ipv4 se parece a ipv6, lo que las damas se parecen al ajedrez</p></blockquote></p>

<p>Ambos juegos se desarrollan sobre un tablero de 64 casillas, moviendo fichas y
comiéndose las del adversario. Pero sus fundamentos, aunque similares, no son
iguales y para que hablar de las reglas.</p>

<p>En la entrada anterior, comentaba los disparates primordiales que he ido viendo
con respecto a ipv6. Aquí les dejo un básico sobre las reglas del juego con
ipv6.</p>

<h4>2001:db8:: NO ES UN RANGO USABLE</h4>

<p>Realmente sí lo es, pero está reservado <strong>para documentación</strong> esto quiere
decir que <strong>NO DEBE HABER UNA LAN CON ESTE RANGO</strong>.</p>

<h4>¿Entonces la LAN y la pública?</h4>

<p>En ipv6, las direcciones de la LAN, son parte de la pública. No existe una
distinción real entre LAN o internet y sobre todo:</p>

<p><strong>NO HAY NATEO!!!</strong></p>

<p>Te delegarán un prefijo y tú tendrás suficientes ip como para asignarle un ip a
cada partícula de polvo de tu oficina. Pero ojo:</p>

<p><strong>esas ip serán visibles desde y hacia internet</strong></p>

<p>Cada ip que delegues de tu prefijo, formará parte del ciberspacio. Visto de otra
forma. Si asignas 2001:db8::aaa1 a una máquina en tu LAN, esa dirección será de
facto, alcanzable desde internet (si tienes internet claro).</p>

<p>Para lidiar con esta situación, deberás tener bien claro el forward en tu
router.</p>

<h3>pero yo no tengo una ipv6 real</h3>

<p>No estés tan seguro&hellip; Si tienes una ipv4 pública, tienes algo parecido. Más
adelante veremos como hacer un túnel 6in4, así que el prefijo de dirección más
apropiado para tu LAN lo calcularás así:</p>

<figure class='code'><figcaption><span>&#8220;ipv6calc&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ipv6calc --quiet --action conv6to4 tu.ipv4.publica.aqui
</span></code></pre></td></tr></table></div></figure>


<p>Nota para los imbéciles: ¿¿Notaste lo que dice <strong>tu.ipv4.publica.aqui</strong>??</p>

<p>Eso te devolverá algo como <strong>2002:a00:1::</strong> lo cual es prefijo 6in4 en base a la
ipv4 pública de tu LAN. Ese será tu prefijo ipv6.</p>

<p>Otra cosa: <strong>NO SE PONEN IP CORRIDAS</strong> como por ejemplo 2002:a00:1::1 y
2002:a00:1::2 ya que una de las cosas que intenta evitar ipv6 es el escaneo de
redes. Las ipv6 se calculan en base a la mac. Más tarde veremos como lo hace el
protocolo SLAAC.</p>

<p>A mi en lo personal, me gusta ponerle al ruter &ldquo;cafe&rdquo; <strong>2002:a00:1::cafe</strong> y un
ejemplo mas creativo 2002:a00:1::caba110 (caballo) así cada servidor tendría un
nombre: cafe, caba110, ada, ded0, dad0, 1ce, a5ado</p>

<p>Por cierto, los 0 a la izquierda, se descartan</p>

<p>2002:a00:1::<strong>000</strong>1 es la misma dirección que 2002:a00:1::1 y de echo, es mucho más
largo, porque tiene una pila de 0 por medio, pero así se expresa de manera más
corta. Incluso así puede hacer ping y cualquier referencia a la dirección que el
stack ipv6 se encarga de comprimirla y descomprimirla, sepa usted.</p>

<p>Note que en <strong>a00</strong> sí se ponen los ceros, porque <strong>NO</strong> están a la izquierda.</p>

<h3>Entonces el Forward</h3>

<p>El forward de un cortafuegos será lo que controla que será visible dentro de tu
LAN. La puerta de enlace decide qué será visible o no. Más adelante veremos un
firewall ipv6 lo más sencillo posible. Usaremos ip6tables.</p>

<h3>¿y el dhcp?</h3>

<p>Hay servidores dhcp para ipv6, pero el mecanismo bacán es SLAAC. Te adelanto que
dnsmasq tiene SLAAC, pero el pro, es <strong>radvd</strong></p>

<p>Una configuración de radvd típica se ve así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/radvd.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='C'><span class='line'><span class="n">interface</span> <span class="n">eth1</span> <span class="p">{</span>
</span><span class='line'>     <span class="n">AdvSendAdvert</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>     <span class="n">MinRtrAdvInterval</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'>     <span class="n">MaxRtrAdvInterval</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>     <span class="n">prefix</span> <span class="o">::/</span><span class="mi">64</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">AdvOnLink</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>            <span class="n">AdvAutonomous</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>            <span class="n">AdvRouterAddr</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>     <span class="p">};</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como vez, no especificas que rango de ip darás ni cosa parecida. El rango que
darás, será del mismo prefijo que tiene en la interfaz eth1 (en este caso).</p>

<h3>¿qué son las direcciones ff02 y fe80?</h3>

<p>Son direcciones link-local. En ipv6, hay direcciones del tipo &ldquo;multicast&rdquo; cuyo
destino serán todas las ip que estén dislocadas en la red. Esto no debe
confundirse con anycast y vale aclarar que en ipv6 NO EXISTE broadcast.</p>

<figure class='code'><figcaption><span>&#8220;ping multicast&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span><span class="c"># ping ff02::1%wlp2s0</span>
</span><span class='line'>PING ff02::1%wlp2s0<span class="o">(</span>ff02::1%wlp2s0<span class="o">)</span> <span class="m">56</span> data bytes
</span><span class='line'><span class="m">64</span> bytes from fe80::420e:85ff:fe7a:e6d7%wlp2s0: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">17</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nb">time</span><span class="o">=</span><span class="m">112</span> ms
</span><span class='line'><span class="m">64</span> bytes from fe80::420e:85ff:fe7a:e6d7%wlp2s0: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">18</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nb">time</span><span class="o">=</span>7.42 ms
</span></code></pre></td></tr></table></div></figure>


<p>Eso hará le hará ping a malanga y puesto de vianda que tengan un
<a href="https://es.wikipedia.org/wiki/Direcci%C3%B3n_de_Enlace-Local">link-local</a> en la
red que tiene conectado el cable de eth0.</p>

<p>Sin embargo, al hacer ping a <strong>ff02::2</strong> solo responderán aquellas ipv6 que sean
<strong>routers</strong>. Eso es una manera de saber quien es un router o simplemente si hay
alguno.</p>

<p>Las direcciones <strong>fe80::</strong> son enlaces locales. Podría decirse que las
direcciones fe80 son como decir &ldquo;arp&rdquo; pero se les puede hacer ping y otras
boberías. O sea, es de palo tener direcciones fe80:: aparte de las globales.</p>

<h4>¿y dnsmasq?</h4>

<p>Ese es otro que bien baila y con cualquier música. Tiene un SLAAC implementado
que es una maravilla. Al parámetro <strong>dhcp-range</strong> se le mandan unas clásulas
especiales que hacen maravillas. La que más me gusta es <strong>ra-names</strong> que asigna
una ip y un registro AAAA para máquina.</p>

<h4>que bolá con bind?</h4>

<p>Los registros del tipo AAAA resuelven punteros address para direcciones ipv6.</p>

<p>Sean:</p>

<ul>
<li> ns01 el nombre del servidor</li>
<li> ns01 registro A con ip 192.168.0.1</li>
<li> ns01 registro AAAA con ip 2001:db8::cafe</li>
<li> proxy registro CNAME que apunta a ns01</li>
</ul>


<p>Cuando preguntes por la ipv6 de proxy, resolverá 2001:db8::cafe, de esta manera,
el sistema operativo preguntará simplemente por &ldquo;proxy&rdquo; y el DNS le resolverá
ambas direcciones (4 y 6), la configuración de dichos stack, decidirá cual usar.</p>

<p>Esto en bind se escribe así:</p>

<figure class='code'><figcaption><span>&#8220;dominio.zone&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="p">;</span> El <span class="m">1</span> el proxy
</span><span class='line'>ns01         IN      A       192.168.0.1
</span><span class='line'>ns01         IN      AAAA    2001:db8::cafe
</span><span class='line'>             IN      MX  <span class="m">0</span>   ns01
</span><span class='line'>ruter        IN      CNAME   ns01
</span><span class='line'>proxy        IN      CNAME   ns01
</span></code></pre></td></tr></table></div></figure>


<p>Ejemplo vivo:</p>

<figure class='code'><figcaption><span>&#8220;ping ipv6 a un CNAME&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema ~<span class="o">]</span><span class="nv">$ </span>ping -6 proxy.hcg.sld.cu
</span><span class='line'>PING proxy.hcg.sld.cu<span class="o">(</span>ns01 <span class="o">(</span>2002:c9dc:d582::cafe<span class="o">))</span> <span class="m">56</span> data bytes
</span><span class='line'><span class="m">64</span> bytes from ns01 <span class="o">(</span>2002:c9dc:d582::cafe<span class="o">)</span>: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">1</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nb">time</span><span class="o">=</span>0.100 ms
</span><span class='line'><span class="m">64</span> bytes from ns01 <span class="o">(</span>2002:c9dc:d582::cafe<span class="o">)</span>: <span class="nv">icmp_seq</span><span class="o">=</span><span class="m">2</span> <span class="nv">ttl</span><span class="o">=</span><span class="m">64</span> <span class="nb">time</span><span class="o">=</span>0.174 ms
</span></code></pre></td></tr></table></div></figure>


<h3>¿Qué aprendimos?</h3>

<ul>
<li> 2001:db8:: es un rango reservado, no se usa</li>
<li> ipv6 es complejo pero no complicado.</li>
<li> hay un ip6tables aparte de iptables</li>
<li> ipv6 NO necesita nateo</li>
<li> que existen tecnologías transicionales como 6in4</li>
<li> no es DHCP, si no RA y SLAAC</li>
<li> no hay ARP, si no link-local</li>
<li> los punteros AAAA funcionan igualito que los A</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[la resolución 185/2016]]></title>
    <link href="http://uranio-235.github.io/blog/2016/10/22/ipv6/"/>
    <updated>2016-10-22T00:51:14-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/10/22/ipv6</id>
    <content type="html"><![CDATA[<p>El otro día, me doy por enterado que que lanzaron la resolución 185/2016 nada
menos que sobre la implementación de ipv6. Como todo en cuba; llega tarde pero
bien recibido. Me reí muchísimo cuando la leí. No con la ley, si no imaginándome
la puesta en vigor de la ley.</p>

<p>Me imaginé:</p>

<ul>
<li>la gente poniendo ipv6 en su LAN con el prefijo 2001:db8::</li>
<li>los cortafuegos sin configurar</li>
<li>los que no leen preguntando como hacer un forward o un nateo</li>
</ul>


<p>Y la mierda estaba por llover, cuando vi mi vaticinio materializándose ante mis
ojos.</p>

<h3>Podría ser este tu caso</h3>

<p>Luego de entablar un diálogo técnico, una persona a la que consideraba buena en
este asunto de los servidores y redes, me dice que implementó ipv6 hace como un
mes, pero que tenía &ldquo;un problema&rdquo;, ya que no lograba hacer un NAT para que el
servidor de correo dentro de la LAN, recibiera los correos desde afuera.</p>

<p>Cuando le dije que me mandara su cortafuegos, me dijo que no tenía un
cortafuegos aún para ipv6.</p>

<p>Me insistió que por favor le explicara <strong>cómo hacer el singao nateo</strong>.</p>

<p>Le pedí que me mostrara como tenía ipv6 desplegado y me dijo que la puerta de
enlace era 2001:db8::1 y el servidor de correo ::2</p>

<p>Llegado a ese punto, lo mandé a fumarse un peo, pero volvió a llamar; pasando
por alto el collar de insultos que le había puesto antes de tirar el teléfono.</p>

<h3>Sobre el &ldquo;nateo de ipv6&rdquo;</h3>

<p><strong>ipv6 NO lleva nateo. El nateo fue una solución que mandó a la mierda ipv6</strong></p>

<p>Si tienes una ip pública con máscara /64 es visible desde y hacia internet. O
sea, que si tu servidor de correo tiene una dirección como 2001:db8::2/64 <strong>YA
ES VISIBLE EN INTERNET</strong> y si no tienen cortafuegos pinguísimo <strong>aprepárate</strong>.</p>

<p>Más detalles en la siguiente entrada&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[driver broadcom]]></title>
    <link href="http://uranio-235.github.io/blog/2016/10/04/dirver-broadcom/"/>
    <updated>2016-10-04T14:53:41-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/10/04/dirver-broadcom</id>
    <content type="html"><![CDATA[<p>Cuando tienes un dispositivo inalámbrico de Broadcom, por lo general tienes un
bluetooth y una wifi. Me imagino que los broadcom modernos, tengan además dual
band (wifi de 5Ghz).</p>

<p>En la entrada anterior, mencioné que había adquirido unos audífonos bluetooth;
junto con él, un montón de nuevas resinguetas (como todo en archlinux). Resulta
que el driver opensource <strong>brcm80211</strong> no pinchaba bien del todo con el
bluetooth. Al punto que no podía alejarme ni un metro del dispositivo, además,
que el mero echo de moverme, hacía que el audio se cortara.</p>

<p>Usar el blob (driver propietario) parecía una variante atractiva, pero existe
el driver <strong>b43</strong> (QUE TAMBIÉN es opensource) y se jacta de ser creado con
ingeniería inversa. De un principio esto no me pareció algo atractivo; pero ya
lo había dicho el célebre comunistón Chino:</p>

<p>   <blockquote><p>Todo conocimiento auténtico nace de la experiencia directa</p><footer><strong>Mao Zedong</strong></footer></blockquote></p>

<p>Al parecer, el driver ya viene con el sistema, sin embargo, necesita un firmware
para poder levantar el hardware. Por suerte hay un paquete en <strong>AUR</strong> que hace
toda la pincha, se llama <strong>b43-firmware</strong></p>

<p>Tras instalarlo, hay que poner en la lista negra, el driver anterior, si no se
forma un reguero tremendo a la hora de cargar los driver y seleccionará el
opensource por defecto.</p>

<figure class='code'><figcaption><span>&#8220;/etc/modprobe.d/broadcom.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema ~<span class="o">]</span><span class="nv">$ </span>cat /etc/modprobe.d/broadcom.conf
</span><span class='line'>blacklist brcmsmac
</span><span class='line'>b43
</span></code></pre></td></tr></table></div></figure>


<p>Por si las moscas, ejecuta:</p>

<figure class='code'><figcaption><span>&#8220;depmod&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span><span class="c"># depmod -a</span>
</span></code></pre></td></tr></table></div></figure>


<p>y reinicia</p>

<h3>Ahora, la comparación:</h3>

<h4>brcm80211</h4>

<p>La wifi pincha DE PINGA. Dentro de la banda de los 2.4Ghz, hace de todo, desde
AP (modo master) hasta la dichosa autenticación WPA2. Soporta incluso survey.
<strong>PERO</strong> el bluetooth pincha de asco. Se desaparece cuando lo usas más de 20
minutos, diciendo que un dispositivo USB fue desconectado.</p>

<h4>broadcom-wl</h4>

<p>Sin dudas, el driver propietario es una seda, dice que habilita los canales de
5Ghz pero es mentira. El bluetooth pincha de maravilla, sobre todo en lo
referente a calidad de audio <strong>PERO</strong> cada vez que cambias de kernel el driver
debe recompilarse y suele fallar (eso dicen). En tal caso, reinstalar el driver
es una solución. Además, te recuerdo que <strong>no es de código abierto</strong>. Sabe dios
que backdoor te mete dentro del kernel. En cuanto a las prestaciones de la wifi,
hay unas cuantas pérdidas: No puede autenticar con WPA2 y no soporta modo
master. Tampoco el survey parece pinchar.</p>

<h4>b43</h4>

<p>La wifi, tiene las mismas prestaciones que el propietario. El bluetooth funciona
excelente. La wifi se porta muy bien los primeros días. <strong>PERO</strong> El día que
amanezca con el moño virao la wifi se desparece, corriendo depmod AVEEECEES
aparece. O sea, la mismas miserias del propietario, pero con la aleatoria
posibilidad de que amanezcas sin wifi.</p>

<p>Al final, fui a un taller, di 5 pesos mi tarjeta y adquirí una Atheros&hellip;
Solución PERFECTA.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[audífonos blutú]]></title>
    <link href="http://uranio-235.github.io/blog/2016/09/22/audifonos-blutu/"/>
    <updated>2016-09-22T17:39:04-04:00</updated>
    <id>http://uranio-235.github.io/blog/2016/09/22/audifonos-blutu</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://uranio-235.github.io/images/audifonos_blutu.png" width="400"></p>

<p>Más por embullo que por necesidad, me he comprado uno de esos audífonos
Bluetooth que se usan ahora. Estoy pasando un trabajo tremendo para adaptarme a
tener la morronga esa en el cuello. Como si fuera poco, archlinux no me perdonó
y me hizo de las suyas.</p>

<p>Al conectarlos se escuchaban horrible y se desaparecía el bluetooth.</p>

<p>Según me dijeron en el #archlinux de freenode. Se debe a que los audífonos se
conecta como micrófonos/audífonos y no como audífonos solamente. Para ellos
había que cambiarlos al modo A2DP.</p>

<p>El comando <strong>pacmd set-card-profile 2 a2dp_sink</strong> resuelve el problema. Pero
tener que correr el comando cada vez que los conecte, no me parece; no me da tan
fuerte todavía&hellip;</p>

<p>El gestor de audio de gnome supuestamente cambia el modo. Pero resulta que el
puto <strong>pulse-audio</strong>, si arranca con GDM, forma una cagazón con los permisos ahí
y no cambia de modo.</p>

<p>Para evitar eso, creas un fichero llamado
<strong>/var/lib/gdm/.config/pulse/client.conf</strong> donde le declaras que no arrancará
pulse-audio con gnome:</p>

<figure class='code'><figcaption><span>&#8220;/var/lib/gdm/.config/pulse/client.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">autospawn</span> <span class="o">=</span> no
</span><span class='line'>daemon-binary <span class="o">=</span> /bin/true
</span></code></pre></td></tr></table></div></figure>


<p>Pero eso no lo es todo. Si pulseaudio arranca con socket, se joden los
audifonitos. Supuestamente creando una configuración, se deshabilita el socket,
pero no pincha. Hay que deshabilitarlo con systemd. Ejecuta esto <strong>como root</strong>:</p>

<figure class='code'><figcaption><span>&#8220;sin socket plis&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span> mkdir -p /var/lib/gdm/.config/systemd/user
</span><span class='line'><span class="o">[</span>root@artema ~<span class="o">]</span> ln -s /dev/null /var/lib/gdm/.config/systemd/user/pulseaudio.socket
</span></code></pre></td></tr></table></div></figure>


<p>Reinicia y al conectar los audífonos; y, al hacerle click al dipositivo, debe
darte una opción que conduce a la configuración de audio. Ahí mismo cambias el
modo y seleccionas el dispositivo de salida de audio por defecto.</p>

<p>Otra cuestión es que pulseaudio use los audífonos como salida de audio por
defecto al conectarlos. Finalmente decidí pasar mis configuraciones de
pulseaudio al directorio de usuario:</p>

<figure class='code'><figcaption><span>&#8220;pulseudio en el home&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/.config/pulse/
</span><span class='line'>cp -ruv /etc/pulse/ ~/.config/pulse/
</span></code></pre></td></tr></table></div></figure>


<p>Localiza el fichero <strong>~/.config/pulse/default.pa</strong> y al final añadele esto:</p>

<figure class='code'><figcaption><span>&#8220;default.pa&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>lazaro@artema pulse<span class="o">]</span><span class="nv">$ </span>tail -4 ~/.config/pulse/default.pa
</span><span class='line'>
</span><span class='line'><span class="c"># file:///usr/share/doc/arch-wiki/html/en/PulseAudio/Troubleshooting.html#Bluetooth</span>
</span><span class='line'><span class="c"># automatically switch to newly-connected devices</span>
</span><span class='line'>load-module module-switch-on-connect
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
