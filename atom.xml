<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[El SysAdmin del 3er Mundo]]></title>
  <link href="http://uranio-235.github.io/atom.xml" rel="self"/>
  <link href="http://uranio-235.github.io/"/>
  <updated>2017-09-02T12:33:14-04:00</updated>
  <id>http://uranio-235.github.io/</id>
  <author>
    <name><![CDATA[låzaro]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[daloradius y sus amigos]]></title>
    <link href="http://uranio-235.github.io/blog/2017/09/01/daloradius-y-sus-amigos/"/>
    <updated>2017-09-01T18:59:56-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/09/01/daloradius-y-sus-amigos</id>
    <content type="html"><![CDATA[<p>En un tutorial anterior, examinábamos como funcionaba radius. Mencionábamos que
Radius, podría funcional usando MySQL (y otros sql) como backendcore. Finalmente
un cliente necesitó una solución de capa completa y he aquí; la prometida
expansión del mencionado artículo.</p>

<p><img class="center" src="http://uranio-235.github.io/images/daloradius.png" title="&#34;Así luce daloradius&#34;" alt="&#34;Así luce daloradius&#34;"></p>

<p>Claramente, no basta con que radius sea la mar de versátil, requerimos además;
una herramienta lo suficientemente digna de manipular 500 o 1&#8217;000 usuarios y esa
herramienta es <strong>daloradius</strong>.</p>

<p>Daloradius es una interfaz web, no solo linda, si no, lo suficientemente
funcionar como para sacarle el jugo a freeradius. Permite además, hacer
operaciones predefinidas muy buenas para cosas como hotspot, etc&hellip; Lo más
especial en mi opinión es el sistema de contabilidad. Muy bueno para cuotas.</p>

<p>En fin, instalamos el software necesario.</p>

<figure class='code'><figcaption><span>&#8220;instalar las cosas&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [root@radius ~]# yum update</span>
</span><span class='line'><span class="go"> [root@radius ~]# yum install -y epel-release</span>
</span><span class='line'><span class="go"> [root@radius ~]# yum install -y mariadb-server mariadb freeradius freeradius-mysql freeradius-utils</span>
</span></code></pre></td></tr></table></div></figure>


<p>Primero y principioso, hay que configurar el servidor de MySQL, o sea,
inicializarlo.</p>

<figure class='code'><figcaption><span>&#8220;instalar las cosas&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> mysql_secure_installation</span>
</span></code></pre></td></tr></table></div></figure>


<p>Una vez que tenemos el servidor sql listo, procedemos a crear la base de datos.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">mysql -uroot -p</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>&#8220;creando base de datos&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">radius</span><span class="p">;</span>
</span><span class='line'><span class="k">GRANT</span> <span class="k">ALL</span> <span class="k">PRIVILEGES</span> <span class="k">ON</span> <span class="n">radius</span><span class="p">.</span><span class="o">*</span> <span class="k">TO</span> <span class="n">radius</span><span class="o">@</span><span class="n">localhost</span> <span class="n">IDENTIFIED</span> <span class="k">BY</span> <span class="ss">&quot;secreto&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Lamentablemente freeradius no tiene un instalador. Así que hay que llenar la
base de datos manualmente.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">mysql -u root -p radius &lt; /etc/raddb/mods-config/sql/main/mysql/schema.sql</span>
</span></code></pre></td></tr></table></div></figure>


<p>Habilitamos el módulo de SQL para freeradius</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">ln -s /etc/raddb/mods-available/sql /etc/raddb/mods-enabled</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora vamos a editar una serie de parámetros de radius. Para ello nos dirigimos
al directorio <strong>/etc/raddb/</strong> ya que allí hay unos cuantos ficheros que
modificaremos.</p>

<p>En el fichero <strong>radiusd.conf</strong> vamos a hacer unos cuantos cambios así que
<strong>atentos</strong>.</p>

<p>Para empezar, localiza la sesión que carga los módulos, debe quedar así.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">modules</span> <span class="p">{</span>
</span><span class='line'>   <span class="nx">$INCLUDE</span> <span class="nx">mods</span><span class="o">-</span><span class="nx">enabled</span><span class="o">/</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como habrá notado, la estructura de los directorio de configuración de radius,
se de un aire a la de apache en debian. La configuración como tal, se parece más
a nginx.</p>

<p>Como vimos, radius es muy modular. Puede usar numerosos backendcores, entre
ellos sql. En el fichero <strong>sites-available/default</strong> modificaremos ciertos
parámetros para que TODO funcione contra SQL.</p>

<p>Localizaremos las sesiones, <strong>authorize</strong>, <strong>accounting</strong>, <strong>session</strong>,
<strong>post-auth</strong>, <strong>Post-Auth-Type REJECT</strong>.</p>

<p>Más o menos el fichero luciría así:</p>

<figure class='code'><figcaption><span>&#8220;scope del default&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">authorize</span> <span class="p">{</span>
</span><span class='line'>   <span class="p">...</span>
</span><span class='line'>   <span class="nx">sql</span>
</span><span class='line'>   <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">accounting</span> <span class="p">{</span>
</span><span class='line'>   <span class="p">...</span>
</span><span class='line'>   <span class="nx">sql</span>
</span><span class='line'>   <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">session</span> <span class="p">{</span>
</span><span class='line'>   <span class="p">...</span>
</span><span class='line'>   <span class="nx">sql</span>
</span><span class='line'>   <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">post</span><span class="o">-</span><span class="nx">auth</span> <span class="p">{</span>
</span><span class='line'>   <span class="p">...</span>
</span><span class='line'>   <span class="nx">sql</span>
</span><span class='line'>   <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Post</span><span class="o">-</span><span class="nx">Auth</span><span class="o">-</span><span class="nx">Type</span> <span class="nx">REJECT</span> <span class="p">{</span>
</span><span class='line'>   <span class="p">...</span>
</span><span class='line'>   <span class="nx">sql</span>
</span><span class='line'>   <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya dijimos que usaremos sql, así que tenemos que configurar la conexión a dicha
base de datos. El fichero <strong>mods-available/sql</strong> contiene dicha configuración. A
mi me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;sql&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">sql</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>   <span class="nx">driver</span> <span class="o">=</span> <span class="s2">&quot;rlm_sql_mysql&quot;</span>
</span><span class='line'>  <span class="nx">dialect</span> <span class="o">=</span> <span class="s2">&quot;mysql&quot;</span>
</span><span class='line'>  <span class="nx">server</span> <span class="o">=</span> <span class="s2">&quot;localhost&quot;</span>
</span><span class='line'>  <span class="nx">port</span> <span class="o">=</span> <span class="mi">3306</span>
</span><span class='line'>  <span class="nx">login</span> <span class="o">=</span> <span class="s2">&quot;root&quot;</span>
</span><span class='line'>  <span class="nx">password</span> <span class="o">=</span> <span class="s2">&quot;secreto&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">radius_db</span> <span class="o">=</span> <span class="s2">&quot;radius&quot;</span>
</span><span class='line'>  <span class="nx">acct_table1</span> <span class="o">=</span> <span class="s2">&quot;radacct&quot;</span>
</span><span class='line'>  <span class="nx">acct_table2</span> <span class="o">=</span> <span class="s2">&quot;radacct&quot;</span>
</span><span class='line'>  <span class="nx">postauth_table</span> <span class="o">=</span> <span class="s2">&quot;radpostauth&quot;</span>
</span><span class='line'>  <span class="nx">authcheck_table</span> <span class="o">=</span> <span class="s2">&quot;radcheck&quot;</span>
</span><span class='line'>  <span class="nx">groupcheck_table</span> <span class="o">=</span> <span class="s2">&quot;radgroupcheck&quot;</span>
</span><span class='line'>  <span class="nx">authreply_table</span> <span class="o">=</span> <span class="s2">&quot;radreply&quot;</span>
</span><span class='line'>  <span class="nx">groupreply_table</span> <span class="o">=</span> <span class="s2">&quot;radgroupreply&quot;</span>
</span><span class='line'>  <span class="nx">usergroup_table</span> <span class="o">=</span> <span class="s2">&quot;radusergroup&quot;</span>
</span><span class='line'>  <span class="nx">delete_stale_sessions</span> <span class="o">=</span> <span class="nx">yes</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">pool</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">start</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'>      <span class="nx">min</span> <span class="o">=</span> <span class="mi">4</span>
</span><span class='line'>      <span class="nx">max</span> <span class="o">=</span> <span class="nx">$</span><span class="p">{</span><span class="nx">thread</span><span class="p">[</span><span class="nx">pool</span><span class="p">].</span><span class="nx">max_servers</span><span class="p">}</span>
</span><span class='line'>      <span class="nx">spare</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'>      <span class="nx">uses</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="nx">lifetime</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="nx">idle_timeout</span> <span class="o">=</span> <span class="mi">60</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">read_clients</span> <span class="o">=</span> <span class="nx">yes</span>
</span><span class='line'>  <span class="nx">client_table</span> <span class="o">=</span> <span class="s2">&quot;nas&quot;</span>
</span><span class='line'>  <span class="nx">$INCLUDE</span> <span class="nx">$</span><span class="p">{</span><span class="nx">modconfdir</span><span class="p">}</span><span class="o">/</span><span class="nx">$</span><span class="p">{.</span><span class="o">:</span><span class="nx">name</span><span class="p">}</span><span class="o">/</span><span class="nx">main</span><span class="o">/</span><span class="nx">$</span><span class="p">{</span><span class="nx">dialect</span><span class="p">}</span><span class="o">/</span><span class="nx">queries</span><span class="p">.</span><span class="nx">conf</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finalmente probamos la configuración de radius.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> radiusd -X</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora la guinda del pastel, el <strong>daloradius</strong>. Primero instalamos una
dependencias requeridas.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">yum install epel-release</span>
</span><span class='line'><span class="go">yum install php-mysql php php-pear php-gd php-pear-DB</span>
</span></code></pre></td></tr></table></div></figure>


<p>Los clásico, descargar e instalar daloradius.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> wget http://sourceforge.net/projects/daloradius/files/latest/download?source=files</span>
</span><span class='line'><span class="go"> tar zxvf download?source=files</span>
</span><span class='line'><span class="go"> mv daloradius-0.9-9/* /var/www/html/</span>
</span><span class='line'><span class="go"> chown -R nginx:nginx /var/www/html/</span>
</span><span class='line'><span class="go"> chmod -R o+rxw /vat/www/html/</span>
</span></code></pre></td></tr></table></div></figure>


<p>En el presente tutorial, asumimos que ya tienes una LEMP instalada&hellip;</p>

<p>Otro que no tiene configuración es daloradius, así que debes setear los
parámetros manualmente. El fichero de configuración se llama
<strong>library/daloradius.conf.php</strong>. De los parámetros, los que más nos interesan
son.</p>

<figure class='code'><figcaption><span>&#8220;library/daloradius.conf.php&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'> <span class="nv">$configValues</span><span class="p">[</span><span class="s1">&#39;DALORADIUS_VERSION&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;0.9-9&#39;</span><span class="p">;</span>
</span><span class='line'> <span class="nv">$configValues</span><span class="p">[</span><span class="s1">&#39;FREERADIUS_VERSION&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;3&#39;</span><span class="p">;</span>
</span><span class='line'> <span class="nv">$configValues</span><span class="p">[</span><span class="s1">&#39;CONFIG_DB_ENGINE&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;mysql&#39;</span><span class="p">;</span>
</span><span class='line'> <span class="nv">$configValues</span><span class="p">[</span><span class="s1">&#39;CONFIG_DB_HOST&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span><span class="p">;</span>
</span><span class='line'> <span class="nv">$configValues</span><span class="p">[</span><span class="s1">&#39;CONFIG_DB_USER&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;radius&#39;</span><span class="p">;</span>
</span><span class='line'> <span class="nv">$configValues</span><span class="p">[</span><span class="s1">&#39;CONFIG_DB_PASS&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;secreto&#39;</span><span class="p">;</span>
</span><span class='line'> <span class="nv">$configValues</span><span class="p">[</span><span class="s1">&#39;CONFIG_DB_NAME&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;radius&#39;</span><span class="p">;</span>
</span><span class='line'> <span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>Al igual que con freeradius, tenemos que inicializar la base de datos
manualmente, ya que como mencioné, daloradius no tiene instalador. Ojo, que la
línea es larga.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">mysql -u root -p radius &lt; /var/www/html/contrib/db/fr2-mysql-daloradius-and-freeradius.sql</span>
</span></code></pre></td></tr></table></div></figure>


<p>El usuario del loguearte la primera vez es <strong>administrator</strong> y la contraseña
<strong>radius</strong>.</p>

<p>Bueno, ahora puede empezar a crear usuarios&hellip;</p>

<p>Puedes configurar el squid para que se autentique mediante radius, la linea del
autenticador queda más o menos así:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> /usr/lib64/squid/basic_radius_auth -h 127.0.0.1 -w testing123</span>
</span></code></pre></td></tr></table></div></figure>


<p>En este presunto caso, el squid y el radius, están instalados en el mismo
servidor. Pero si quieres que otro host se conecte, debes declararlo en el
fichero <strong>/etc/raddb/clients.conf</strong>. De otra forma, todo el que pida
autenticación; será deliberadamente denegada. Coloca la configuración encima de
la del localhost.</p>

<figure class='code'><figcaption><span>&#8220;/etc/raddb/clients.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">client</span> <span class="nx">mi_servidor</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ipaddr</span> <span class="o">=</span> <span class="mf">192.168</span><span class="p">.</span><span class="mf">1.10</span><span class="o">/</span><span class="mi">24</span>
</span><span class='line'>  <span class="nx">secret</span> <span class="o">=</span> <span class="nx">misecerto</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">client</span> <span class="nx">localhost</span> <span class="p">{</span>
</span><span class='line'>   <span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>Sucesivamente, puedes tener declarado cuantos host quieras y cada uno tiene
parámetros individuales, por ejemplo, al host <strong>mi_servidor</strong>, se le cambió el
<strong>secret</strong>.</p>

<p>Así sucesivamente puede configurar los AP, le declaramos la autenticación WPA2.
Para que tenga una idea, esto sería una configuración de hostapd.</p>

<figure class='code'><figcaption><span>&#8220;/etc/hostapd/hostapd.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="na">ssid</span><span class="o">=</span><span class="s">MiAP</span>
</span><span class='line'><span class="na">interface</span><span class="o">=</span><span class="s">wlp2s0</span>
</span><span class='line'><span class="na">driver</span><span class="o">=</span><span class="s">nl80211</span>
</span><span class='line'><span class="na">ieee8021x</span><span class="o">=</span><span class="s">1</span>
</span><span class='line'><span class="na">hw_mode</span><span class="o">=</span><span class="s">g</span>
</span><span class='line'><span class="na">channel</span><span class="o">=</span><span class="s">9</span>
</span><span class='line'><span class="na">wpa</span><span class="o">=</span><span class="s">2</span>
</span><span class='line'><span class="na">wpa_key_mgmt</span><span class="o">=</span><span class="s">WPA-EAP</span>
</span><span class='line'><span class="na">rsn_pairwise</span><span class="o">=</span><span class="s">CCMP</span>
</span><span class='line'><span class="na">auth_algs</span><span class="o">=</span><span class="s">1</span>
</span><span class='line'><span class="na">auth_server_addr</span><span class="o">=</span><span class="s">127.0.0.1</span>
</span><span class='line'><span class="na">auth_server_port</span><span class="o">=</span><span class="s">1812</span>
</span><span class='line'><span class="na">auth_server_shared_secret</span><span class="o">=</span><span class="s">testing123</span>
</span></code></pre></td></tr></table></div></figure>


<p>Por ejemplo, así quedaría un DDWRT, usando autenticación WPA2 contra radius.</p>

<p><img class="center" src="http://uranio-235.github.io/images/ddwrt_radius.png" title="&#34;un ddwrt acoplado a un radius&#34;" alt="&#34;un ddwrt acoplado a un radius&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[odoo en centos7]]></title>
    <link href="http://uranio-235.github.io/blog/2017/08/14/odoo-en-centos7/"/>
    <updated>2017-08-14T21:19:54-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/08/14/odoo-en-centos7</id>
    <content type="html"><![CDATA[<p>Odoo, el sucesor de openerp; un software muy versátil, con funcionalidades para
manejar cualquier negocio (ERP). En mi caso; lo uso para manejar facturación y
la contabilidad de mi negocio. Recién me vi obligado a reinstalarlo pero resulta
que los <strong>.deb</strong> están mirando pa debian8, por tanto, decidí instalarlo en
centos7. Además estoy cada día más peleado con debian.</p>

<p>Como mi laptop no virtualiza, tengo centos7 en un contenedor de LXC. Esto me
resulta más confiable que docker, ya que he tenido muy malas experiencias
linkando el container de postgres con el de odoo. Eso sin contar que systemd no
pincha en un container, al menos no sin levantarlo desde el init y privilegiado;
tal como funciona LXC. Claro, hacer un script que corra todo en el container sin
necesidad de systemd es una solución; pero el hecho de tener múltiples distros
corriendo, me resulta más emocionante que los &ldquo;contenedores&rdquo;.</p>

<p>Vamos a necesitar unas cuantas cosas del repo EPEL y un servidor de postgresql
operacional.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> yum install -y epel-release</span>
</span><span class='line'><span class="go"> yum update</span>
</span><span class='line'><span class="go"> yum install -y postgresql-server</span>
</span></code></pre></td></tr></table></div></figure>


<p>Inicializamos el servidor de postgresql</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> postgresql-setup initdb</span>
</span><span class='line'><span class="go"> systemctl start postgresql</span>
</span><span class='line'><span class="go"> systemctl enable postgresql</span>
</span></code></pre></td></tr></table></div></figure>


<p>Creamos un repositorio para odoo, a mi me quedó así</p>

<figure class='code'><figcaption><span>&#8220;/etc/yum.repos.d/odoo.repo&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'> <span class="k">[odoo-nightly]</span>
</span><span class='line'> <span class="na">name</span><span class="o">=</span><span class="s">Odoo Nightly repository</span>
</span><span class='line'><span class="s"> baseurl=http://nightly.odoo.com/10.0/nightly/rpm/</span>
</span><span class='line'><span class="s"> enabled=1</span>
</span><span class='line'><span class="s"> gpgcheck=1</span>
</span><span class='line'><span class="s"> gpgkey=https://nightly.odoo.com/odoo.key</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora vamos a la parte más compleja de la película. Resulta que odoo requiere
wkhtmltopdf para funcionar y debe machear la versión de odoo con la versión de
wkhtml. Para la 9.0, usaremos wkhtmltopdf <strong>0.12</strong>. Según advierten en la guía
de instalación de odoo, el paquete de wkhtmltopdf que provee centos, no soporta
header y footer, así que te dicen que lo descargues del sitio web oficial. Ahí
aparece solo un <strong>.tar.gz</strong> pero siempre hay un <strong>rpm</strong> escondido abajo de una
piedra:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">yum install -y fontconfig libpng libX11 libXext libXrender xorg-x11-fonts-Type1 xorg-x11-fonts-75dpi</span>
</span><span class='line'><span class="go">rpm -Uvh https://downloads.wkhtmltopdf.org/0.12/0.12.2.1/wkhtmltox-0.12.2.1_linux-centos7-amd64.rpm</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finalmente, instalamos odoo.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> yum install -y odoo</span>
</span><span class='line'><span class="go"> systemctl enable odoo</span>
</span><span class='line'><span class="go"> systemctl start odoo</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[yum estrecho]]></title>
    <link href="http://uranio-235.github.io/blog/2017/08/13/yum-estrecho/"/>
    <updated>2017-08-13T16:36:12-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/08/13/yum-estrecho</id>
    <content type="html"><![CDATA[<p>Si en algo me destaco, es en mi habilidad por trabajar con espacios estrechos
(poca RAM, poco espacio en disco, etc&hellip;)</p>

<p>Cuando tenemos un servidor con CentOS, aveces no queremos más de las mil cosas
que una completa instalación involucra. Por ejemplo, las páginas de man en una
pila de idiomas, el contenido de /usr/share/doc/, etc&hellip; Si bien actualmente uso
un script para eliminar todo eso, lo cierto es que sería mucho más fácil si
nunca se desplegaran esos archivos.</p>

<p>Gracias a <strong>yum-config-manager</strong> no hay que estar cargando con el fichero de
configuración, simplemente se puede hacer un script que setee dichas
configuraciones.</p>

<p>Esta es la secuencia de comando que le tiro en un yum virgen:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> yum-config-manager --save --setopt assumeyes=true</span>
</span><span class='line'><span class="go"> yum-config-manager --save --setopt tsflags=nodocs</span>
</span><span class='line'><span class="go"> yum-config-manager --save --setopt override_install_langs=en</span>
</span><span class='line'><span class="go"> yum-config-manager --save --setopt clean_requirements_on_remove</span>
</span></code></pre></td></tr></table></div></figure>


<p>Al correr <strong>yum-config-manager</strong> puedes ver todas las opciones que este brinda.
Lo demás sería buscar la documentación.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LEMP en debian]]></title>
    <link href="http://uranio-235.github.io/blog/2017/07/23/lemp-en-debian/"/>
    <updated>2017-07-23T15:19:47-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/07/23/lemp-en-debian</id>
    <content type="html"><![CDATA[<p>Resulta que <em>&ldquo;linux, apache, mysql y php&rdquo;</em>, solía llamarse L<strong>A</strong>MP. Ahora,
cuando cambian apache por ningx le llaman L<strong>E</strong>MP no se por qué (y no quiero
averiguarlo, la moda me enferma).</p>

<p>En debian 9, la rima de php con nignx cambia un poquito. No hay que ser un genio
para darse cuento que cosas como <em>php5</em> ahora son <em>php7</em>, pero como para mi este
blog es un sitio donde escribo el código para luego copiar y pegar, pondré como
hacerlo en el &ldquo;debian nuevo&rdquo;.</p>

<p>Vamos a empezar de atrás pa alante; el MySQL</p>

<figure class='code'><figcaption><span>&#8220;instalando sql y compañía&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> root@299c0ecdbedc:~# apt install mysql-server</span>
</span></code></pre></td></tr></table></div></figure>


<p>Uno de los cabezazos más grandes que me dí con debian 9 fue la configuración del
SQL. Ya no es asistido como antes. Así que vamos a correr un par de comandos.</p>

<figure class='code'><figcaption><span>&#8220;configurando mysql&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> root@299c0ecdbedc:~# mysql_install_db</span>
</span><span class='line'><span class="go"> root@299c0ecdbedc:~# mysql_secure_installation</span>
</span></code></pre></td></tr></table></div></figure>


<p>Al correr el segundo te saldrán unas cuantas preguntas. Respóndelas a tu gusto y
necesidad.</p>

<p>Ahora bien, conectar lo que No sea por el socket, se vuelve una jodienda. Por
ejemplo root@localhost suele no estar autorizado; si esto se interpreta como
127.0.0.1</p>

<p>Ejecuta: <strong>mysql -u root</strong> o con <strong>-p</strong> si seleccionaste tener password.</p>

<p>Veamos por ejemplo, que creamos el usuario <strong>admin</strong> para la base de datos
<strong>misdatos</strong>.</p>

<figure class='code'><figcaption><span>&#8220;creando «admin»&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">misdatos</span><span class="p">;</span>
</span><span class='line'><span class="k">CREATE</span> <span class="k">USER</span> <span class="s1">&#39;admin&#39;</span><span class="o">@</span><span class="s1">&#39;%&#39;</span> <span class="n">IDENTIFIED</span> <span class="k">BY</span> <span class="s1">&#39;secretisimo&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">GRANT</span> <span class="k">ALL</span> <span class="k">PRIVILEGES</span> <span class="k">ON</span> <span class="n">misdatos</span><span class="p">.</span><span class="o">*</span> <span class="k">TO</span> <span class="s1">&#39;admin&#39;</span><span class="o">@</span><span class="s1">&#39;%&#39;</span><span class="p">;</span>
</span><span class='line'><span class="n">FLUSH</span> <span class="k">PRIVILEGES</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Si quieres saber los usuarios ejecuta la sentencia:</p>

<figure class='code'><figcaption><span>&#8220;ver los usuarios&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'> <span class="k">SELECT</span> <span class="k">User</span><span class="p">,</span><span class="k">Host</span><span class="p">,</span><span class="n">Password</span> <span class="k">FROM</span> <span class="n">mysql</span><span class="p">.</span><span class="k">user</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bueno ya tenemos el SQL corriendo. Vamos pal resto</p>

<figure class='code'><figcaption><span>&#8220;instalando cosas&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">apt install nginx mysql-client php-fpm php-mysql libfcgi0ldbl</span>
</span></code></pre></td></tr></table></div></figure>


<p>Una vez que se instale <strong>php-fpm</strong> lo echamos a andar y lo probamos.</p>

<figure class='code'><figcaption><span>&#8220;probando fpm&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">root@299c0ecdbedc:~#</span> /etc/init.d/php7.0-fpm restart
</span><span class='line'><span class="gp">root@299c0ecdbedc:~#</span> cgi-fcgi -bind -connect /run/php/php7.0-fpm.sock
</span><span class='line'><span class="go">Content-type: text/html; charset=UTF-8</span>
</span></code></pre></td></tr></table></div></figure>


<p>Al virtualhost de nginx, le hacemos unos arreglitos; para que nginx tire el php
por fastcgi. Que ricura debian, tan solo incluyendo un snippet todo se resuelve.</p>

<figure class='code'><figcaption><span>&#8220;/etc/nginx/sites-available/default&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">server</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">listen</span> <span class="mi">80</span> <span class="nx">default_server</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">root</span> <span class="o">/</span><span class="kd">var</span><span class="err">/www/html;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">index</span> <span class="nx">index</span><span class="p">.</span><span class="nx">php</span> <span class="nx">index</span><span class="p">.</span><span class="nx">html</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">server_name</span> <span class="nx">_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">location</span> <span class="o">/</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">try_files</span> <span class="nx">$uri</span> <span class="nx">$uri</span><span class="o">/</span> <span class="o">=</span><span class="mi">404</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">location</span> <span class="o">~</span> <span class="err">\</span><span class="p">.</span><span class="nx">php$</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">include</span> <span class="nx">snippets</span><span class="o">/</span><span class="nx">fastcgi</span><span class="o">-</span><span class="nx">php</span><span class="p">.</span><span class="nx">conf</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">fastcgi_pass</span> <span class="nx">unix</span><span class="o">:</span><span class="err">/var/run/php/php7.0-fpm.sock;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reinicia nginx!</p>

<p>Pa probar que todo está pinchando, creamos un script que llame la función
<strong>phpinfo()</strong></p>

<figure class='code'><figcaption><span>&#8220;phpinfo()&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> root@299c0ecdbedc:~# /etc/init.d/nginx restart</span>
</span><span class='line'><span class="go"> root@299c0ecdbedc:~# /etc/init.d/php7.0-fpm restart</span>
</span><span class='line'><span class="go"> root@299c0ecdbedc:~# /etc/init.d/mysql restart</span>
</span><span class='line'><span class="go"> root@299c0ecdbedc:~# echo &#39;&lt;?php phpinfo(); ?&gt;&#39; &gt; /var/www/html/index.php</span>
</span></code></pre></td></tr></table></div></figure>


<p>Debes poder ver la típica página que produce <strong>phpinfo()</strong></p>

<p>Para probar la base de datos, creas un script de php que inicialice mysqli:</p>

<figure class='code'><figcaption><span>&#8221;&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$misql</span> <span class="o">=</span> <span class="nb">mysqli_connect</span><span class="p">(</span><span class="s1">&#39;127.0.0.1&#39;</span><span class="p">,</span> <span class="s1">&#39;admin&#39;</span><span class="p">,</span> <span class="s1">&#39;ok&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$misql</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">die</span><span class="p">(</span><span class="s1">&#39;esto no pincha: &#39;</span> <span class="o">.</span> <span class="nx">mysqli_error</span><span class="p">());</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">echo</span> <span class="s1">&#39;Conexion satisfactoria&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nx">mysqli_close</span><span class="p">(</span><span class="nv">$misql</span><span class="p">);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Puedes correr ese script con php o llamarlo con el navegador. El resultado es
bastante obvio.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[repos EPEL y demás]]></title>
    <link href="http://uranio-235.github.io/blog/2017/06/29/repos-epel-y-demas/"/>
    <updated>2017-06-29T02:15:03-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/06/29/repos-epel-y-demas</id>
    <content type="html"><![CDATA[<p>CentOS, es conocido por sus reducidos repositorios. Pero por suerte, los repos
EPEL (enterprise linux) y el IUS nos permiten bandearnos un poco. Además,
tenemos el Remi, tan fresco como explosivo, que si bien no es muy recomendable
usarlo, nunca está de más tenerlo a mano. Si algo tiene lindo <em>yum</em> es la
gestión de repositorios.</p>

<p>Instala <strong>wget</strong>&hellip; vamos a necesitarlo.</p>

<p>Para los criticones: -sí, ya se que el epel está en el repo oficial, pero para
este ejemplo lo añadiremos desde la web.</p>

<figure class='code'><figcaption><span>&#8220;añadiendo el EPEL&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span>
</span><span class='line'><span class="go"> rpm -Uvh epel-release-latest-7*.rpm</span>
</span></code></pre></td></tr></table></div></figure>


<p>El IUS es majomenos la misma historia</p>

<figure class='code'><figcaption><span>&#8220;añadiendo el IUS</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> wget https://centos7.iuscommunity.org/ius-release.rpm</span>
</span><span class='line'><span class="go"> rpm -Uvh ius-release*.rpm</span>
</span></code></pre></td></tr></table></div></figure>


<p>El repo IUS, suele contener paquetes más recientes de cosas que ya centos trae.
La mejor manera de instalar esto, es usando un plugin de yum, llamado «replace»,
así que instala el paquete <strong>yum-plugin-replace</strong>.</p>

<p>Ahora busca el paquete que deseeas en el repo IUS:</p>

<figure class='code'><figcaption><span>&#8220;buscando en el IUS&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> yum --disablerepo=&quot;*&quot; --enablerepo=&quot;ius&quot; search talcosa</span>
</span></code></pre></td></tr></table></div></figure>


<p>Luego remplaza el paquete <em>talcosa</em> de CentOS, por el <em>talcosa3u</em> de IUS</p>

<figure class='code'><figcaption><span>&#8220;remplazando paquete&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> yum replace talcosa --replace-with talcosa3u</span>
</span></code></pre></td></tr></table></div></figure>


<p>Para más detalles, échale un vistazo a <a href="https://ius.io/Usage/">el user-guide de IUS</a></p>

<p>El repositorio Remi es aún más peligroso, ya que los paquetes tienen el mismo
nombre que el de los oficiales. Se recomienda no tener el repo remi activado NI
JUGANDO.</p>

<p>La instalación es la misma rutina</p>

<figure class='code'><figcaption><span>&#8220;instalando Remi&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> wget http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</span>
</span><span class='line'><span class="go"> rpm -Uvh remi-release-7*.rpm</span>
</span></code></pre></td></tr></table></div></figure>


<p>Otro repo bueno, es el de alcancelibre, que provee sarg.</p>

<figure class='code'><figcaption><span>&#8220;alcancelibre&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">wget -N http://www.alcancelibre.org/al/server/AL-Server.repo \</span>
</span><span class='line'><span class="go">-O /etc/yum.repos.d/AL-Server.repo</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Luego usamos el mismo proceder, buscar en repo específico.</p>

<figure class='code'><figcaption><span>&#8220;buscando paquetes&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">yum --enablerepo=remi search fulanito</span>
</span><span class='line'><span class="go">yum --enablerepo=remi install fulanito</span>
</span></code></pre></td></tr></table></div></figure>


<p>El comando <em>repolist</em> permite ver los repositorios en juego. Para ver los repos
que tienes acoplados, usa <strong>yum repolist</strong>. Si quieres ver que repo tienes
deshabilitados, usa <strong>yum repolist disabled</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[knockd en centos]]></title>
    <link href="http://uranio-235.github.io/blog/2017/06/29/knockd-en-centos/"/>
    <updated>2017-06-29T02:06:34-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/06/29/knockd-en-centos</id>
    <content type="html"><![CDATA[<p>Desafortunadamente, los repositorios oficiales de centos no traen port-knocking.
No queda más remiendo que usar un repo de terceros.</p>

<figure class='code'><figcaption><span>&#8220;/etc/yum.repos.d/nux-misc.repo&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [root@proxy ~]# cat /etc/yum.repos.d/nux-misc.repo</span>
</span><span class='line'><span class="go"> [nux-misc]</span>
</span><span class='line'><span class="go"> name=Nux Misc</span>
</span><span class='line'><span class="go"> baseurl=http://li.nux.ro/download/nux/misc/el7/x86_64/</span>
</span><span class='line'><span class="go"> enabled=0</span>
</span><span class='line'><span class="go"> gpgcheck=1</span>
</span><span class='line'><span class="go"> gpgkey=http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro</span>
</span></code></pre></td></tr></table></div></figure>


<p>Luego para instalar, declaramos dicho repositorio como activo.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> yum --enablerepo=nux-misc install knock knock-server</span>
</span><span class='line'><span class="go"> systemctl enable knockd</span>
</span></code></pre></td></tr></table></div></figure>


<p>En mi caso, el /etc/knockd.conf me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/knockd.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'> <span class="k">[options]</span>
</span><span class='line'>   <span class="err">UseSyslog</span>
</span><span class='line'>   <span class="na">Interface</span> <span class="o">=</span> <span class="s">eth1</span>
</span><span class='line'>
</span><span class='line'> <span class="k">[abreme]</span>
</span><span class='line'>   <span class="na">sequence</span> <span class="o">=</span> <span class="s">111,222,333</span>
</span><span class='line'><span class="s">   tcpflags = syn</span>
</span><span class='line'><span class="s">   seq_timeout = 15</span>
</span><span class='line'><span class="s">   cmd_timeout = 8600</span>
</span><span class='line'><span class="s">   start_command = /sbin/iptables -I INPUT -s %IP% -j ACCEPT</span>
</span><span class='line'><span class="s">   stop_command =  /sbin/iptables -D INPUT -s %IP% -j ACCEPT</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nota para imbéciles: Cambia <strong>sequence</strong> por tu secuencia.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apps islámicas android]]></title>
    <link href="http://uranio-235.github.io/blog/2017/06/28/android-islamico/"/>
    <updated>2017-06-28T23:52:26-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/06/28/android-islamico</id>
    <content type="html"><![CDATA[<p>Si queremos decir <em>una aplicación islámica de android bien completa</em>, la que más
se acerca es sin duda es &ldquo;MuslimPro&rdquo;. Por tener, tiene hasta los 99 nombres de
dios, recitados con un corito de lo más lindo. Sin embargo, cosas <strong>sensillas</strong>
como cambiar el adhan, se vuelven complicadas. Si no te cuadran los 3 adhan que
trae, te jodiste, por que lo más bonitos son para la versión de pago.</p>

<p><img class="right" src="http://uranio-235.github.io/images/muslim_daily.png" width="200" title="&#34;portada de Muslim Daily, note como falta la sesión de noticias&#34;" alt="&#34;portada de Muslim Daily, note como falta la sesión de noticias&#34;"></p>

<p>En mi opinión, el adhan debe sonar más enérgico de día, pero el adhan de Isha&#8217;a,
lo prefiero pasivo. Por ello, recomiendo más usar <a href="https://play.google.com/store/apps/details?id=com.honey.prayerassistant"><strong>Muslim Daily</strong></a>.
Antes contaba con una sesión de noticias muy interesante, que se adaptaba a tu
gusto como por arte de magia. No se por qué se la quitaron. También tiene la
Qibla y un calendario islámico bastante poco funcional por cierto; me costó
trabajo entender como conmutar las fechas.</p>

<p>Entre los 9 adhan que ofrece, tenemos el <em>Adhan Nasse Al Qatmi</em> muy apropiado
para Isha&#8217;a, suena bastante sereno.</p>

<p>El corán que esta aplicación provee en español es la traducción de Cortés; una
gran porquería en mi opinión. Pero de igual, si de coranes se trata, prefiero
<a href="https://play.google.com/store/apps/details?id=com.chaks.quran"><strong>El noble corán</strong></a>
Este cuenta con una buena gama de recitaciones en audio para todos los gustos.
Además, el texto en los tres idiomas.</p>

<p><img class="left" src="http://uranio-235.github.io/images/chaksquran.png" width="200" title="&#34;«la apuertura» mostrando texto arábico, transliteración y traducción&#34;" alt="&#34;«la apuertura» mostrando texto arábico, transliteración y traducción&#34;"></p>

<p>Recuerda, que mientras la app esté mostrando el texto en árabe, será entonces
entonces un corán (no una traducción) y debes tener en cuenta el respeto que
esto amerita; así que nada de leer en el baño. También tiene gestor de aleyas
favoritas y permite añadirle notas.</p>

<p><img class="right" src="http://uranio-235.github.io/images/arabe_chat.png" width="200" title="&#34;transcripción a alfabeto de chat&#34;" alt="&#34;transcripción a alfabeto de chat&#34;"></p>

<p>Pero lo que más me gusta es que tiene una transliteración escrita fonéticamente
con <a href="https://es.wikipedia.org/wiki/Alfabeto_de_chat_%C3%A1rabe">árabe de chat</a>.</p>

<p>Por si no lo sabes, esta es una manera de leer árabe con alfabeto latino. Es la
mejor transliteración, ya que fue creada por los árabes de manera espontanea. En
vez de valerse de dígrafos para representar las consonantes; usan simplemente
números. Por ejemplo, <em>ayn</em> (ع) es el 3 y la <em>ha</em> gutural (ح) con el 7. Además,
las vocales entre paréntesis, representan las vocales casi inaudibles que
acompañan de manera implícita a una consonante, como la «i» de la <em>mim</em> (م).</p>

<p>Por último, una aplicación de plegarias. Nada mal para afinar la fonética; la
aplicación <a href="https://play.google.com/store/apps/details?id=com.chaks.duaas"><strong>34 Duaas</strong></a>.</p>

<p>Conclusión, el corán transliterado con árabe de chat de com.chaks.quran, es un
batazo y los adhanes de com.honey.prayerassistant son más variados.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[squid y navegar a .cu]]></title>
    <link href="http://uranio-235.github.io/blog/2017/06/22/curiosa-acl-de-squid/"/>
    <updated>2017-06-22T00:17:11-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/06/22/curiosa-acl-de-squid</id>
    <content type="html"><![CDATA[<p>Aveces las necesidades de nuestros clientes, son tan raras que nos dejan
anonadados. Pero ante necesidades extravagantes; soluciones extravagantes.  Este
post me lo dejo a modo de reflexión, para recordar; que muchas veces, el ingenio
combinado con la simpleza, puede desembocar en soluciones tan hermosas como
raras.</p>

<p>Es común, que en algunos lugares, la navegación a sitios &ldquo;.cu&rdquo; no requiera
autenticación. Aveces poner una ACL como esta</p>

<figure class='code'><figcaption><span>&#8220;squid.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'> <span class="err">acl</span> <span class="err">cuba</span> <span class="err">url_regex</span> <span class="err">\.cu</span>
</span><span class='line'> <span class="err">http_access</span> <span class="err">allow</span> <span class="err">cuba</span>
</span></code></pre></td></tr></table></div></figure>


<p>Aparentemente <em>matamos la jugada</em>, pero luego, metemos una ACL relacionada con
usuarios autenticados y se jodió bicicleta.</p>

<p>El cartel de &ldquo;por favor autentique&rdquo; cae a cuanto &ldquo;.cu&rdquo; se navegue.</p>

<p>Pero tocando el <em>squid.conf</em>, vi esta cosa hermosa</p>

<figure class='code'><figcaption><span>&#8220;squid.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'> <span class="c1">#   acl aclname localport 3128  # TCP port the client connected to [fast]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Decidí que los que vallan a navegar con autenticación, usarán el puerto 8080 y
los vuelos nacionales saldrán por el 3128.</p>

<p>De esta manera, se hace una ACL que niegue las peticiones NO cubanas <strong>sin mostrar
el puto login</strong>.</p>

<figure class='code'><figcaption><span>&#8220;squid.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'> <span class="c1"># aquellos que se conectan por el puerto 3128</span>
</span><span class='line'> <span class="err">acl</span> <span class="err">mortales</span> <span class="err">localport</span> <span class="err">3128</span>
</span><span class='line'>
</span><span class='line'> <span class="c1"># aquellos que se conectan por el 8080</span>
</span><span class='line'> <span class="err">acl</span> <span class="err">olimpo</span> <span class="err">localport</span> <span class="err">8080</span>
</span><span class='line'>
</span><span class='line'> <span class="c1"># los sitios a los que se entran sin contraseña</span>
</span><span class='line'> <span class="err">acl</span> <span class="err">cuba</span> <span class="err">url_regex</span> <span class="err">-i</span> <span class="err">&quot;/etc/squid3/cuba.lst&quot;</span>
</span><span class='line'>
</span><span class='line'> <span class="c1"># CUBANOS</span>
</span><span class='line'> <span class="c1"># lo que valla a cuba,</span>
</span><span class='line'> <span class="c1"># sale sin autenticación</span>
</span><span class='line'> <span class="err">http_access</span> <span class="err">allow</span> <span class="err">mortales</span> <span class="err">cuba</span>
</span><span class='line'> <span class="err">http_access</span> <span class="err">allow</span> <span class="err">CONNECT</span> <span class="err">mortales</span> <span class="err">cuba</span>
</span><span class='line'>
</span><span class='line'> <span class="c1"># deniega a los mortales, lo que no sea cuba</span>
</span><span class='line'> <span class="err">http_access</span> <span class="err">deny</span> <span class="err">mortales</span> <span class="err">!cuba</span>
</span><span class='line'> <span class="err">http_access</span> <span class="err">deny</span> <span class="err">CONNECT</span> <span class="err">mortales</span> <span class="err">!cuba</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> <span class="c1"># PRIVILEGIADOS</span>
</span><span class='line'> <span class="c1"># lo que NO valla para cuba debe autenticarse</span>
</span><span class='line'> <span class="err">http_access</span> <span class="err">allow</span> <span class="err">CONNECT</span> <span class="err">olimpo</span> <span class="err">autenticados</span>
</span><span class='line'> <span class="err">http_access</span> <span class="err">allow</span> <span class="err">olimpo</span> <span class="err">autenticados</span>
</span><span class='line'>
</span><span class='line'> <span class="c1"># y más nada pasa</span>
</span><span class='line'> <span class="err">http_access</span> <span class="err">deny</span> <span class="err">CONNECT</span> <span class="err">all</span>
</span><span class='line'> <span class="err">http_access</span> <span class="err">deny</span> <span class="err">all</span>
</span><span class='line'> <span class="err">icp_access</span> <span class="err">deny</span> <span class="err">all</span>
</span></code></pre></td></tr></table></div></figure>


<p>¿Se entendió? Pasa que squid, al hacerle cualquier petición, que involucre
internet, le mostrará al pobre <em>puntoseunauta</em> el cuadro de diálogo, ya que
para acceder a internet real requiere autenticación; y squid te da la
posibilidad probar que eres <em>usuario de internet</em>. Para evitar esta conducta,
ponemos una cláusula permitiendo que los &ldquo;.cu&rdquo; usando el 3128, pasan. Luego
ponemos otra ACL negando el acceso a lo que <strong>NO</strong> sea .cu por el mismo puerto.
De esta manera, los que tengan solo acceso &ldquo;.cu&rdquo;, usarán el 3128 y la ACL que
involucra autenticación nunca es probada.</p>

<p>Para los autenticados, pusimos una ACL que machea el puerto 8080. O sea, los
usuarios de internet, al hacer su peticiones por el puerto 8080, enseguida las
pedirá autenticación.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[instalar node rápido]]></title>
    <link href="http://uranio-235.github.io/blog/2017/05/13/instalar-node-rapido/"/>
    <updated>2017-05-13T17:13:53-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/05/13/instalar-node-rapido</id>
    <content type="html"><![CDATA[<p>Desde que surgió node, estaba deseando que hubiera una herramienta como RVM para
instalar nodejs. Resulta que la hay!!! Al igual que RVM, requiere cURL. Por
cierto, se llama <strong>n</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> curl -o /usr/local/bin/n https://raw.githubusercontent.com/visionmedia/n/master/bin/n</span>
</span><span class='line'><span class="go"> chmod +x /usr/local/bin/n</span>
</span><span class='line'><span class="go"> n lts</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instala hasta npm!</p>

<p><strong>En debian</strong>, otra manera de hacer esto, es usando el repo oficial que provee node:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> curl -sL https://deb.nodesource.com/setup | bash -</span>
</span><span class='line'><span class="go"> aptitude update</span>
</span><span class='line'><span class="go"> aptitude install nodejs</span>
</span></code></pre></td></tr></table></div></figure>


<p>Acuérdate que algunos paquetes (por no decir que los más usados) requieren
compilar librerías. Así que no olvides instalar <strong>build-essential</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[autoridad certificadora]]></title>
    <link href="http://uranio-235.github.io/blog/2017/05/10/ssl-ca-local/"/>
    <updated>2017-05-10T19:39:19-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/05/10/ssl-ca-local</id>
    <content type="html"><![CDATA[<p>Es un gran mojón tener que generar un certificado para cada servicio. Y aquí, en
el 5to infierno de infomed usar cualquier proveedor de CA gratis (como let&rsquo;s
encrypt) es por gusto.</p>

<p>En estos caso, no queda otro remiendo que usar un CA firmado localmente. La idea
es.</p>

<p>Generamos un par de claves que harán la función de &ldquo;autoridad certificadora&rdquo;</p>

<ul>
<li> crear un Clave Privada (.key) y mantenerla bien escondida</li>
<li> crear la Clave Pública del anterior (.pem) y la distribuimos</li>
</ul>


<p>Una vez que tengamos nuestra autoridad certificadora. Empezamos a generar
certificados y lo firmamos con esta.</p>

<ul>
<li> generamos una clave privada (el .key para este certificado)</li>
<li> hacer una solicitud de certificado (.csr) al .key anterior</li>
<li> generamos el dichoso certificado</li>
<li> firmamos el certificado usando el .key de la CA</li>
</ul>


<p>Usaremos al tan legalmente controversial OpenSSL para esta tarea.</p>

<p>La clave (.key) del CA, debe crearse en una máquina desconectada de la red y
preferiblemente sepultada a 3 metros bajo tierra. Si esto le parece demasiado
paranoico, entonces mantenga el &ldquo;.key&rdquo; en el servidor más aislado de la red.
Preferiblemente, aquel que parezca menos importante y lejos de internet. En mi
caso, yo uso mi laptop personal para tareas administrativas y es ahí donde tengo
todas las claves privadas.</p>

<p>Supón que lo hagas en un servidor determinado. Creamos entonces en el home del
root, un espacio adecuado para esto.</p>

<figure class='code'><figcaption><span>&#8220;creando el directorio&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> mkdir -m700 CA</span>
</span><span class='line'><span class="go"> cd CA</span>
</span><span class='line'><span class="go"> unmask 077</span>
</span></code></pre></td></tr></table></div></figure>


<p>Creamos la super-secretísima clave privada, que hará la función de CA:</p>

<p><strong>openssl genrsa -out rootCA.key 2048</strong></p>

<figure class='code'><figcaption><span>&#8220;creando el .key en la máquina secreta&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$ openssl genrsa -out rootCA.key 2048</span>
</span><span class='line'><span class="go"> Generating RSA private key, 2048 bit long modulus</span>
</span><span class='line'><span class="go"> ..............................+++</span>
</span><span class='line'><span class="go"> .......................................................+++</span>
</span><span class='line'><span class="go"> e is 65537 (0x010001)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya tenemos la piedra angular de nuestro CA; pero así no sirve. Esa es la clave
primaria, o sea, la que tiene la facultad de descifrar y derivar nuevos
certificados. No nos conviene que nuestros &ldquo;usuarios finales&rdquo;, o lo servidores,
usen esta clave. Necesitamos crear una &ldquo;clave pública&rdquo;, esta clave pública se
deriva de la privada, pero solo tiene la facultad de cifrar, así la puede tener
cualquiera y mandarnos datos cifrados. Sin embargo, <strong>NO</strong> se puede usar la clave
pública para DEScifrar. Al menos no; usando tecnología civil.</p>

<p>Nota para los imbéciles: El <strong>rootCA.key</strong> no se le puede dar a nadie.</p>

<p><strong>openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 3650 -out rootCA.pem</strong></p>

<figure class='code'><figcaption><span>&#8220;creando la clave pública&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$  openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 3650 -out rootCA.pem</span>
</span><span class='line'><span class="go"> You are about to be asked to enter information that will be incorporated</span>
</span><span class='line'><span class="go"> into your certificate request.</span>
</span><span class='line'><span class="go"> What you are about to enter is what is called a Distinguished Name or a DN.</span>
</span><span class='line'><span class="go"> There are quite a few fields but you can leave some blank</span>
</span><span class='line'><span class="go"> For some fields there will be a default value,</span>
</span><span class='line'><span class="go"> If you enter &#39;.&#39;, the field will be left blank.</span>
</span><span class='line'><span class="go"> -----</span>
</span><span class='line'><span class="go"> Country Name (2 letter code) [AU]:CU</span>
</span><span class='line'><span class="go"> State or Province Name (full name) [Some-State]:Havana</span>
</span><span class='line'><span class="go"> Locality Name (eg, city) []:Plaza</span>
</span><span class='line'><span class="go"> Organization Name (eg, company) [Internet Widgits Pty Ltd]:Calixto Garcia</span>
</span><span class='line'><span class="go"> Organizational Unit Name (eg, section) []:Calixto Garcia</span>
</span><span class='line'><span class="go"> Common Name (e.g. server FQDN or YOUR name) []:Hospital Calixto Garcia</span>
</span><span class='line'><span class="go"> Email Address []:ssl@hcg.sld.cu</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya tenemos la clave pública (el &ldquo;.pem&rdquo;). Este fichero será distribuido a
nuestros clientes para que puedan hacer dos cosas: Cosa 1, cifrar los datos, sin
poder descifrarlos. Cosa 2, identificar a la autoridad certificadora.</p>

<figure class='code'><figcaption><span>&#8220;la clave privada y publica de nuestra CA&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$ ls</span>
</span><span class='line'><span class="go"> rootCA.key  rootCA.pem</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nota para los imbéciles: El <strong>rootCA.pem</strong> se instalará en los clientes,
navegadores, teléfonos, etc&hellip;</p>

<p>Note además, que hemos dado a nuestra clave pública, 10 años antes de su
caducidad (-days 3650). Quizás quieras darle un solo.</p>

<p><img class="left" src="http://uranio-235.github.io/images/Enigma.jpg" title="&#34;Enigma, un disposotivo criptográfico de cuando no existía SSL.&#34;" alt="&#34;Enigma, un disposotivo criptográfico de cuando no existía SSL.&#34;"></p>

<p>Ya puedes hacer público el &ldquo;.pem&rdquo; para que todo el que sepa que hacer con este,
se lo instale. Por ejemplo, si tienes una intranet local, podrías dejarla con
http plano y brindar información (así como la descarga) sobre el dicha clave.
Puedes crear una página de HTML plano explicando porque SSL y como instalarlo
en los navegadores. Ahí dices además, que se debe iniciar la conexión usando el
prefijo &ldquo;https&rdquo;. Podrías poner esa página como el destino de redirección
para todos los virtualhsot que usen &ldquo;http&rdquo; y así hacer conciencia a los
usuarios. Por ejemplo, en servidores con información sensible (como los
webmails), solo debe ser alcanzado usando ssl.</p>

<p>Pero <strong>sin extremismos</strong>. Una intranet que brinda información pública, no tiene
que ser obligado por SSL (a menos que sea un wordpress con login).</p>

<p>Por cierto, Firefox tiene su propio almacén de certificados. Dirígete a
Configuraciones, Avanzada, Certificados.</p>

<p><img class="right" src="http://uranio-235.github.io/images/localCA1.png" title="&#34;localizando el almacén de certificados&#34;" alt="&#34;localizando el almacén de certificados&#34;"></p>

<p>Una vez ahí, ve a donde dice <strong>Autoridades</strong> (no a tus certificados) y procede a
importar el certificado.</p>

<p><img class="right" src="http://uranio-235.github.io/images/localCA2.png" title="&#34;importando el certificado a firefox&#34;" alt="&#34;importando el certificado a firefox&#34;"></p>

<p>En android también es tremenda balasera instalar el &ldquo;.pem&rdquo; y no dejará de
meterme miedo diciendo que &ldquo;un tercero podría estar manipulando tu información&rdquo;.
Lo cual no deja de ser cierto, poner un SSLbumper a squid bataría para hacer
horrores.</p>

<p><img class="right" src="http://uranio-235.github.io/images/localCA3.png" width="300" height="400" title="&#34;instalando el .pem en android&#34;" alt="&#34;instalando el .pem en android&#34;"></p>

<p>Llégate a la configuración de seguridad y verás una opción que dice &ldquo;instalar
certificados desde la tarjetaSD&rdquo; o &ldquo;desde el almacenamiento&rdquo;.</p>

<p>En algunos android 4, si te pide una clave y no sabes cual es, debes configurar
el acceso al teléfono mediante clave. O sea, quita el patrón, pon una clave y
prueba importar el &ldquo;.pem&rdquo;. Al pedir la clave pones la que estableciste para
entrar. Una vez importado el certificado, vuelves a poner el mecanismo de
seguridad que deses (patrón, ninguno, etc&hellip;)</p>

<h3>de vuelta al servidor secreto</h3>

<p>Pasemos ahora a crear uno (o varios) certificados para nuestros servidores.
Para empezar, crearemos el certificado del servidor de correo, pero no del
smtp, si no del webmail.</p>

<p><strong>MUY IMPORTANTE</strong> en los certificados, el CN (Common Name) no puede ser el que
te de la gana a tí. Si por ejemplo tu servidor de correo está en
webmail.dominio.cu, ese ha de ser su CN</p>

<p>Nota para los imbéciles: Creas un certificado para cada servicio y su CN será el
mismo nombre del virtualhost.</p>

<p>Creamos una clave privada para este servidor (para que pueda cifrar, te requiero
que es bilateral y simétrico).</p>

<p><strong>openssl genrsa -out webmail.key 2048</strong></p>

<figure class='code'><figcaption><span>&#8220;la clave privada del webmail&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$ openssl genrsa -out webmail.key 2048</span>
</span><span class='line'><span class="go"> Generating RSA private key, 2048 bit long modulus</span>
</span><span class='line'><span class="go"> .+++</span>
</span><span class='line'><span class="go"> ......................................................................................+++</span>
</span><span class='line'><span class="go"> e is 65537 (0x010001)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Le pedimos a esta clave que genera un certificado (certificate request).</p>

<p><strong>openssl req -new -key webmail.key -out webmail.csr</strong></p>

<figure class='code'><figcaption><span>&#8220;solicitud de certificado&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$ openssl req -new -key webmail.key -out webmail.csr</span>
</span><span class='line'><span class="go"> You are about to be asked to enter information that will be incorporated</span>
</span><span class='line'><span class="go"> into your certificate request.</span>
</span><span class='line'><span class="go"> What you are about to enter is what is called a Distinguished Name or a DN.</span>
</span><span class='line'><span class="go"> There are quite a few fields but you can leave some blank</span>
</span><span class='line'><span class="go"> For some fields there will be a default value,</span>
</span><span class='line'><span class="go"> If you enter &#39;.&#39;, the field will be left blank.</span>
</span><span class='line'><span class="go"> -----</span>
</span><span class='line'><span class="go"> Country Name (2 letter code) [AU]:CU</span>
</span><span class='line'><span class="go"> State or Province Name (full name) [Some-State]:Havana</span>
</span><span class='line'><span class="go"> Locality Name (eg, city) []:Plaza</span>
</span><span class='line'><span class="go"> Organization Name (eg, company) [Internet Widgits Pty Ltd]:Calixto Garcia</span>
</span><span class='line'><span class="go"> Organizational Unit Name (eg, section) []:Calixto Garcia</span>
</span><span class='line'><span class="go"> Common Name (e.g. server FQDN or YOUR name) []:webmail.hcg.sld.cu</span>
</span><span class='line'><span class="go"> Email Address []:ssl@hcg.sld.cu</span>
</span><span class='line'><span class="go"> </span>
</span><span class='line'><span class="go"> Please enter the following &#39;extra&#39; attributes</span>
</span><span class='line'><span class="go"> to be sent with your certificate request</span>
</span><span class='line'><span class="go"> A challenge password []:</span>
</span><span class='line'><span class="go"> An optional company name []:</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ya tenemos las dos máquinas enigmas listas, pero no están sincronizadas y por
ende, los cifrados producidos producidos por estos dos ficheros, serán
simétricos pero no bilaterales. Alguien debe decirle que son padre e hijo.</p>

<p>Eso lo haremos, firmando con nuestro CA, el certificado generado.</p>

<p><strong>openssl x509 -req -in webmail.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out webmail.crt -days 3650 -sha256</strong></p>

<figure class='code'><figcaption><span>&#8220;firmando el certificado con la CA&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">[lazaro@artema CA]$ openssl x509 -req -in webmail.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out webmail.crt -days 3650 -sha256</span>
</span><span class='line'><span class="go">Signature ok</span>
</span><span class='line'><span class="go">subject=C = CU, ST = Havana, L = Plaza, O = Calixto Garcia, OU = Calixto Garcia, CN = webmail.hcg.sld.cu, emailAddress = ssl@hcg.sld.cu</span>
</span><span class='line'><span class="go">Getting CA Private Key</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note como hacemos uso de las claves pública y privada del CA. Por tanto, si un
atacante adquiere los certificados del webmail y los colocase en otro sitio,
este no machea el CN webmail.hcg.sld.cu y desata una advertencia en el navegador
de nuestros usuarios. Además, no podrá firmar el certificado para modificarlo e
incluir su CN.</p>

<figure class='code'><figcaption><span>&#8220;los certificados del webmail&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">[lazaro@artema CA]$ ls</span>
</span><span class='line'><span class="go">rootCA.key  rootCA.pem  rootCA.srl  webmail.crt  webmail.csr  webmail.key</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bueno, todo listo, hagamos un paquete con todo lo necesario para que nuestro
servidor de correo se lo configure en el webmail. Para postfix y para dovecot,
debemos hacer otro que machee smtp.hcg.sld.cu y pop3.hcg.sld.cu sucesivamete.</p>

<p><strong>REPITO!</strong> el rootCA<strong>.key</strong> <strong>NO</strong> puede hacerse público. Así que le daremos
una copia del rootCA<strong>.pem</strong></p>

<figure class='code'><figcaption><span>&#8220;empaquetando la entrega&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> [lazaro@artema CA]$ mkdir webmail</span>
</span><span class='line'><span class="go"> [lazaro@artema CA]$ mv webmail.* webmail/</span>
</span><span class='line'><span class="go"> [lazaro@artema CA]$ cp rootCA.pem webmail/</span>
</span><span class='line'><span class="go"> [lazaro@artema CA]$ tar cvfz webmail.tar.gz webmail/</span>
</span><span class='line'><span class="go"> webmail/</span>
</span><span class='line'><span class="go"> webmail/webmail.crt</span>
</span><span class='line'><span class="go"> webmail/webmail.csr</span>
</span><span class='line'><span class="go"> webmail/webmail.key</span>
</span><span class='line'><span class="go"> webmail/rootCA.pem</span>
</span><span class='line'><span class="go"> [lazaro@artema CA]$ scp webmail.tar.gz root@webmail.hcg.sld.cu:/root/</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instálale esos certificado a tu
<a href="http://lmgtfy.com/?q=apache+ssl+howto">apache</a>/<a href="http://lmgtfy.com/?q=nginx+ssl+howto">nginx</a>
y todo el que tenga el <strong>rootCA.pem</strong> instalado en su dispositivo; verá a
&ldquo;Calixto Garcia&rdquo; como una legítima autoridad certificadora al abrir el webmail.</p>

<p>Lo que si no me queda claro es como se le instala el &ldquo;.pem&rdquo; a Windows. ¿Sugerencias?</p>

<p><img class="center" src="http://uranio-235.github.io/images/localCA4.png" width="200" height="300" title="&#34;autoridad certificadora, o al menos, eso dicen&#34;" alt="&#34;autoridad certificadora, o al menos, eso dicen&#34;"></p>

<p>Aquí les dejo <a href="https://gist.github.com/acf09c97f0bf27a18f0be9e757df1f80">el script que uso</a> para hacer esto de forma automatizada. Para correrlo cree un directorio. Por ejemplo:</p>

<figure class='code'><figcaption><span>&#8220;CA&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> mkdir miCA</span>
</span><span class='line'><span class="go"> cd miCA</span>
</span><span class='line'><span class="go"> mkcert.sh</span>
</span></code></pre></td></tr></table></div></figure>


<p>Al correrlo la primera vez te creara el <strong>rootCA.pem</strong>, luego al correrlo con
argumentos, se generan certificados para dichos dominios.</p>

<figure class='code'><figcaption><span>&#8220;CA&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> mkcert.sh fulanito.dominio.cu</span>
</span><span class='line'><span class="go"> ...</span>
</span><span class='line'><span class="go"> echo fulanito.dominio.cu.tar.gz está listo para despachar</span>
</span></code></pre></td></tr></table></div></figure>


<p>Te devolverá un .tar.gz con todo dentro.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xen y virt-manager]]></title>
    <link href="http://uranio-235.github.io/blog/2017/04/08/xen-y-virt-manager/"/>
    <updated>2017-04-08T00:04:41-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/04/08/xen-y-virt-manager</id>
    <content type="html"><![CDATA[<p>La miseria, es lo único que; aun repartida a muchos, toca en abundancia.</p>

<p>La superioridad tecnológica de XenServer es indiscutible: seguro (esquema de
pacheo de XOA), versátil (la XAPI), robusto (CentOS) y sencillo (Xen Orchestra
Appliance) y enterprise (next, next, next, install, boot, ready!) PERO:</p>

<p><img class="right" src="http://uranio-235.github.io/images/XenFuPandaWiki.png" title="&#34;el xenfu panda, el logo de Xen, olvidado o desconocido por los usuarios de Citrix XenServer&#34;" alt="&#34;el xenfu panda, el logo de Xen, olvidado o desconocido por los usuarios de Citrix XenServer&#34;"></p>

<p>Cuando los megas de RAM se cuentan con los dedos de una mano, el peso de la XAPI
y la necesidad de tener otra máquina corriendo para el XenOrchestra, DUELEN.
Tomemos por ejemplo, una máquina con 2 gigas de RAM. En mi caso tengo Xen
Orchestra en la laptop, pero desplegar node+servidor en una máquina virtual más;
no es una opción en este escenario. Que se jodan XOA, XenServer y los
capitalistas de la Citrix ¡Hora de ser completamente libre!</p>

<p>Yo hubiera matado la jugada con LXC pero el cliente insiste en usar los 3
sistemas; tal como está en mi esquema del calixto. Lo cierto es que 3
contenedores no inspiran mucha confianza. Tampoco KVM es una buena opción, sobre
todo cuado no hay un super microprocesador.</p>

<p>Rercordemos que: Xen, mejor con CPU, peor peor IO. Mientras que: KVM, mejor IO,
pero CPU más penalizado.</p>

<p>El menú:</p>

<p>Dos interfaces de red, un disco de 500G, 2G de ram, y un CPU que <strong>por suerte</strong>
soporta virtualización. Un switch de 24 puertos a 100 megas, otro a gigabit. Un
friki que oye reguetton, su mujer, la mía, 5 pesos de café en un vaso plástico
y YO.</p>

<p>Las VM y su RAM:</p>

<ul>
<li>debian como servidor de correo (postfix y dovecot, sin webmail) - 512M</li>
<li>alpine como ruter (dns, dhcp y firewall) - 512M</li>
<li>FreeBSD como proxy (squid) - 1G</li>
</ul>


<p>La brujería:</p>

<p><strong>Con suerte</strong> No se matarán por los 2 Gigas de RAM. El squid con usuarios PAM
como autenticación y casi nada en las ACL, además en BSD no come mucha ram.
Alpine es un chiste en lo que a RAM se refiere y el de correo no tendrá un
webmail así que plin.</p>

<p>Los 3 servidores tendrán unos cortafuegos super estrictos. Descartarán todo tipo
de ICMP para evitar cuellos de botella. La LAN funciona a 100 megas y el
servidor está conectado al ÚNICO switch a gigabit. Osea, el server, un switch y
un cable al netgear viejo que está a 100 megas. Con eso, la difusión &ldquo;uno a
varios&rdquo; será mayor y no habrá congestiones, mientras que la peticiones entrantes
(individual) no excederán el 10% el ancho de vianda del servidor. La ley del
embudo.</p>

<p>Entrando en materia:</p>

<p>Volvemos a la génesis de xen pero usaremos virt-manager para manejar el
hypervisor.</p>

<p>Primero que todo, llevamos a cabo una instalación típica de Xen en un debian 8.
Nada que contar; el clásico Dom0.</p>

<figure class='code'><figcaption><span>&#8220;xen-linux-system&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> aptitude update</span>
</span><span class='line'><span class="go"> aptitude install xen-linux-system</span>
</span><span class='line'><span class="go"> dpkg-divert --divert /etc/grub.d/08_linux_xen --rename /etc/grub.d/20_linux_xen</span>
</span></code></pre></td></tr></table></div></figure>


<p>Esta PC tiene dos interfaz de red. Una de cara al router, con una ip/29
&ldquo;públicas&rdquo; y otra interfaz, de cara a la LAN. Por tanto crearemos 3 puentes:</p>

<ul>
<li>br0 de eth0 hacia el router</li>
<li>br1 de eth1 hacia la LAN</li>
<li>br2 para comunicación interna (costumbre, nunca está de más)</li>
</ul>


<p>Así me quedó el <strong>/etc/network/interfaces</strong></p>

<figure class='code'><figcaption><span>&#8220;/etc/network/interfaces&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> # arriba todo el mundo</span>
</span><span class='line'><span class="go"> auto lo eth0 eth1 br0 br1 br2</span>
</span><span class='line'>
</span><span class='line'><span class="go"> # el lo</span>
</span><span class='line'><span class="go"> iface lo inet loopback</span>
</span><span class='line'>
</span><span class='line'><span class="go"> # levanta las dos interfacess</span>
</span><span class='line'><span class="go"> # pa cuando el bridge se levante</span>
</span><span class='line'><span class="go"> iface eth0 inet manual</span>
</span><span class='line'><span class="go"> iface eth1 inet manual</span>
</span><span class='line'>
</span><span class='line'><span class="go"> # puente de la interfaz onboard (WAN)</span>
</span><span class='line'><span class="go"> iface br0 inet static</span>
</span><span class='line'><span class="go">    bridge_ports eth0</span>
</span><span class='line'><span class="go">    bridge_stp off</span>
</span><span class='line'><span class="go">    bridge_waitport 0</span>
</span><span class='line'><span class="go">    bridge_fd 0</span>
</span><span class='line'>
</span><span class='line'><span class="go"> # puente de la interfaz PCI (LAN)</span>
</span><span class='line'><span class="go"> # y la ip del hypervisor para hacer SSH</span>
</span><span class='line'><span class="go"> iface br1 inet manual</span>
</span><span class='line'><span class="go">    address 192.168.99.10</span>
</span><span class='line'><span class="go">    netmask 255.255.255.0</span>
</span><span class='line'><span class="go">    bridge_ports eth1</span>
</span><span class='line'><span class="go">    bridge_stp off</span>
</span><span class='line'><span class="go">    bridge_waitport 0</span>
</span><span class='line'><span class="go">    bridge_fd 0</span>
</span><span class='line'>
</span><span class='line'><span class="go"> # una interfaz de red local de las VM</span>
</span><span class='line'><span class="go"> # note que el puente apunta a la interfaz none</span>
</span><span class='line'><span class="go"> iface br2 inet static</span>
</span><span class='line'><span class="go">    bridge_ports eth0</span>
</span><span class='line'><span class="go">    address 169.254.0.1</span>
</span><span class='line'><span class="go">    netmask 255.255.255.0</span>
</span><span class='line'><span class="go">    bridge_ports none</span>
</span><span class='line'><span class="go">    bridge_stp off</span>
</span><span class='line'><span class="go">    bridge_waitport 0</span>
</span><span class='line'><span class="go">    bridge_fd 0</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora vienen los toques mágicos. <strong>Libvirt!</strong></p>

<figure class='code'><figcaption><span>&#8220;libvirtd&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> apt-get install libvirt-bin</span>
</span></code></pre></td></tr></table></div></figure>


<p>De más está que te diga, que este debian fue instalado sobre LVM. Crea el
directorio <strong>/etc/libvirt/storage/</strong> y dentro, le pondremos un fichero llamado
<strong>xenvg.xml</strong> o comotedelagana<strong>.xml</strong>. Al instalar con el particionado guiado;
el grupo llama hostname-vg, en este caso <strong>xen-vg</strong>. Note como la cláusula
<strong>path</strong>, apunta hacia el mapper del grupo de volumen group y que tanto nombre
del fichero como del pool; no deben contener espacios ni &ldquo;-&rdquo;.</p>

<figure class='code'><figcaption><span>&#8220;/etc/libvirt/storage/xenvg.xml&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;pool</span> <span class="na">type=</span><span class="s">&#39;logical&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>xenvg<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;target&gt;</span>
</span><span class='line'>    <span class="nt">&lt;path&gt;</span>/dev/xen-vg<span class="nt">&lt;/path&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'><span class="nt">&lt;/pool&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora inicializaremos el pool de libvirt:</p>

<figure class='code'><figcaption><span>&#8220;virsh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> virsh pool-define /etc/libvirt/storage/xenvg.xml</span>
</span><span class='line'><span class="go"> virsh pool-start xenvg</span>
</span><span class='line'><span class="go"> virsh pool-autostart xenvg</span>
</span></code></pre></td></tr></table></div></figure>


<p>Corre <strong>virsh pool-info xenvg</strong> para ver si todo pinchó. Llegado a este punto
te recomiendo reiniciar&hellip;</p>

<h4>De regreso a la máquina del informático&hellip;</h4>

<p>Arrancamos el virt-manager:</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager1.png" title="&#34;iniciando virt-manager desde gnome-shell&#34;" alt="&#34;iniciando virt-manager desde gnome-shell&#34;"></p>

<p>De más está que te diga, que las operaciones de libvirt se hacen por
ssh, así que debes tener ssh en la máquina remota; preferiblemente con
autenticación por llaves y no por password.</p>

<figure class='code'><figcaption><span>&#8220;ssh&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> ssh-keygen</span>
</span><span class='line'><span class="go"> ssh-copy-id root@192.168.99.10</span>
</span></code></pre></td></tr></table></div></figure>


<p>Vamos a <strong>File</strong> y <strong>Add connection</strong>, agregaremos una conexión del tipo
<strong>Xen</strong>.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager2.png" title="&#34;conectando al libvirtd del servidor xen&#34;" alt="&#34;conectando al libvirtd del servidor xen&#34;"></p>

<p>De aquí en adelante, es la misma mecánica básica de virt-manager. Solo quiero
hacer un apartado para crear un pool más y me refrito a un pool donde pondremos
los ficheros &ldquo;.iso&rdquo;.</p>

<p>Creamos el directorio donde meteremos los ISO y copiamos el iso que querramos
para allá. Como ya me conocen, soy el enemigo de las plantillas. Confío más en
lo que yo mismo hago que en lo que hacen otros.</p>

<figure class='code'><figcaption><span>&#8220;mkdir&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> ssh root@192.168.99.10 mkdir /opt/isos/</span>
</span><span class='line'><span class="go"> scp ~/Downloads/ISO/*.iso root@192.168.99.10:/opt/isos/</span>
</span></code></pre></td></tr></table></div></figure>


<p>Selecciona la conexión al Xen, y haz click en el botón de crear nueva máquina.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager3.png" title="&#34;creando el repositorio con las iso&#34;" alt="&#34;creando el repositorio con las iso&#34;"></p>

<p>El asistente nos llevará al gestor de almacenamiento. Seleccionamos &ldquo;Local
install media&rdquo; y click en siguiente. Luego &ldquo;Use ISO image&rdquo;.</p>

<p><img class="left" src="http://uranio-235.github.io/images/virtmanager4.png" width="300" height="300" title="&#34;Local Install Media&#34;" alt="&#34;Local Install Media&#34;">
<img class="left" src="http://uranio-235.github.io/images/virtmanager5.png" width="300" height="300" title="&#34;Use ISO image&#34;" alt="&#34;Use ISO image&#34;"></p>

<p>Aquí haces click en <strong>Browse</strong> y te conduce al lugar donde crearemos los ISO.
Inmediatamente te verás en la pantalla donde te pedirá que selecciones los
storage volume. En la imagen se puede apreciar que ya existe uno llamado &ldquo;iso&rdquo;,
pero de igual, para el ejemplo mostraremos como se creará.</p>

<p>Odio las interfaz visual, como hacen pasar trabajo! Pero virsh no es cosa jamón
para mi cliente que no es del todo un hacha en linux.</p>

<p>Bueno&hellip; has click en el signo de más color azul y te mostrará un dialogo que
muestra &ldquo;Create Storage Pool&rdquo;. Lo nombramos &ldquo;iso&rdquo; y le decimos que será del tipo
&ldquo;dir&rdquo;. O sea un directorio común en el sistema de archivos.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager6.png" title="&#34;creando el storage pool de los ISO&#34;" alt="&#34;creando el storage pool de los ISO&#34;"></p>

<p>Como segundo argumento, nos pedirá la ruta. Le daremos la que creamos en el
servidor, en este caso <strong>/opt/isos</strong>.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager7.png" title="&#34;la ruta del SR&#34;" alt="&#34;la ruta del SR&#34;"></p>

<p>Sí todo salió bien, verás los .iso que tiene el directorio.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager8.png" title="&#34;los .iso del directorio&#34;" alt="&#34;los .iso del directorio&#34;"></p>

<p>Al hacer click en el iso seleccionado, vuelve el asistente y muestra que se
usará dicho iso.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager9.png" title="&#34;selecciona el iso&#34;" alt="&#34;selecciona el iso&#34;"></p>

<p>Lo demás es pa mongo, la RAM el disco que creamos en el SR &ldquo;default&rdquo;, etc&hellip;</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager12.png" title="&#34;custumise configeichon befor instal&#34;" alt="&#34;custumise configeichon befor instal&#34;"></p>

<p>Marcamos el <em>check</em> que dice &ldquo;Customize configuration before install&rdquo; y caeremos
en la pantalla que muestra todos los detalles de la máquina.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager14.png" title="&#34;modificando el hardware&#34;" alt="&#34;modificando el hardware&#34;"></p>

<p>Esta pantalla es importante; no permite configurar de manera más exquisita el
hardware. Por ejemplo, las interfaces de redes, yo quiero que tenga como primera
interfaz, la que apunta a br0 y como segunda, la que apunta a br2. Además,
algunas veces la máquinas traen una wacom tablet como interfaz (mariconerías del
virt-manager).</p>

<p>En fin, así me quedó la mía.</p>

<p><img class="center" src="http://uranio-235.github.io/images/virtmanager15.png" title="&#34;arrancando&#34;" alt="&#34;arrancando&#34;"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jugar teeworlds en LAN]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/29/jugar-teeworlds-en-lan/"/>
    <updated>2017-03-29T00:00:16-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/29/jugar-teeworlds-en-lan</id>
    <content type="html"><![CDATA[<p>Un otorrino me ha dejado sorprendido cuando me pidió que le instalara ArchLinux
en su laptop (las todos tenemos de los médicos). La primera vez le instalé
fedora, pero lo quitó y volvió pidiéndome que le instalara arch. El doctor
Bershard, me cuenta las epopeyas de los usuarios de linux en la red de la
habana.</p>

<p><img class="center" src="http://uranio-235.github.io/images/teeworlds.png"></p>

<p>Durante el proceso de &ldquo;que te instalo&rdquo; me mencionó &ldquo;el tiwol&rdquo; como un juego muy
importante. No me imaginé que sería tan fascinante. Similar al minimilitia de
android. Me di cuenta que crear un server, es lanzar un comando y dejarlo
funcionando. La gente se conecta y desconecta del servidor cuando quiera. Se
pueden jugar partidas de equipo, pero la más caliente es el &ldquo;death match&rdquo;. Entra
mata un rato y sale cuando te aburras.</p>

<p>En el calixto el jueguito causó furor (está para windows y se conecta
perfectamente). A cada rato entro y me encuentro 3 o 4 con nombres cada vez más
creativos matándose a tiros y dando brincos.</p>

<p>Según la documentación, al correr <strong>teeworlds_srv -f fichero.cfg</strong> cargará ese
fichero. Muy útil para crear múltiples modos de juego. Al lanzar el comando
<strong>teeworlds_srv</strong> noté que dice:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">[58db3577][storage]: using standard paths</span>
</span><span class='line'><span class="go">[58db3577][storage]: added path &#39;$USERDIR&#39; (&#39;/home/lazaro/.teeworlds&#39;)</span>
</span><span class='line'><span class="go">[58db3577][storage]: added path &#39;$DATADIR&#39; (&#39;/usr/share/teeworlds/data&#39;)</span>
</span><span class='line'><span class="go">[58db3577][storage]: added path &#39;$CURRENTDIR&#39; (&#39;/home/lazaro/.teeworlds&#39;)</span>
</span><span class='line'><span class="go">[58db3577][console]: failed to open &#39;autoexec.cfg&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Así que al crear el fichero <strong>/home/lazaro/.teeworlds/autoexec.cfg</strong> resultó que
se cargaba solo. Pero&hellip; ¿qué metemos ahí?</p>

<figure class='code'><figcaption><span>&#8220;autoexec.cfg&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># teeworld_srv -f este_fichero.cfg</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Los mapas y la secuencia de mapas</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># ls /usr/share/teeworlds/data/maps/</span>
</span><span class='line'><span class="err">sv_map</span> <span class="err">dm7</span>
</span><span class='line'><span class="err">sv_maprotation</span> <span class="err">dm7</span> <span class="err">dm6</span> <span class="err">dm2</span> <span class="err">dm9</span> <span class="err">md8</span> <span class="err">dm1</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># como se ve el servidor</span>
</span><span class='line'><span class="err">sv_name</span> <span class="err">Masacre</span> <span class="err">en</span> <span class="err">el</span> <span class="err">Calixto</span>
</span><span class='line'><span class="err">sv_motd</span> <span class="err">&quot;las</span> <span class="err">teclas</span> <span class="err">son</span> <span class="err">«a»,</span> <span class="err">«d»</span> <span class="err">y</span> <span class="err">Espacio&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># que tipo de juego jugamos</span>
</span><span class='line'><span class="err">sv_gametype</span> <span class="err">dm</span>
</span><span class='line'><span class="err">sv_scorelimit</span> <span class="err">30</span>
</span><span class='line'><span class="err">sv_timelimit</span> <span class="err">0</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># configuración del servidor</span>
</span><span class='line'><span class="err">bindaddr</span> <span class="err">0.0.0.0</span>
</span><span class='line'><span class="err">sv_register</span> <span class="err">to</span> <span class="err">0</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># permite usar la consola remota</span>
</span><span class='line'><span class="err">sv_rcon_password</span> <span class="err">secretisimo</span>
</span></code></pre></td></tr></table></div></figure>


<p>Dice: Jugaremos una ronda de 30 puntos, sin límite de tiempo, que empieza por el
mapa &ldquo;dm7&rdquo;.</p>

<p>El comando <em>sv_maprotation</em> recibe como argumento la lista de mapas. Cada vez
que termine una ronda, se cambiará el mapa.</p>

<p>Más información en el sitio de teeworlds <a href="https://www.teeworlds.com/?page=docs&amp;wiki=server_setup_2">www.teeworlds.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nueva VM siempre es PV]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/17/nueva-vm-siempre-es-pv/"/>
    <updated>2017-03-17T20:46:32-04:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/17/nueva-vm-siempre-es-pv</id>
    <content type="html"><![CDATA[<p>Cuando usamos XenOrchestra, aveces sucede que teniendo un XenServer con &ldquo;muchas&rdquo;
máquinas virtuales, al crear una nueva; se crea como Paravirtualizada (PV) y no
como Virutalización por Hardware (HVM). Nos damos cuenta porque arrancar la
máquina buteando de una unidad óptica es casi imposible.</p>

<p>Algunos creen que es porque XenServer impone un límite. Esto no es cierto, ya
que XenServer es completamente gratuito hoy en día. Simplemente, asume que el
servidor está muy cargado y que una PV es más ligera. En mi experiencia creo que
XenOrchestra es el que hace eso; no xenserver como tal. También influye la
plantilla que utilices para crear una nueva VM.</p>

<p>Cuando esto pase, simplemente tomas la máquina y le dices que se pase a HVM. Lo
haremos seteando un parámetros que involucre HVM.</p>

<figure class='code'><figcaption><span>&#8220;xe&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> xe vm-param-set <span class="nv">uuid</span><span class="o">=</span>uuid-de-la-maquina HVM-boot-policy<span class="o">=</span><span class="s2">&quot;BIOS order&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Al setearle que el orden de buteo será el que diga el bios y listo. La máquina
pasa a ser HVM.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rainloop en debian]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/04/rainloop-en-debian/"/>
    <updated>2017-03-04T13:45:55-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/04/rainloop-en-debian</id>
    <content type="html"><![CDATA[<p>Aún recuerdo que algunos clientes me preguntaban con mucho asombro: &ldquo;-y porque
no roundcube&rdquo;; cuando hablábamos de webmail. Pero finalmente rainloop se ha
puesto de moda en cuba.</p>

<p>Un método bastante perezoso de instalar una LAMP <strong>en Debian</strong>, es instalar el
paquete <strong>phpmyadmin</strong>. Esto instala y configura el servidor SQL; además de
hacer jugar a apache2 con php y mysql, todo de un solo teclazo. Pero aveces, por
ejemplo, al instalar RainLoop, no queremos que phpmyadmin quede instalado. Una
buena variante es desinstalarlo después; pero nos quedan algunos paquetes
innecesarios instalados.</p>

<p>Para lograr la armonía que buscamos, instalaremos la LAMP por partes. Primero
apache SOLO.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> aptitude install apache2</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora instalamos mysql, a través de los metapaquetes, para que se instale el
adecuado de manera automática.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> aptitude install mysql-server mysql-client</span>
</span></code></pre></td></tr></table></div></figure>


<p>Llegado a este punto, debian y su magia te ayudarán a configurar el mysql,
pidiéndote la contraseña del root. Ahora instalamos la piedra angular. El
soporte de php+mysql de apache.</p>

<figure class='code'><figcaption><span>&#8220;soporte de mysql&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> aptitude install php5 libmysqlclient-dev php5-mysql</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instalamos el resto de la paquetería necesaria para rainloop.</p>

<figure class='code'><figcaption><span>&#8220;paquetería de rainloop&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> aptitude install curl libcurl3 libcurl3-dev php5-curl php5-json</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ahora <strong>reinicia</strong> tanto apache como mysql.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go"> systemctl restart mysql</span>
</span><span class='line'><span class="go"> systemctl restart apache2</span>
</span></code></pre></td></tr></table></div></figure>


<p>Crearemos un par de bases de datos necesarias para rainloop. Puedes o no crear
un usuario para rainloop, pero si vamos a tener un servidor sql con dos bases de
datos para una aplicación; la cual además, será la única cosa sql en el
servidor; no vale la pena crear otro usuario. Lo dejo a tu elección.</p>

<figure class='code'><figcaption><span>&#8220;creando las bases&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">create</span> <span class="k">database</span> <span class="n">rainloop</span><span class="p">;</span>
</span><span class='line'><span class="k">create</span> <span class="k">database</span> <span class="n">contactos</span><span class="p">;</span>
</span><span class='line'><span class="k">commit</span><span class="p">;</span>
</span><span class='line'><span class="n">exit</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Si de todas maneras quieres crear el usuario.</p>

<figure class='code'><figcaption><span>&#8220;un usuario pa rainloop&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">create</span> <span class="k">user</span> <span class="n">rainloop</span><span class="o">@</span><span class="n">localhost</span> <span class="n">identified</span> <span class="k">by</span> <span class="ss">&quot;rainloop&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">grant</span> <span class="k">all</span> <span class="k">privileges</span> <span class="k">on</span> <span class="n">rainloop</span><span class="p">.</span><span class="o">*</span> <span class="k">to</span> <span class="n">rainloop</span><span class="o">@</span><span class="n">localhost</span><span class="p">;</span>
</span><span class='line'><span class="n">flush</span> <span class="k">privileges</span><span class="p">;</span>
</span><span class='line'><span class="n">exit</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Y vamos a instalar rainloop! La manera clásica de hacerlo es usando el paquete
&ldquo;.zip&rdquo; del sitio. Si quieres llégate allá y bájatelo. Descomprimes en un
directorio y sigue las instrucciones; sin embargo hay otra manera.</p>

<figure class='code'><figcaption><span>&#8220;alando rainloop del repositorio&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">mkdir -p /var/www/rainloop</span>
</span><span class='line'><span class="go">cd /var/www/rainloop</span>
</span><span class='line'><span class="go">curl -s http://repository.rainloop.net/installer.php | php</span>
</span></code></pre></td></tr></table></div></figure>


<p>Si tienes acceso a internet de verdad. Pinchará. Si estás detrás de un proxy, te
jodiste, hazlo a la manera ortodoxa.</p>

<p>Rainloop es fulísima con los permisos. Si no los tienes claros, dará unos palos
horribles que no tienen nada que ver con permisos aparentemente. Por ejemplo, si
el fichero que dice la versión, no pertenece al usuario que corre el servidor
web, te dirá que no puede encontrar el directorio &ldquo;data&rdquo;. Espectacular! Para
evitar eso, solo los directorios tendrán el ejecutable. Además, todo pertenecerá
al usuario <strong>www-data</strong>; que en debian es el usuario que usa el apache para
correr.</p>

<figure class='code'><figcaption><span>&#8220;estableciendo permisos&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chown -R www-data:www-data .
</span><span class='line'>find . -type d -exec chmod <span class="m">755</span> <span class="o">{}</span> <span class="se">\;</span>
</span><span class='line'>find . -type f -exec chmod <span class="m">644</span> <span class="o">{}</span> <span class="se">\;</span>
</span></code></pre></td></tr></table></div></figure>


<p>No te pondré como hacer el virtualhost porque eso no tengo que explicártelo (no
te hace falta verdad?). Te recomiendo que uses SSL.</p>

<p>No olvides entrar al admin panel (o al fichero de configuración) de rainloop y
pasarle la mano. Para abrir el admin panel, usa la url <strong>/?admin</strong>. Ahí
configura las bases de datos. Muy importante habilitar el soporte de contactos y
especificarle la base de datos, que creo, no debe ser la misma que rainloop;
aunque una gente me dijo que tiene ambas cosas en la misma base de datos; yo no
le he probado.</p>

<p>El usuario por defecto es <strong>admin</strong> y la contraseña es <strong>12345</strong>. De más está
que te diga: <strong>CÁMBIALO!</strong></p>

<p>Si estás de cara a internet, recuerda que rainloop viene con yahoo y gmail
configurado como servidores por defecto. No sé si está habilitados pero
chequéalo. Juraría que hay versiones en que venía habilitado. De todas formas,
te interesará que tus usuarios tengan gmail/yahoo más cerca, especialmente si un
usuario tiene múltiples identidades. Recuérdales que deben habilitar el acceso
pop en su cuenta de gmail.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx y websocket]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/03/nginx-y-websocket/"/>
    <updated>2017-03-03T23:49:47-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/03/nginx-y-websocket</id>
    <content type="html"><![CDATA[<p>Resulta que los websocket no pasan tan fácilmente por el proxy inverso. Llevan
su burumba.</p>

<p>Aquí por ejemplo, haremos un proxy inverso con SSL para una aplicación que
escucha por el puerto 8888.</p>

<figure class='code'><figcaption><span>&#8220;nginx&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">server</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">listen</span> <span class="mi">80</span> <span class="n">default_server</span><span class="p">;</span>
</span><span class='line'>   <span class="k">return</span> <span class="mi">301</span> <span class="nl">https</span><span class="p">:</span><span class="c1">//$host$request_uri;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">server</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">listen</span> <span class="mi">443</span> <span class="n">ssl</span> <span class="n">default_server</span><span class="p">;</span>
</span><span class='line'>   <span class="n">ssl_certificate</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">nginx</span><span class="p">.</span><span class="n">crt</span><span class="p">;</span>
</span><span class='line'>   <span class="n">ssl_certificate_key</span> <span class="o">/</span><span class="n">etc</span><span class="o">/</span><span class="n">nginx</span><span class="o">/</span><span class="n">nginx</span><span class="p">.</span><span class="n">key</span><span class="p">;</span>
</span><span class='line'>   <span class="n">location</span> <span class="o">/</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">proxy_set_header</span>        <span class="n">Host</span> <span class="err">$</span><span class="n">host</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_set_header</span>        <span class="n">X</span><span class="o">-</span><span class="n">Real</span><span class="o">-</span><span class="n">IP</span> <span class="err">$</span><span class="n">remote_addr</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_set_header</span>        <span class="n">X</span><span class="o">-</span><span class="n">Forwarded</span><span class="o">-</span><span class="n">For</span> <span class="err">$</span><span class="n">proxy_add_x_forwarded_for</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_set_header</span>        <span class="n">X</span><span class="o">-</span><span class="n">Forwarded</span><span class="o">-</span><span class="n">Proto</span> <span class="err">$</span><span class="n">scheme</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_pass</span> <span class="nl">http</span><span class="p">:</span><span class="c1">//127.0.0.1:8888/;</span>
</span><span class='line'>      <span class="n">proxy_http_version</span> <span class="mf">1.1</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_set_header</span> <span class="n">Connection</span> <span class="s">&quot;upgrade&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_set_header</span> <span class="n">Upgrade</span> <span class="err">$</span><span class="n">http_upgrade</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_redirect</span> <span class="k">default</span><span class="p">;</span>
</span><span class='line'>      <span class="n">proxy_read_timeout</span> <span class="mi">1800</span><span class="p">;</span>
</span><span class='line'>      <span class="n">client_max_body_size</span> <span class="mi">128</span><span class="n">G</span><span class="p">;</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note como los encabezados Upgrade son seteados. Ese es el truco&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pkg tras un proxy]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/03/pkg-tras-un-proxy/"/>
    <updated>2017-03-03T23:00:57-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/03/pkg-tras-un-proxy</id>
    <content type="html"><![CDATA[<p>En el 5to infierno de infomed, con la vida detrás del proxy que ya he mencionado
incontables veces; todo se vuelve difícil.</p>

<p>Por suerte freebsd ha mejorado en materia de soporte de proxy. Si bien en
<strong>csh</strong>, basta con usar:</p>

<figure class='code'><figcaption><span>&#8220;setenv&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">setenv http_proxy http://proxy.sld.cu:3128</span>
</span><span class='line'><span class="go">setenv https_proxy $http_proxy</span>
</span></code></pre></td></tr></table></div></figure>


<p>Operaciones de rutinas como <strong>pkg audit -F</strong> suelen fallar al ser ejecutadas por
el cron. Setear el proxy de manera global es una opción; pero nunca ha sido de
mi agrado. Por suerte, el nuevo gestor de paquetes de freebsd soporta proxy en
su configuración.</p>

<p>El fichero de configuración está en una ubicación bien extravagante. Nada menos
que en <strong>/usr/local/etc/pkg.conf</strong>. Los comentarios hablan por si solos, vale la
pena mirarlos; no necesitarás leer manual ni buscar en google para darte cuenta
que:</p>

<figure class='code'><figcaption><span>&#8220;/usr/local/etc/pkg.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">PKG_ENV</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>   <span class="nx">http_proxy</span><span class="o">:</span> <span class="s2">&quot;http://proxy.sld.cu:3128&quot;</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>¡Establece el proxy!</p>

<p>Con eso <strong>pkg audit</strong> corrido desde el cron funcionará perfectamente. Además de
las demás operaciones que requieran bajar contenido de internet; claro está.</p>

<p>OJO! Nota que al final de la declaración del proxy, lo que hay es una <strong>coma</strong>,
NO un punto y coma. La configuración parece ser un <strong>json</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[portknocking en freebsd]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/01/portknocking-en-freebsd/"/>
    <updated>2017-03-01T23:53:01-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/01/portknocking-en-freebsd</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://uranio-235.github.io/images/alibaba.jpg" width="400" height="500" title="" ></p>

<p>La técnica port-knocking o knockd para otros, es en mi opinión, <strong>pilar de la
seguridad</strong> en cualquier servidor que use SSH. Aunque es bastante versátil y
puede ser usado hasta para reiniciar servicios sin loguearte.</p>

<p>Una de las cosas que empece a extrañar en FreeBSD fue knockd, pero gracias a la
flexbilidad de ipfw, podemos usar este poderoso software. En FreeBSD el fichero
se encuentra en <strong>/usr/local/etc/knockd.conf.sample</strong> y el paquete se llama
<strong>knock</strong>.</p>

<p>OJO!! Muy importante especificarle la interfaz por la cual va a escuchar.</p>

<figure class='code'><figcaption><span>&#8220;/usr/local/etc/knockd.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'> <span class="k">[options]</span>
</span><span class='line'>         <span class="na">logfile</span> <span class="o">=</span> <span class="s">/var/log/knockd.log</span>
</span><span class='line'><span class="s">         interface = xn0</span>
</span><span class='line'>
</span><span class='line'> <span class="k">[openSSH]</span>
</span><span class='line'>         <span class="na">sequence</span>    <span class="o">=</span> <span class="s">111,222,333</span>
</span><span class='line'><span class="s">         seq_timeout = 9</span>
</span><span class='line'><span class="s">         command     = /sbin/ipfw -q add 00001 allow all from %IP% to me</span>
</span><span class='line'><span class="s">         tcpflags    = syn</span>
</span><span class='line'>
</span><span class='line'> <span class="k">[closeSSH]</span>
</span><span class='line'>         <span class="na">sequence</span>    <span class="o">=</span> <span class="s">222,111,333</span>
</span><span class='line'><span class="s">         seq_timeout = 9</span>
</span><span class='line'><span class="s">         command     = /sbin/ipfw -q delete 00001</span>
</span><span class='line'><span class="s">         tcpflags    = syn</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nada, resumiendo, que el truco está en poner la regla con el número 00001.
Recuerdas que ipfw te permite (casi te obliga a) especificar un número para cada
regla. Pues usaremos ese numerito diminuto para ponerla de primera.</p>

<p>Los tipos ortodoxos criticarán que es una regla <em>al tetón</em>. Pienso que no vale
la pena abrir solo el 22; si voy a pasar tanto trabajo, que se me abra la puerta
completa.</p>

<p>Por cierto, junto con knock, viene un programita para hacer el knocking. Yo
solía hacerlo con netcat pero knock es más cómodo.</p>

<figure class='code'><figcaption><span>&#8220;knock&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">   knock 192.168.3.1 111,222,333</span>
</span></code></pre></td></tr></table></div></figure>


<p>En mi <strong>.bashrc</strong>, tengo esta función declarada.</p>

<figure class='code'><figcaption><span>&#8220;.bashrc&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> abrete_cesamo<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    knock  <span class="nv">$1</span> <span class="m">111</span> <span class="m">222</span> 333
</span><span class='line'>    ssh root@<span class="nv">$1</span>
</span><span class='line'>    knock  <span class="nv">$1</span> <span class="m">222</span> <span class="m">111</span> 333
</span><span class='line'> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>No tengo que decirte que la combinación de puertos está de acorde al ejemplo de
la entrada y que debes cambiarla por la que tu establezcas. Así de esa manera,
hacerle SSH a un servidor es ejecutar <strong>abrete_cesamo ip.del.servidor</strong> Luego al
terminar la sesión ssh, se ejecuta la secuencia de cerrado.</p>

<p>Y hablando de implementaciones raras de knockd!</p>

<p>En alpine linux, iptables está en <strong>/sbin</strong>, no en /usr/sbin. Sin
embargo, el fichero de configuración tiene puesto que está en /usr/sbin/, lo
cual, repito; no es correcto.</p>

<p>Además, tanto en debian como alpine. No importa que pongas en la configuración
porque interfaz escuchará. Siempre lo hará por eth0. Para cambiar esta
situación; debes:</p>

<p>En <strong>alpine</strong> linux, configurar la interfaz en el fichero <strong>/etc/conf.d/knockd</strong></p>

<p>En <strong>debian</strong>, configurar la interfaz (y poner un 1) en <strong>/etc/default/knockd</strong></p>

<p>Recuerda que en linux, el comando de iptables, viene con &ldquo;-A INPUT&rdquo;. Si tienes
un firewall corriendo, obviamente que no pincha; por tanto, ponlo con &ldquo;-I
INPUT&rdquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bind en infomed]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/01/bind-en-infomed/"/>
    <updated>2017-03-01T23:13:34-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/01/bind-en-infomed</id>
    <content type="html"><![CDATA[<p>Seguimos con bind&hellip;</p>

<p>No hace mucho le comentaba a alguien, a raíz de una duda que tenía el colega
Paradyx; la manera correcta de configurar un servidor bind para una red que
cuelga de infomed.</p>

<p>Le comentaba que no vale la pena usar un forward por defecto; que hacer del
dominio &lsquo;.sld.cu&rsquo; una zona forward sería más que suficiente. Digo esto porque
infomed no resuelve ningún dominio que valla más allá de &ldquo;.sld.cu&rdquo;, por tanto,
no vale la pena transferirle las sepetecientas peticiones que hacen cuanta
mierda se conecta a nuestra red (especialmente android).</p>

<figure class='code'><figcaption><span>&#8220;named.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">options</span> <span class="p">{</span>
</span><span class='line'>   <span class="n">directory</span> <span class="s">&quot;/etc/bind/&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="n">pid</span><span class="o">-</span><span class="n">file</span> <span class="s">&quot;/run/named/named.pid&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="n">listen</span><span class="o">-</span><span class="n">on</span> <span class="p">{</span> <span class="mf">10.1.1.1</span><span class="p">;</span> <span class="n">localhost</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>   <span class="n">allow</span><span class="o">-</span><span class="n">transfer</span> <span class="p">{</span> <span class="n">none</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>   <span class="n">allow</span><span class="o">-</span><span class="n">update</span> <span class="p">{</span> <span class="n">none</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>   <span class="n">version</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>   <span class="n">hostname</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>   <span class="n">server</span><span class="o">-</span><span class="n">id</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">view</span> <span class="n">lan</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">match</span><span class="o">-</span><span class="n">clients</span> <span class="p">{</span><span class="mf">10.1.1.0</span><span class="o">/</span><span class="mi">24</span><span class="p">;};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;localhost&quot;</span> <span class="n">IN</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">master</span><span class="p">;</span>
</span><span class='line'>      <span class="n">file</span> <span class="s">&quot;localhost.zone&quot;</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;hcg.sld.cu&quot;</span> <span class="n">IN</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">master</span><span class="p">;</span>
</span><span class='line'>      <span class="n">file</span> <span class="s">&quot;hcg.zone&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">notify</span> <span class="n">no</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>   <span class="n">zone</span> <span class="s">&quot;sld.cu&quot;</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">forwarders</span> <span class="p">{</span> <span class="mf">201.220.222.131</span><span class="p">;</span> <span class="mf">201.220.222.132</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>      <span class="n">type</span> <span class="n">forward</span><span class="p">;</span>
</span><span class='line'>      <span class="n">forward</span> <span class="n">only</span><span class="p">;</span>
</span><span class='line'>   <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">};</span> <span class="c1">// view lan</span>
</span></code></pre></td></tr></table></div></figure>


<p>Como mi dominio es hcg.sld.cu (subdominio de .sld.cu) lo declaramos ARRIBA
del dominio sld.cu. El dominio <strong>hcg.sld.cu</strong> es una zona <strong>master</strong>, sin
embargo, el dominio <strong>sld.cu</strong> es del tipo <strong>forward</strong> y entonces ahí declaramos
los forwarders (los dns de infomed).</p>

<p>Así solo le reenviaremos a infomed, aquellas peticiones que sean para infomed.</p>

<p>En mi opinión esto no es necesario. Tanto así, que la zona donde infomed hace
forward; la tengo para los servidores. En el caso de la zona para LAN,
simplemente declaro los servidores de correo en un fakeroot y listo.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QoS con tc o dummynet]]></title>
    <link href="http://uranio-235.github.io/blog/2017/03/01/qos-con-tc/"/>
    <updated>2017-03-01T19:57:14-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/03/01/qos-con-tc</id>
    <content type="html"><![CDATA[<p>Acá en el 5to infierno de infomed, algunos usuarios; están acostumbrados a usar
un &ldquo;MUA&rdquo; (léase &ldquo;cliente de correo&rdquo;)  para alar el correo de infomed. Con el
boom de la wifi, los médicos querían tener su correo de infomed en el puñetero
cliente de correo de android/ios. Tras hacer un forward a los smtp y pop de
infomed, el ancho de vianda se fue a la mierda. Por tanto, surgió la necesidad
de chapiar el tráfico que va desde/hacia infomed. Por ejemplo, el tráfico smtp,
es saliente (subida), sin embargo, el tráfico pop es entrante (bajada).</p>

<p>El servidor que uso como &ldquo;router&rdquo;, es un alpine linux. El trinomio bind, dhcp e
iptables, sumado al kernel grsec; convierte en mi opinión a alpinelinux en la
mejor opción para un router.</p>

<p>Entrando en materia. Tenemos un canal de 2 megabit (256 KB/s). Pero en HDSL, la
subida es más triste que la bajada; y además, hay más gente bajando correo que
subiendo. Por tanto, usaremos un canal para el smtp, más estrecho que el del
pop. En este caso, <strong>eth0</strong> será la interfaz donde está el router.</p>

<figure class='code'><figcaption><span>&#8220;tc del firewall&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># reiniciamos las colas que hallan en eth0</span>
</span><span class='line'><span class="c"># para empezar a trabajar en limpio</span>
</span><span class='line'>tc qdisc del root dev eth0
</span><span class='line'>tc qdisc add dev eth0 root handle 1: htb default 30
</span><span class='line'>
</span><span class='line'><span class="c"># un canal de 256 KB/s lo partimos en dos</span>
</span><span class='line'><span class="c"># una fracción de 10 KB/s y otro de 20KB/s</span>
</span><span class='line'>tc class add dev eth0 parent 1:  classid 1:1  htb rate 256kbps burst 5k
</span><span class='line'>tc class add dev eth0 parent 1:1 classid 1:10 htb rate  20kbps burst 5k
</span><span class='line'>tc class add dev eth0 parent 1:1 classid 1:11 htb rate  10kbps burst 5k
</span><span class='line'>
</span><span class='line'><span class="c"># lo que valla para el pop e imap, lo dejamos en el :10 con 20kbps</span>
</span><span class='line'>tc filter add dev eth0 parent 1: protocol ip prio <span class="m">1</span> u32 match ip src 201.220.211.7 match ip sport <span class="m">110</span> 0xffff flowid 1:10
</span><span class='line'>tc filter add dev eth0 parent 1: protocol ip prio <span class="m">1</span> u32 match ip src 201.220.211.7 match ip sport <span class="m">143</span> 0xffff flowid 1:10
</span><span class='line'>
</span><span class='line'><span class="c"># lo que valla por el smtp, en el :11 de 10kbps</span>
</span><span class='line'>tc filter add dev eth0 parent 1: protocol ip prio <span class="m">1</span> u32 match ip dst 201.220.211.39 match ip dport <span class="m">25</span> 0xffff flowid 1:11
</span></code></pre></td></tr></table></div></figure>


<p>Note como en el caso de lo que venga del &ldquo;.7&rdquo;, (src) de los puertos pop e imap
(sport) pasarán por la cola <strong>1:10</strong>. Mientras que en el &ldquo;.39&rdquo;, se usan las
cláusulas dst y dport.</p>

<p><strong>pero aquí NO terminan las aventuras de QoS</strong></p>

<p>Resulta que el tráfico proveniente de las WiFi era apabullante para el servidor
proxy. Mientras que de una IP de una máquina entran 3 peticiones, de la IP de
un router wifi entran 30.</p>

<p>En un principio pensaba usar un delay_pool especial para estas ip, pero sería
complicar más el esquema de delay_pool que funciona bien por usuarios. Por
tanto, el tema de la bajada ya está cubierto. Ningún usuario puede acaparar todo
el ancho de banda con una descarga. Sin embargo, 1&#8217;000 peticiones de basura
(android con proxy configurado) ahogan al proxy. La medida fue, que el tráfico
entrante de la wifi, no exceda los 200KB.</p>

<p>En mi caso, los AP usan la ip 10 al 15, por tanto, haciendo un pipe de dummynet
y metiéndolos a todos en ese pipe: -que se fajen por los 200KB!</p>

<figure class='code'><figcaption><span>&#8220;ipfw.rules&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ipfw pipe <span class="m">1</span> config bw 200KBytes
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.10 to me
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.11 to me
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.12 to me
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.13 to me
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.14 to me
</span><span class='line'>ipfw add pipe <span class="m">1</span> ip from 10.1.1.15 to me
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bind personal]]></title>
    <link href="http://uranio-235.github.io/blog/2017/02/22/bind-personal/"/>
    <updated>2017-02-22T21:05:26-05:00</updated>
    <id>http://uranio-235.github.io/blog/2017/02/22/bind-personal</id>
    <content type="html"><![CDATA[<p>Una cosa que me jode, es que linux el tema de los múltiples DNS no los maneje
bien. Por ejemplo, estamos en una LAN con red 192.168.1.0/24 y además,
tenemos una conexión a internet.</p>

<p>Entonces seteas dos DNS en el resolv.conf y no pincha!</p>

<p>Además, si la situación es itinerante (vas a múltiples LAN) mantener la
configuración DNS se vuelve un rollo. Aunque el networkmanager te permita
configurarlo, volvemos a la situación anterior.</p>

<p>Solución, tenemos un bin con sus debidos forwarders para cada red. En mi caso,
el <strong>/etc/named.conf</strong> me quedó así:</p>

<figure class='code'><figcaption><span>&#8220;/etc/named.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="c1">// vim:set ts=4 sw=4 et:</span>
</span><span class='line'><span class="n">options</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">directory</span> <span class="s">&quot;/etc/bind/&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="n">pid</span><span class="o">-</span><span class="n">file</span> <span class="s">&quot;/run/named/named.pid&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="n">allow</span><span class="o">-</span><span class="n">recursion</span> <span class="p">{</span> <span class="mf">127.0.0.1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>        <span class="n">allow</span><span class="o">-</span><span class="n">transfer</span> <span class="p">{</span> <span class="mf">127.0.0.1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>        <span class="n">allow</span><span class="o">-</span><span class="n">update</span> <span class="p">{</span> <span class="mf">127.0.0.1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'>        <span class="n">version</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>        <span class="n">hostname</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>        <span class="n">server</span><span class="o">-</span><span class="n">id</span> <span class="n">none</span><span class="p">;</span>
</span><span class='line'>        <span class="n">recursion</span> <span class="n">yes</span><span class="p">;</span>
</span><span class='line'>        <span class="n">auth</span><span class="o">-</span><span class="n">nxdomain</span> <span class="n">no</span><span class="p">;</span>
</span><span class='line'>        <span class="n">listen</span><span class="o">-</span><span class="n">on</span> <span class="p">{</span> <span class="mf">127.0.0.1</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// la lan por su DNS local</span>
</span><span class='line'><span class="n">zone</span> <span class="s">&quot;dominio.cu&quot;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">type</span> <span class="n">forward</span><span class="p">;</span>
</span><span class='line'>  <span class="n">forwarders</span> <span class="p">{</span> <span class="mf">192.168.1.3</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// lo demás por google</span>
</span><span class='line'><span class="n">zone</span> <span class="s">&quot;.&quot;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">type</span> <span class="n">forward</span><span class="p">;</span>
</span><span class='line'>  <span class="n">forwarders</span> <span class="p">{</span> <span class="mf">8.8.8.8</span><span class="p">;</span> <span class="mf">8.8.4.4</span><span class="p">;</span> <span class="p">};</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>De esta manera, el dominio de la LAN (<strong>dominio.cu</strong>), será resuelto a través
del servidor DNS 192.168.1.3; que es el de la LAN. Para eso usamos la zona
&ldquo;dominio.cu&rdquo; del tipo forward y especificamos a 192.168.1.3 como su forward.</p>

<p>El resto, o sea, la zona &ldquo;.&rdquo;, será también del tipo forward y para este ejemplo,
usamos los dns de google como forward.</p>

<p>Ahora solo te queda actualizar el <strong>/etc/resolv.conf</strong> y setear a 127.0.0.1
como tu servidor dns</p>

<figure class='code'><figcaption><span>&#8220;/etc/resolv.conf&#8221;</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp"># Generated by resolvconf</span>
</span><span class='line'><span class="n">nameserver</span> <span class="mf">127.0.0.1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Recuerda que cada configuración automatizada, actualiza este fichero. Te
recomiendo que no te fajes con el fichero, si no que en cada conexión que desees
usar tu servidor, se lo especifiques. Por ejemplo, con networkmanager, le dices
a N conexión, que el servidor dns es manual y será <em>127.0.0.1</em>. Si usas Gnome
(NetworkManager), te recomiendo usar la utilidad <strong>nm-connection-editor</strong>. Te
permitirá especificar el dominio de búsqueda, cosa que no he visto como hacer
con el administrador de conexiones de gnome.</p>
]]></content>
  </entry>
  
</feed>
